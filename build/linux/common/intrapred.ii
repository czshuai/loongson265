# 1 "/home/loongson/chenzeshuai/x265_v2.6/source/common/intrapred.cpp"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "/home/loongson/chenzeshuai/x265_v2.6/source/common/intrapred.cpp"
# 24 "/home/loongson/chenzeshuai/x265_v2.6/source/common/intrapred.cpp"
# 1 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 1
# 28 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h"
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/algorithm" 1 3
# 58 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/algorithm" 3
       
# 59 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/algorithm" 3

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/utility" 1 3
# 58 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/utility" 3
       
# 59 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/utility" 3
# 68 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/utility" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++config.h" 1 3
# 229 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++config.h" 3

# 229 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++config.h" 3
namespace std
{
  typedef long unsigned int size_t;
  typedef long int ptrdiff_t;




}
# 251 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++config.h" 3
namespace std
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
namespace __gnu_cxx
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
# 533 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++config.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/os_defines.h" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/os_defines.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/features.h" 1 3 4
# 423 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/features.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/cdefs.h" 1 3 4
# 419 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/cdefs.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/wordsize.h" 1 3 4
# 18 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/wordsize.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sgidefs.h" 1 3 4
# 19 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/wordsize.h" 2 3 4
# 420 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/cdefs.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/long-double.h" 1 3 4
# 421 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/cdefs.h" 2 3 4
# 424 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/features.h" 2 3 4
# 447 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/features.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/gnu/stubs.h" 1 3 4
# 35 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/gnu/stubs.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/gnu/stubs-n64_hard.h" 1 3 4
# 36 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/gnu/stubs.h" 2 3 4
# 448 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/features.h" 2 3 4
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/os_defines.h" 2 3
# 534 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++config.h" 2 3


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/cpu_defines.h" 1 3
# 537 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++config.h" 2 3
# 69 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/utility" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_relops.h" 1 3
# 67 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_relops.h" 3
namespace std __attribute__ ((__visibility__ ("default")))
{
  namespace rel_ops
  {
 
# 85 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_relops.h" 3
    template <class _Tp>
      inline bool
      operator!=(const _Tp& __x, const _Tp& __y)
      { return !(__x == __y); }
# 98 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_relops.h" 3
    template <class _Tp>
      inline bool
      operator>(const _Tp& __x, const _Tp& __y)
      { return __y < __x; }
# 111 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_relops.h" 3
    template <class _Tp>
      inline bool
      operator<=(const _Tp& __x, const _Tp& __y)
      { return !(__y < __x); }
# 124 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_relops.h" 3
    template <class _Tp>
      inline bool
      operator>=(const _Tp& __x, const _Tp& __y)
      { return !(__x < __y); }

 
  }

}
# 70 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/utility" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 1 3
# 59 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/move.h" 1 3
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/move.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/concept_check.h" 1 3
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/concept_check.h" 3
       
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/concept_check.h" 3
# 35 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/move.h" 2 3

namespace std __attribute__ ((__visibility__ ("default")))
{







  template<typename _Tp>
    inline _Tp*
    __addressof(_Tp& __r)
    { return __builtin_addressof(__r); }


}
# 166 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/move.h" 3
namespace std __attribute__ ((__visibility__ ("default")))
{

# 181 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/move.h" 3
  template<typename _Tp>
    inline
# 191 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/move.h" 3
    void
    swap(_Tp& __a, _Tp& __b)

    {

     

      _Tp __tmp = (__a);
      __a = (__b);
      __b = (__tmp);
    }




  template<typename _Tp, size_t _Nm>
    inline





    void
    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])

    {
      for (size_t __n = 0; __n < _Nm; ++__n)
 swap(__a[__n], __b[__n]);
    }



}
# 60 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 2 3





namespace std __attribute__ ((__visibility__ ("default")))
{

# 197 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 3
  template<typename _T1, typename _T2>
    struct pair
    {
      typedef _T1 first_type;
      typedef _T2 second_type;

      _T1 first;
      _T2 second;
# 218 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 3
      pair()
      : first(), second() { }
# 237 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 3
      pair(const _T1& __a, const _T2& __b)
      : first(__a), second(__b) { }
# 264 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 3
      template<typename _U1, typename _U2>
 pair(const pair<_U1, _U2>& __p)
 : first(__p.first), second(__p.second) { }
# 434 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 3
    };






  template<typename _T1, typename _T2>
    inline bool
    operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __x.first == __y.first && __x.second == __y.second; }


  template<typename _T1, typename _T2>
    inline bool
    operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __x.first < __y.first
      || (!(__y.first < __x.first) && __x.second < __y.second); }


  template<typename _T1, typename _T2>
    inline bool
    operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__x == __y); }


  template<typename _T1, typename _T2>
    inline bool
    operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return __y < __x; }


  template<typename _T1, typename _T2>
    inline bool
    operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__y < __x); }


  template<typename _T1, typename _T2>
    inline bool
    operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    { return !(__x < __y); }
# 527 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_pair.h" 3
  template<typename _T1, typename _T2>
    inline pair<_T1, _T2>
    make_pair(_T1 __x, _T2 __y)
    { return pair<_T1, _T2>(__x, __y); }





}
# 71 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/utility" 2 3
# 61 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/algorithm" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 1 3
# 60 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/functexcept.h" 1 3
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/functexcept.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/exception_defines.h" 1 3
# 41 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/functexcept.h" 2 3

namespace std __attribute__ ((__visibility__ ("default")))
{



  void
  __throw_bad_exception(void) __attribute__((__noreturn__));


  void
  __throw_bad_alloc(void) __attribute__((__noreturn__));


  void
  __throw_bad_cast(void) __attribute__((__noreturn__));

  void
  __throw_bad_typeid(void) __attribute__((__noreturn__));


  void
  __throw_logic_error(const char*) __attribute__((__noreturn__));

  void
  __throw_domain_error(const char*) __attribute__((__noreturn__));

  void
  __throw_invalid_argument(const char*) __attribute__((__noreturn__));

  void
  __throw_length_error(const char*) __attribute__((__noreturn__));

  void
  __throw_out_of_range(const char*) __attribute__((__noreturn__));

  void
  __throw_out_of_range_fmt(const char*, ...) __attribute__((__noreturn__))
    __attribute__((__format__(__gnu_printf__, 1, 2)));

  void
  __throw_runtime_error(const char*) __attribute__((__noreturn__));

  void
  __throw_range_error(const char*) __attribute__((__noreturn__));

  void
  __throw_overflow_error(const char*) __attribute__((__noreturn__));

  void
  __throw_underflow_error(const char*) __attribute__((__noreturn__));


  void
  __throw_ios_failure(const char*) __attribute__((__noreturn__));

  void
  __throw_system_error(int) __attribute__((__noreturn__));

  void
  __throw_future_error(int) __attribute__((__noreturn__));


  void
  __throw_bad_function_call() __attribute__((__noreturn__));


}
# 61 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/cpp_type_traits.h" 1 3
# 35 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/cpp_type_traits.h" 3
       
# 36 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/cpp_type_traits.h" 3
# 67 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/cpp_type_traits.h" 3
extern "C++" {

namespace std __attribute__ ((__visibility__ ("default")))
{


  struct __true_type { };
  struct __false_type { };

  template<bool>
    struct __truth_type
    { typedef __false_type __type; };

  template<>
    struct __truth_type<true>
    { typedef __true_type __type; };



  template<class _Sp, class _Tp>
    struct __traitor
    {
      enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
      typedef typename __truth_type<__value>::__type __type;
    };


  template<typename, typename>
    struct __are_same
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __are_same<_Tp, _Tp>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<typename _Tp>
    struct __is_void
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_void<void>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_integer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };





  template<>
    struct __is_integer<bool>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<signed char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_integer<wchar_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };
# 190 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/cpp_type_traits.h" 3
  template<>
    struct __is_integer<short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };
# 261 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/cpp_type_traits.h" 3
template<> struct __is_integer<__int128> { enum { __value = 1 }; typedef __true_type __type; }; template<> struct __is_integer<unsigned __int128> { enum { __value = 1 }; typedef __true_type __type; };
# 278 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/cpp_type_traits.h" 3
  template<typename _Tp>
    struct __is_floating
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };


  template<>
    struct __is_floating<float>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<long double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_pointer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __is_pointer<_Tp*>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_arithmetic
    : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
    { };




  template<typename _Tp>
    struct __is_scalar
    : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
    { };




  template<typename _Tp>
    struct __is_char
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_char<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_char<wchar_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<typename _Tp>
    struct __is_byte
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_byte<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_byte<signed char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_byte<unsigned char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_move_iterator
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };



  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
    { return __it; }


}
}
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/type_traits.h" 1 3
# 32 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/type_traits.h" 3
       
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/type_traits.h" 3




extern "C++" {

namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{



  template<bool, typename>
    struct __enable_if
    { };

  template<typename _Tp>
    struct __enable_if<true, _Tp>
    { typedef _Tp __type; };



  template<bool _Cond, typename _Iftrue, typename _Iffalse>
    struct __conditional_type
    { typedef _Iftrue __type; };

  template<typename _Iftrue, typename _Iffalse>
    struct __conditional_type<false, _Iftrue, _Iffalse>
    { typedef _Iffalse __type; };



  template<typename _Tp>
    struct __add_unsigned
    {
    private:
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;

    public:
      typedef typename __if_type::__type __type;
    };

  template<>
    struct __add_unsigned<char>
    { typedef unsigned char __type; };

  template<>
    struct __add_unsigned<signed char>
    { typedef unsigned char __type; };

  template<>
    struct __add_unsigned<short>
    { typedef unsigned short __type; };

  template<>
    struct __add_unsigned<int>
    { typedef unsigned int __type; };

  template<>
    struct __add_unsigned<long>
    { typedef unsigned long __type; };

  template<>
    struct __add_unsigned<long long>
    { typedef unsigned long long __type; };


  template<>
    struct __add_unsigned<bool>;

  template<>
    struct __add_unsigned<wchar_t>;



  template<typename _Tp>
    struct __remove_unsigned
    {
    private:
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;

    public:
      typedef typename __if_type::__type __type;
    };

  template<>
    struct __remove_unsigned<char>
    { typedef signed char __type; };

  template<>
    struct __remove_unsigned<unsigned char>
    { typedef signed char __type; };

  template<>
    struct __remove_unsigned<unsigned short>
    { typedef short __type; };

  template<>
    struct __remove_unsigned<unsigned int>
    { typedef int __type; };

  template<>
    struct __remove_unsigned<unsigned long>
    { typedef long __type; };

  template<>
    struct __remove_unsigned<unsigned long long>
    { typedef long long __type; };


  template<>
    struct __remove_unsigned<bool>;

  template<>
    struct __remove_unsigned<wchar_t>;



  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
    { return __ptr == 0; }

  template<typename _Type>
    inline bool
    __is_null_pointer(_Type)
    { return false; }
# 167 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/type_traits.h" 3
  template<typename _Tp, bool = std::__is_integer<_Tp>::__value>
    struct __promote
    { typedef double __type; };




  template<typename _Tp>
    struct __promote<_Tp, false>
    { };

  template<>
    struct __promote<long double>
    { typedef long double __type; };

  template<>
    struct __promote<double>
    { typedef double __type; };

  template<>
    struct __promote<float>
    { typedef float __type; };

  template<typename _Tp, typename _Up,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type>
    struct __promote_2
    {
      typedef __typeof__(_Tp2() + _Up2()) __type;
    };

  template<typename _Tp, typename _Up, typename _Vp,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type,
           typename _Vp2 = typename __promote<_Vp>::__type>
    struct __promote_3
    {
      typedef __typeof__(_Tp2() + _Up2() + _Vp2()) __type;
    };

  template<typename _Tp, typename _Up, typename _Vp, typename _Wp,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type,
           typename _Vp2 = typename __promote<_Vp>::__type,
           typename _Wp2 = typename __promote<_Wp>::__type>
    struct __promote_4
    {
      typedef __typeof__(_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };


}
}
# 63 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/numeric_traits.h" 1 3
# 32 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/numeric_traits.h" 3
       
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/numeric_traits.h" 3




namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{

# 54 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/numeric_traits.h" 3
  template<typename _Value>
    struct __numeric_traits_integer
    {

      static const _Value __min = (((_Value)(-1) < 0) ? (_Value)1 << (sizeof(_Value) * 8 - ((_Value)(-1) < 0)) : (_Value)0);
      static const _Value __max = (((_Value)(-1) < 0) ? (((((_Value)1 << ((sizeof(_Value) * 8 - ((_Value)(-1) < 0)) - 1)) - 1) << 1) + 1) : ~(_Value)0);



      static const bool __is_signed = ((_Value)(-1) < 0);
      static const int __digits = (sizeof(_Value) * 8 - ((_Value)(-1) < 0));
    };

  template<typename _Value>
    const _Value __numeric_traits_integer<_Value>::__min;

  template<typename _Value>
    const _Value __numeric_traits_integer<_Value>::__max;

  template<typename _Value>
    const bool __numeric_traits_integer<_Value>::__is_signed;

  template<typename _Value>
    const int __numeric_traits_integer<_Value>::__digits;
# 99 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/numeric_traits.h" 3
  template<typename _Value>
    struct __numeric_traits_floating
    {

      static const int __max_digits10 = (2 + (std::__are_same<_Value, float>::__value ? 24 : std::__are_same<_Value, double>::__value ? 53 : 113) * 643L / 2136);


      static const bool __is_signed = true;
      static const int __digits10 = (std::__are_same<_Value, float>::__value ? 6 : std::__are_same<_Value, double>::__value ? 15 : 33);
      static const int __max_exponent10 = (std::__are_same<_Value, float>::__value ? 38 : std::__are_same<_Value, double>::__value ? 308 : 4932);
    };

  template<typename _Value>
    const int __numeric_traits_floating<_Value>::__max_digits10;

  template<typename _Value>
    const bool __numeric_traits_floating<_Value>::__is_signed;

  template<typename _Value>
    const int __numeric_traits_floating<_Value>::__digits10;

  template<typename _Value>
    const int __numeric_traits_floating<_Value>::__max_exponent10;

  template<typename _Value>
    struct __numeric_traits
    : public __conditional_type<std::__is_integer<_Value>::__value,
    __numeric_traits_integer<_Value>,
    __numeric_traits_floating<_Value> >::__type
    { };


}
# 64 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_types.h" 1 3
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_types.h" 3
       
# 63 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_types.h" 3







namespace std __attribute__ ((__visibility__ ("default")))
{

# 89 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_types.h" 3
  struct input_iterator_tag { };


  struct output_iterator_tag { };


  struct forward_iterator_tag : public input_iterator_tag { };



  struct bidirectional_iterator_tag : public forward_iterator_tag { };



  struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 116 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_types.h" 3
  template<typename _Category, typename _Tp, typename _Distance = ptrdiff_t,
           typename _Pointer = _Tp*, typename _Reference = _Tp&>
    struct iterator
    {

      typedef _Category iterator_category;

      typedef _Tp value_type;

      typedef _Distance difference_type;

      typedef _Pointer pointer;

      typedef _Reference reference;
    };
# 165 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_types.h" 3
  template<typename _Iterator>
    struct iterator_traits
    {
      typedef typename _Iterator::iterator_category iterator_category;
      typedef typename _Iterator::value_type value_type;
      typedef typename _Iterator::difference_type difference_type;
      typedef typename _Iterator::pointer pointer;
      typedef typename _Iterator::reference reference;
    };



  template<typename _Tp>
    struct iterator_traits<_Tp*>
    {
      typedef random_access_iterator_tag iterator_category;
      typedef _Tp value_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef _Tp& reference;
    };


  template<typename _Tp>
    struct iterator_traits<const _Tp*>
    {
      typedef random_access_iterator_tag iterator_category;
      typedef _Tp value_type;
      typedef ptrdiff_t difference_type;
      typedef const _Tp* pointer;
      typedef const _Tp& reference;
    };





  template<typename _Iter>
    inline
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    { return typename iterator_traits<_Iter>::iterator_category(); }






  template<typename _Iterator, bool _HasBase>
    struct _Iter_base
    {
      typedef _Iterator iterator_type;
      static iterator_type _S_base(_Iterator __it)
      { return __it; }
    };

  template<typename _Iterator>
    struct _Iter_base<_Iterator, true>
    {
      typedef typename _Iterator::iterator_type iterator_type;
      static iterator_type _S_base(_Iterator __it)
      { return __it.base(); }
    };
# 238 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_types.h" 3

}
# 66 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_funcs.h" 1 3
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_funcs.h" 3
       
# 63 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_funcs.h" 3


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/debug/assertions.h" 1 3
# 66 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_funcs.h" 2 3

namespace std __attribute__ ((__visibility__ ("default")))
{


  template <typename> struct _List_iterator;
  template <typename> struct _List_const_iterator;




  template<typename _InputIterator>
    inline
    typename iterator_traits<_InputIterator>::difference_type
    __distance(_InputIterator __first, _InputIterator __last,
               input_iterator_tag)
    {

     

      typename iterator_traits<_InputIterator>::difference_type __n = 0;
      while (__first != __last)
 {
   ++__first;
   ++__n;
 }
      return __n;
    }

  template<typename _RandomAccessIterator>
    inline
    typename iterator_traits<_RandomAccessIterator>::difference_type
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
               random_access_iterator_tag)
    {

     

      return __last - __first;
    }



  template<typename _Tp>
    ptrdiff_t
    __distance(std::_List_iterator<_Tp>,
        std::_List_iterator<_Tp>,
        input_iterator_tag);

  template<typename _Tp>
    ptrdiff_t
    __distance(std::_List_const_iterator<_Tp>,
        std::_List_const_iterator<_Tp>,
        input_iterator_tag);
# 135 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_funcs.h" 3
  template<typename _InputIterator>
    inline
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    {

      return std::__distance(__first, __last,
        std::__iterator_category(__first));
    }

  template<typename _InputIterator, typename _Distance>
    inline void
    __advance(_InputIterator& __i, _Distance __n, input_iterator_tag)
    {

     
      ;
      while (__n--)
 ++__i;
    }

  template<typename _BidirectionalIterator, typename _Distance>
    inline void
    __advance(_BidirectionalIterator& __i, _Distance __n,
       bidirectional_iterator_tag)
    {

     

      if (__n > 0)
        while (__n--)
   ++__i;
      else
        while (__n++)
   --__i;
    }

  template<typename _RandomAccessIterator, typename _Distance>
    inline void
    __advance(_RandomAccessIterator& __i, _Distance __n,
              random_access_iterator_tag)
    {

     

      __i += __n;
    }
# 195 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_funcs.h" 3
  template<typename _InputIterator, typename _Distance>
    inline void
    advance(_InputIterator& __i, _Distance __n)
    {

      typename iterator_traits<_InputIterator>::difference_type __d = __n;
      std::__advance(__i, __d, std::__iterator_category(__i));
    }
# 232 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator_base_funcs.h" 3

}
# 67 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 1 3
# 66 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/ptr_traits.h" 1 3
# 67 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 2 3





namespace std __attribute__ ((__visibility__ ("default")))
{

# 100 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Iterator>
    class reverse_iterator
    : public iterator<typename iterator_traits<_Iterator>::iterator_category,
        typename iterator_traits<_Iterator>::value_type,
        typename iterator_traits<_Iterator>::difference_type,
        typename iterator_traits<_Iterator>::pointer,
                      typename iterator_traits<_Iterator>::reference>
    {
    protected:
      _Iterator current;

      typedef iterator_traits<_Iterator> __traits_type;

    public:
      typedef _Iterator iterator_type;
      typedef typename __traits_type::difference_type difference_type;
      typedef typename __traits_type::pointer pointer;
      typedef typename __traits_type::reference reference;







     
      reverse_iterator() : current() { }




      explicit
      reverse_iterator(iterator_type __x) : current(__x) { }




     
      reverse_iterator(const reverse_iterator& __x)
      : current(__x.current) { }





      template<typename _Iter>

        reverse_iterator(const reverse_iterator<_Iter>& __x)
 : current(__x.base()) { }




      iterator_type
      base() const
      { return current; }
# 167 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
      reference
      operator*() const
      {
 _Iterator __tmp = current;
 return *--__tmp;
      }






      pointer
      operator->() const
      { return &(operator*()); }






      reverse_iterator&
      operator++()
      {
 --current;
 return *this;
      }






      reverse_iterator
      operator++(int)
      {
 reverse_iterator __tmp = *this;
 --current;
 return __tmp;
      }






      reverse_iterator&
      operator--()
      {
 ++current;
 return *this;
      }






      reverse_iterator
      operator--(int)
      {
 reverse_iterator __tmp = *this;
 ++current;
 return __tmp;
      }






      reverse_iterator
      operator+(difference_type __n) const
      { return reverse_iterator(current - __n); }







      reverse_iterator&
      operator+=(difference_type __n)
      {
 current -= __n;
 return *this;
      }






      reverse_iterator
      operator-(difference_type __n) const
      { return reverse_iterator(current + __n); }







      reverse_iterator&
      operator-=(difference_type __n)
      {
 current += __n;
 return *this;
      }






      reference
      operator[](difference_type __n) const
      { return *(*this + __n); }
    };
# 297 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Iterator>
    inline bool
    operator==(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return __x.base() == __y.base(); }

  template<typename _Iterator>
    inline bool
    operator<(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y.base() < __x.base(); }

  template<typename _Iterator>
    inline bool
    operator!=(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return !(__x == __y); }

  template<typename _Iterator>
    inline bool
    operator>(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y < __x; }

  template<typename _Iterator>
    inline bool
    operator<=(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return !(__y < __x); }

  template<typename _Iterator>
    inline bool
    operator>=(const reverse_iterator<_Iterator>& __x,
        const reverse_iterator<_Iterator>& __y)
    { return !(__x < __y); }



  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator==(const reverse_iterator<_IteratorL>& __x,
        const reverse_iterator<_IteratorR>& __y)
    { return __x.base() == __y.base(); }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator<(const reverse_iterator<_IteratorL>& __x,
       const reverse_iterator<_IteratorR>& __y)
    { return __y.base() < __x.base(); }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator!=(const reverse_iterator<_IteratorL>& __x,
        const reverse_iterator<_IteratorR>& __y)
    { return !(__x == __y); }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator>(const reverse_iterator<_IteratorL>& __x,
       const reverse_iterator<_IteratorR>& __y)
    { return __y < __x; }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator<=(const reverse_iterator<_IteratorL>& __x,
        const reverse_iterator<_IteratorR>& __y)
    { return !(__y < __x); }

  template<typename _IteratorL, typename _IteratorR>
    inline bool
    operator>=(const reverse_iterator<_IteratorL>& __x,
        const reverse_iterator<_IteratorR>& __y)
    { return !(__x < __y); }



  template<typename _Iterator>
    inline typename reverse_iterator<_Iterator>::difference_type
    operator-(const reverse_iterator<_Iterator>& __x,
       const reverse_iterator<_Iterator>& __y)
    { return __y.base() - __x.base(); }

  template<typename _IteratorL, typename _IteratorR>
    inline typename reverse_iterator<_IteratorL>::difference_type
    operator-(const reverse_iterator<_IteratorL>& __x,
       const reverse_iterator<_IteratorR>& __y)
    { return __y.base() - __x.base(); }
# 395 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Iterator>
    inline reverse_iterator<_Iterator>
    operator+(typename reverse_iterator<_Iterator>::difference_type __n,
       const reverse_iterator<_Iterator>& __x)
    { return reverse_iterator<_Iterator>(__x.base() - __n); }
# 451 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Container>
    class back_insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;

    public:

      typedef _Container container_type;


      explicit
      back_insert_iterator(_Container& __x)
      : container(std::__addressof(__x)) { }
# 479 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
      back_insert_iterator&
      operator=(typename _Container::const_reference __value)
      {
 container->push_back(__value);
 return *this;
      }
# 502 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
      back_insert_iterator&
      operator*()
      { return *this; }


      back_insert_iterator&
      operator++()
      { return *this; }


      back_insert_iterator
      operator++(int)
      { return *this; }
    };
# 528 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Container>
    inline back_insert_iterator<_Container>
    back_inserter(_Container& __x)
    { return back_insert_iterator<_Container>(__x); }
# 543 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Container>
    class front_insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;

    public:

      typedef _Container container_type;


      explicit front_insert_iterator(_Container& __x)
      : container(std::__addressof(__x)) { }
# 570 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
      front_insert_iterator&
      operator=(typename _Container::const_reference __value)
      {
 container->push_front(__value);
 return *this;
      }
# 593 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
      front_insert_iterator&
      operator*()
      { return *this; }


      front_insert_iterator&
      operator++()
      { return *this; }


      front_insert_iterator
      operator++(int)
      { return *this; }
    };
# 619 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Container>
    inline front_insert_iterator<_Container>
    front_inserter(_Container& __x)
    { return front_insert_iterator<_Container>(__x); }
# 638 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Container>
    class insert_iterator
    : public iterator<output_iterator_tag, void, void, void, void>
    {
    protected:
      _Container* container;
      typename _Container::iterator iter;

    public:

      typedef _Container container_type;





      insert_iterator(_Container& __x, typename _Container::iterator __i)
      : container(std::__addressof(__x)), iter(__i) {}
# 681 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
      insert_iterator&
      operator=(typename _Container::const_reference __value)
      {
 iter = container->insert(iter, __value);
 ++iter;
 return *this;
      }
# 707 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
      insert_iterator&
      operator*()
      { return *this; }


      insert_iterator&
      operator++()
      { return *this; }


      insert_iterator&
      operator++(int)
      { return *this; }
    };
# 733 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _Container, typename _Iterator>
    inline insert_iterator<_Container>
    inserter(_Container& __x, _Iterator __i)
    {
      return insert_iterator<_Container>(__x,
      typename _Container::iterator(__i));
    }




}

namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{

# 757 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  using std::iterator_traits;
  using std::iterator;
  template<typename _Iterator, typename _Container>
    class __normal_iterator
    {
    protected:
      _Iterator _M_current;

      typedef iterator_traits<_Iterator> __traits_type;

    public:
      typedef _Iterator iterator_type;
      typedef typename __traits_type::iterator_category iterator_category;
      typedef typename __traits_type::value_type value_type;
      typedef typename __traits_type::difference_type difference_type;
      typedef typename __traits_type::reference reference;
      typedef typename __traits_type::pointer pointer;

      __normal_iterator()
      : _M_current(_Iterator()) { }

      explicit
      __normal_iterator(const _Iterator& __i)
      : _M_current(__i) { }


      template<typename _Iter>
        __normal_iterator(const __normal_iterator<_Iter,
     typename __enable_if<
              (std::__are_same<_Iter, typename _Container::pointer>::__value),
        _Container>::__type>& __i)
        : _M_current(__i.base()) { }


      reference
      operator*() const
      { return *_M_current; }

      pointer
      operator->() const
      { return _M_current; }

      __normal_iterator&
      operator++()
      {
 ++_M_current;
 return *this;
      }

      __normal_iterator
      operator++(int)
      { return __normal_iterator(_M_current++); }


      __normal_iterator&
      operator--()
      {
 --_M_current;
 return *this;
      }

      __normal_iterator
      operator--(int)
      { return __normal_iterator(_M_current--); }


      reference
      operator[](difference_type __n) const
      { return _M_current[__n]; }

      __normal_iterator&
      operator+=(difference_type __n)
      { _M_current += __n; return *this; }

      __normal_iterator
      operator+(difference_type __n) const
      { return __normal_iterator(_M_current + __n); }

      __normal_iterator&
      operator-=(difference_type __n)
      { _M_current -= __n; return *this; }

      __normal_iterator
      operator-(difference_type __n) const
      { return __normal_iterator(_M_current - __n); }

      const _Iterator&
      base() const
      { return _M_current; }
    };
# 857 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_iterator.h" 3
  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
   
    { return __lhs.base() == __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
   
    { return __lhs.base() == __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
   
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
   
    { return __lhs.base() != __rhs.base(); }


  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)
   
    { return __lhs.base() < __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
       const __normal_iterator<_Iterator, _Container>& __rhs)
   
    { return __lhs.base() < __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)
   
    { return __lhs.base() > __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
       const __normal_iterator<_Iterator, _Container>& __rhs)
   
    { return __lhs.base() > __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
   
    { return __lhs.base() <= __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
   
    { return __lhs.base() <= __rhs.base(); }

  template<typename _IteratorL, typename _IteratorR, typename _Container>
    inline bool
    operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
        const __normal_iterator<_IteratorR, _Container>& __rhs)
   
    { return __lhs.base() >= __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline bool
    operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
        const __normal_iterator<_Iterator, _Container>& __rhs)
   
    { return __lhs.base() >= __rhs.base(); }





  template<typename _IteratorL, typename _IteratorR, typename _Container>







    inline typename __normal_iterator<_IteratorL, _Container>::difference_type
    operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
       const __normal_iterator<_IteratorR, _Container>& __rhs)

    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
       const __normal_iterator<_Iterator, _Container>& __rhs)
   
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    inline __normal_iterator<_Iterator, _Container>
    operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
       __n, const __normal_iterator<_Iterator, _Container>& __i)
   
    { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }


}

namespace std __attribute__ ((__visibility__ ("default")))
{


  template<typename _Iterator, typename _Container>
    _Iterator
    __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
    { return __it.base(); }


}
# 68 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/debug/debug.h" 1 3
# 48 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/debug/debug.h" 3
namespace std
{
  namespace __debug { }
}




namespace __gnu_debug
{
  using namespace std::__debug;
}
# 70 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/predefined_ops.h" 1 3
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/predefined_ops.h" 3
namespace __gnu_cxx
{
namespace __ops
{
  struct _Iter_less_iter
  {
    template<typename _Iterator1, typename _Iterator2>
     
      bool
      operator()(_Iterator1 __it1, _Iterator2 __it2) const
      { return *__it1 < *__it2; }
  };

 
  inline _Iter_less_iter
  __iter_less_iter()
  { return _Iter_less_iter(); }

  struct _Iter_less_val
  {



    _Iter_less_val() { }


    explicit
    _Iter_less_val(_Iter_less_iter) { }

    template<typename _Iterator, typename _Value>
      bool
      operator()(_Iterator __it, _Value& __val) const
      { return *__it < __val; }
  };

  inline _Iter_less_val
  __iter_less_val()
  { return _Iter_less_val(); }

  inline _Iter_less_val
  __iter_comp_val(_Iter_less_iter)
  { return _Iter_less_val(); }

  struct _Val_less_iter
  {



    _Val_less_iter() { }


    explicit
    _Val_less_iter(_Iter_less_iter) { }

    template<typename _Value, typename _Iterator>
      bool
      operator()(_Value& __val, _Iterator __it) const
      { return __val < *__it; }
  };

  inline _Val_less_iter
  __val_less_iter()
  { return _Val_less_iter(); }

  inline _Val_less_iter
  __val_comp_iter(_Iter_less_iter)
  { return _Val_less_iter(); }

  struct _Iter_equal_to_iter
  {
    template<typename _Iterator1, typename _Iterator2>
      bool
      operator()(_Iterator1 __it1, _Iterator2 __it2) const
      { return *__it1 == *__it2; }
  };

  inline _Iter_equal_to_iter
  __iter_equal_to_iter()
  { return _Iter_equal_to_iter(); }

  struct _Iter_equal_to_val
  {
    template<typename _Iterator, typename _Value>
      bool
      operator()(_Iterator __it, _Value& __val) const
      { return *__it == __val; }
  };

  inline _Iter_equal_to_val
  __iter_equal_to_val()
  { return _Iter_equal_to_val(); }

  inline _Iter_equal_to_val
  __iter_comp_val(_Iter_equal_to_iter)
  { return _Iter_equal_to_val(); }

  template<typename _Compare>
    struct _Iter_comp_iter
    {
      _Compare _M_comp;

      explicit
      _Iter_comp_iter(_Compare __comp)
 : _M_comp((__comp))
      { }

      template<typename _Iterator1, typename _Iterator2>
       
        bool
        operator()(_Iterator1 __it1, _Iterator2 __it2)
        { return bool(_M_comp(*__it1, *__it2)); }
    };

  template<typename _Compare>
   
    inline _Iter_comp_iter<_Compare>
    __iter_comp_iter(_Compare __comp)
    { return _Iter_comp_iter<_Compare>((__comp)); }

  template<typename _Compare>
    struct _Iter_comp_val
    {
      _Compare _M_comp;

      explicit
      _Iter_comp_val(_Compare __comp)
 : _M_comp((__comp))
      { }

      explicit
      _Iter_comp_val(const _Iter_comp_iter<_Compare>& __comp)
 : _M_comp(__comp._M_comp)
      { }
# 174 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/predefined_ops.h" 3
      template<typename _Iterator, typename _Value>
 bool
 operator()(_Iterator __it, _Value& __val)
 { return bool(_M_comp(*__it, __val)); }
    };

  template<typename _Compare>
   inline _Iter_comp_val<_Compare>
    __iter_comp_val(_Compare __comp)
    { return _Iter_comp_val<_Compare>((__comp)); }

  template<typename _Compare>
    inline _Iter_comp_val<_Compare>
    __iter_comp_val(_Iter_comp_iter<_Compare> __comp)
    { return _Iter_comp_val<_Compare>((__comp)); }

  template<typename _Compare>
    struct _Val_comp_iter
    {
      _Compare _M_comp;

      explicit
      _Val_comp_iter(_Compare __comp)
 : _M_comp((__comp))
      { }

      explicit
      _Val_comp_iter(const _Iter_comp_iter<_Compare>& __comp)
 : _M_comp(__comp._M_comp)
      { }
# 212 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/predefined_ops.h" 3
      template<typename _Value, typename _Iterator>
 bool
 operator()(_Value& __val, _Iterator __it)
 { return bool(_M_comp(__val, *__it)); }
    };

  template<typename _Compare>
    inline _Val_comp_iter<_Compare>
    __val_comp_iter(_Compare __comp)
    { return _Val_comp_iter<_Compare>((__comp)); }

  template<typename _Compare>
    inline _Val_comp_iter<_Compare>
    __val_comp_iter(_Iter_comp_iter<_Compare> __comp)
    { return _Val_comp_iter<_Compare>((__comp)); }

  template<typename _Value>
    struct _Iter_equals_val
    {
      _Value& _M_value;

      explicit
      _Iter_equals_val(_Value& __value)
 : _M_value(__value)
      { }

      template<typename _Iterator>
 bool
 operator()(_Iterator __it)
 { return *__it == _M_value; }
    };

  template<typename _Value>
    inline _Iter_equals_val<_Value>
    __iter_equals_val(_Value& __val)
    { return _Iter_equals_val<_Value>(__val); }

  template<typename _Iterator1>
    struct _Iter_equals_iter
    {
      _Iterator1 _M_it1;

      explicit
      _Iter_equals_iter(_Iterator1 __it1)
 : _M_it1(__it1)
      { }

      template<typename _Iterator2>
 bool
 operator()(_Iterator2 __it2)
 { return *__it2 == *_M_it1; }
    };

  template<typename _Iterator>
    inline _Iter_equals_iter<_Iterator>
    __iter_comp_iter(_Iter_equal_to_iter, _Iterator __it)
    { return _Iter_equals_iter<_Iterator>(__it); }

  template<typename _Predicate>
    struct _Iter_pred
    {
      _Predicate _M_pred;

      explicit
      _Iter_pred(_Predicate __pred)
 : _M_pred((__pred))
      { }

      template<typename _Iterator>
 bool
 operator()(_Iterator __it)
 { return bool(_M_pred(*__it)); }
    };

  template<typename _Predicate>
    inline _Iter_pred<_Predicate>
    __pred_iter(_Predicate __pred)
    { return _Iter_pred<_Predicate>((__pred)); }

  template<typename _Compare, typename _Value>
    struct _Iter_comp_to_val
    {
      _Compare _M_comp;
      _Value& _M_value;

      _Iter_comp_to_val(_Compare __comp, _Value& __value)
 : _M_comp((__comp)), _M_value(__value)
      { }

      template<typename _Iterator>
 bool
 operator()(_Iterator __it)
 { return bool(_M_comp(*__it, _M_value)); }
    };

  template<typename _Compare, typename _Value>
    _Iter_comp_to_val<_Compare, _Value>
    __iter_comp_val(_Compare __comp, _Value &__val)
    {
      return _Iter_comp_to_val<_Compare, _Value>((__comp), __val);
    }

  template<typename _Compare, typename _Iterator1>
    struct _Iter_comp_to_iter
    {
      _Compare _M_comp;
      _Iterator1 _M_it1;

      _Iter_comp_to_iter(_Compare __comp, _Iterator1 __it1)
 : _M_comp((__comp)), _M_it1(__it1)
      { }

      template<typename _Iterator2>
 bool
 operator()(_Iterator2 __it2)
 { return bool(_M_comp(*__it2, *_M_it1)); }
    };

  template<typename _Compare, typename _Iterator>
    inline _Iter_comp_to_iter<_Compare, _Iterator>
    __iter_comp_iter(_Iter_comp_iter<_Compare> __comp, _Iterator __it)
    {
      return _Iter_comp_to_iter<_Compare, _Iterator>(
   (__comp._M_comp), __it);
    }

  template<typename _Predicate>
    struct _Iter_negate
    {
      _Predicate _M_pred;

      explicit
      _Iter_negate(_Predicate __pred)
 : _M_pred((__pred))
      { }

      template<typename _Iterator>
 bool
 operator()(_Iterator __it)
 { return !bool(_M_pred(*__it)); }
    };

  template<typename _Predicate>
    inline _Iter_negate<_Predicate>
    __negate(_Iter_pred<_Predicate> __pred)
    { return _Iter_negate<_Predicate>((__pred._M_pred)); }

}
}
# 72 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 2 3

namespace std __attribute__ ((__visibility__ ("default")))
{






  template<bool _BoolType>
    struct __iter_swap
    {
      template<typename _ForwardIterator1, typename _ForwardIterator2>
        static void
        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
        {
          typedef typename iterator_traits<_ForwardIterator1>::value_type
            _ValueType1;
          _ValueType1 __tmp = (*__a);
          *__a = (*__b);
          *__b = (__tmp);
 }
    };

  template<>
    struct __iter_swap<true>
    {
      template<typename _ForwardIterator1, typename _ForwardIterator2>
        static void
        iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
        {
          swap(*__a, *__b);
        }
    };
# 118 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    inline void
    iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
    {

     

     



      typedef typename iterator_traits<_ForwardIterator1>::value_type
 _ValueType1;
      typedef typename iterator_traits<_ForwardIterator2>::value_type
 _ValueType2;

     

     


      typedef typename iterator_traits<_ForwardIterator1>::reference
 _ReferenceType1;
      typedef typename iterator_traits<_ForwardIterator2>::reference
 _ReferenceType2;
      std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 && __are_same<_ValueType1&, _ReferenceType1>::__value
 && __are_same<_ValueType2&, _ReferenceType2>::__value>::
 iter_swap(__a, __b);



    }
# 164 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    _ForwardIterator2
    swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
  _ForwardIterator2 __first2)
    {

     

     

      ;

      for (; __first1 != __last1; ++__first1, (void)++__first2)
 std::iter_swap(__first1, __first2);
      return __first2;
    }
# 192 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _Tp>
   
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    {

     

      if (__b < __a)
 return __b;
      return __a;
    }
# 216 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _Tp>
   
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    {

     

      if (__a < __b)
 return __b;
      return __a;
    }
# 240 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _Tp, typename _Compare>
   
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b, _Compare __comp)
    {

      if (__comp(__b, __a))
 return __b;
      return __a;
    }
# 262 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _Tp, typename _Compare>
   
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b, _Compare __comp)
    {

      if (__comp(__a, __b))
 return __b;
      return __a;
    }



  template<typename _Iterator>
    inline _Iterator
    __niter_base(_Iterator __it)
    { return __it; }







  template<bool, bool, typename>
    struct __copy_move
    {
      template<typename _II, typename _OI>
        static _OI
        __copy_m(_II __first, _II __last, _OI __result)
        {
   for (; __first != __last; ++__result, (void)++__first)
     *__result = *__first;
   return __result;
 }
    };
# 314 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<>
    struct __copy_move<false, false, random_access_iterator_tag>
    {
      template<typename _II, typename _OI>
        static _OI
        __copy_m(_II __first, _II __last, _OI __result)
        {
   typedef typename iterator_traits<_II>::difference_type _Distance;
   for(_Distance __n = __last - __first; __n > 0; --__n)
     {
       *__result = *__first;
       ++__first;
       ++__result;
     }
   return __result;
 }
    };
# 352 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<bool _IsMove>
    struct __copy_move<_IsMove, true, random_access_iterator_tag>
    {
      template<typename _Tp>
        static _Tp*
        __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
        {







   const ptrdiff_t _Num = __last - __first;
   if (_Num)
     __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   return __result + _Num;
 }
    };

  template<bool _IsMove, typename _II, typename _OI>
    inline _OI
    __copy_move_a(_II __first, _II __last, _OI __result)
    {
      typedef typename iterator_traits<_II>::value_type _ValueTypeI;
      typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
      typedef typename iterator_traits<_II>::iterator_category _Category;
      const bool __simple = (__is_trivial(_ValueTypeI)
                      && __is_pointer<_II>::__value
                      && __is_pointer<_OI>::__value
        && __are_same<_ValueTypeI, _ValueTypeO>::__value);

      return std::__copy_move<_IsMove, __simple,
                       _Category>::__copy_m(__first, __last, __result);
    }



  template<typename _CharT>
    struct char_traits;

  template<typename _CharT, typename _Traits>
    class istreambuf_iterator;

  template<typename _CharT, typename _Traits>
    class ostreambuf_iterator;

  template<bool _IsMove, typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
      ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
    __copy_move_a2(_CharT*, _CharT*,
     ostreambuf_iterator<_CharT, char_traits<_CharT> >);

  template<bool _IsMove, typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
      ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
    __copy_move_a2(const _CharT*, const _CharT*,
     ostreambuf_iterator<_CharT, char_traits<_CharT> >);

  template<bool _IsMove, typename _CharT>
    typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
        _CharT*>::__type
    __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
     istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);

  template<bool _IsMove, typename _II, typename _OI>
    inline _OI
    __copy_move_a2(_II __first, _II __last, _OI __result)
    {
      return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
          std::__niter_base(__last),
          std::__niter_base(__result)));
    }
# 444 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _II, typename _OI>
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    {

     
     

      ;

      return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
       (std::__miter_base(__first), std::__miter_base(__last),
        __result));
    }
# 496 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<bool, bool, typename>
    struct __copy_move_backward
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
        {
   while (__first != __last)
     *--__result = *--__last;
   return __result;
 }
    };
# 524 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<>
    struct __copy_move_backward<false, false, random_access_iterator_tag>
    {
      template<typename _BI1, typename _BI2>
        static _BI2
        __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
        {
   typename iterator_traits<_BI1>::difference_type __n;
   for (__n = __last - __first; __n > 0; --__n)
     *--__result = *--__last;
   return __result;
 }
    };
# 554 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<bool _IsMove>
    struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
    {
      template<typename _Tp>
        static _Tp*
        __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
        {







   const ptrdiff_t _Num = __last - __first;
   if (_Num)
     __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
   return __result - _Num;
 }
    };

  template<bool _IsMove, typename _BI1, typename _BI2>
    inline _BI2
    __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
    {
      typedef typename iterator_traits<_BI1>::value_type _ValueType1;
      typedef typename iterator_traits<_BI2>::value_type _ValueType2;
      typedef typename iterator_traits<_BI1>::iterator_category _Category;
      const bool __simple = (__is_trivial(_ValueType1)
                      && __is_pointer<_BI1>::__value
                      && __is_pointer<_BI2>::__value
        && __are_same<_ValueType1, _ValueType2>::__value);

      return std::__copy_move_backward<_IsMove, __simple,
                                _Category>::__copy_move_b(__first,
         __last,
         __result);
    }

  template<bool _IsMove, typename _BI1, typename _BI2>
    inline _BI2
    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
    {
      return _BI2(std::__copy_move_backward_a<_IsMove>
    (std::__niter_base(__first), std::__niter_base(__last),
     std::__niter_base(__result)));
    }
# 620 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _BI1, typename _BI2>
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
    {

     
     
     


      ;

      return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
       (std::__miter_base(__first), std::__miter_base(__last),
        __result));
    }
# 678 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _ForwardIterator, typename _Tp>
    inline typename
    __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
       const _Tp& __value)
    {
      for (; __first != __last; ++__first)
 *__first = __value;
    }

  template<typename _ForwardIterator, typename _Tp>
    inline typename
    __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
    __fill_a(_ForwardIterator __first, _ForwardIterator __last,
      const _Tp& __value)
    {
      const _Tp __tmp = __value;
      for (; __first != __last; ++__first)
 *__first = __tmp;
    }


  template<typename _Tp>
    inline typename
    __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
    __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
    {
      const _Tp __tmp = __c;
      if (const size_t __len = __last - __first)
 __builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    }
# 722 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _ForwardIterator, typename _Tp>
    inline void
    fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
    {

     

      ;

      std::__fill_a(std::__niter_base(__first), std::__niter_base(__last),
      __value);
    }

  template<typename _OutputIterator, typename _Size, typename _Tp>
    inline typename
    __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, _OutputIterator>::__type
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
    {
      for (__decltype(__n + 0) __niter = __n;
    __niter > 0; --__niter, ++__first)
 *__first = __value;
      return __first;
    }

  template<typename _OutputIterator, typename _Size, typename _Tp>
    inline typename
    __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, _OutputIterator>::__type
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value)
    {
      const _Tp __tmp = __value;
      for (__decltype(__n + 0) __niter = __n;
    __niter > 0; --__niter, ++__first)
 *__first = __tmp;
      return __first;
    }

  template<typename _Size, typename _Tp>
    inline typename
    __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, _Tp*>::__type
    __fill_n_a(_Tp* __first, _Size __n, const _Tp& __c)
    {
      std::__fill_a(__first, __first + __n, __c);
      return __first + __n;
    }
# 782 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _OI, typename _Size, typename _Tp>
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    {

     

      return _OI(std::__fill_n_a(std::__niter_base(__first), __n, __value));
    }

  template<bool _BoolType>
    struct __equal
    {
      template<typename _II1, typename _II2>
        static bool
        equal(_II1 __first1, _II1 __last1, _II2 __first2)
        {
   for (; __first1 != __last1; ++__first1, (void)++__first2)
     if (!(*__first1 == *__first2))
       return false;
   return true;
 }
    };

  template<>
    struct __equal<true>
    {
      template<typename _Tp>
        static bool
        equal(const _Tp* __first1, const _Tp* __last1, const _Tp* __first2)
        {
   if (const size_t __len = (__last1 - __first1))
     return !__builtin_memcmp(__first1, __first2, sizeof(_Tp) * __len);
   return true;
 }
    };

  template<typename _II1, typename _II2>
    inline bool
    __equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)
    {
      typedef typename iterator_traits<_II1>::value_type _ValueType1;
      typedef typename iterator_traits<_II2>::value_type _ValueType2;
      const bool __simple = ((__is_integer<_ValueType1>::__value
         || __is_pointer<_ValueType1>::__value)
                      && __is_pointer<_II1>::__value
                      && __is_pointer<_II2>::__value
        && __are_same<_ValueType1, _ValueType2>::__value);

      return std::__equal<__simple>::equal(__first1, __last1, __first2);
    }

  template<typename, typename>
    struct __lc_rai
    {
      template<typename _II1, typename _II2>
        static _II1
        __newlast1(_II1, _II1 __last1, _II2, _II2)
        { return __last1; }

      template<typename _II>
        static bool
        __cnd2(_II __first, _II __last)
        { return __first != __last; }
    };

  template<>
    struct __lc_rai<random_access_iterator_tag, random_access_iterator_tag>
    {
      template<typename _RAI1, typename _RAI2>
        static _RAI1
        __newlast1(_RAI1 __first1, _RAI1 __last1,
     _RAI2 __first2, _RAI2 __last2)
        {
   const typename iterator_traits<_RAI1>::difference_type
     __diff1 = __last1 - __first1;
   const typename iterator_traits<_RAI2>::difference_type
     __diff2 = __last2 - __first2;
   return __diff2 < __diff1 ? __first1 + __diff2 : __last1;
 }

      template<typename _RAI>
        static bool
        __cnd2(_RAI, _RAI)
        { return true; }
    };

  template<typename _II1, typename _II2, typename _Compare>
    bool
    __lexicographical_compare_impl(_II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2,
       _Compare __comp)
    {
      typedef typename iterator_traits<_II1>::iterator_category _Category1;
      typedef typename iterator_traits<_II2>::iterator_category _Category2;
      typedef std::__lc_rai<_Category1, _Category2> __rai_type;

      __last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
      for (; __first1 != __last1 && __rai_type::__cnd2(__first2, __last2);
    ++__first1, (void)++__first2)
 {
   if (__comp(__first1, __first2))
     return true;
   if (__comp(__first2, __first1))
     return false;
 }
      return __first1 == __last1 && __first2 != __last2;
    }

  template<bool _BoolType>
    struct __lexicographical_compare
    {
      template<typename _II1, typename _II2>
        static bool __lc(_II1, _II1, _II2, _II2);
    };

  template<bool _BoolType>
    template<typename _II1, typename _II2>
      bool
      __lexicographical_compare<_BoolType>::
      __lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
      {
 return std::__lexicographical_compare_impl(__first1, __last1,
         __first2, __last2,
     __gnu_cxx::__ops::__iter_less_iter());
      }

  template<>
    struct __lexicographical_compare<true>
    {
      template<typename _Tp, typename _Up>
        static bool
        __lc(const _Tp* __first1, const _Tp* __last1,
      const _Up* __first2, const _Up* __last2)
 {
   const size_t __len1 = __last1 - __first1;
   const size_t __len2 = __last2 - __first2;
   if (const size_t __len = std::min(__len1, __len2))
     if (int __result = __builtin_memcmp(__first1, __first2, __len))
       return __result < 0;
   return __len1 < __len2;
 }
    };

  template<typename _II1, typename _II2>
    inline bool
    __lexicographical_compare_aux(_II1 __first1, _II1 __last1,
      _II2 __first2, _II2 __last2)
    {
      typedef typename iterator_traits<_II1>::value_type _ValueType1;
      typedef typename iterator_traits<_II2>::value_type _ValueType2;
      const bool __simple =
 (__is_byte<_ValueType1>::__value && __is_byte<_ValueType2>::__value
  && !__gnu_cxx::__numeric_traits<_ValueType1>::__is_signed
  && !__gnu_cxx::__numeric_traits<_ValueType2>::__is_signed
  && __is_pointer<_II1>::__value
  && __is_pointer<_II2>::__value);

      return std::__lexicographical_compare<__simple>::__lc(__first1, __last1,
           __first2, __last2);
    }

  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    _ForwardIterator
    __lower_bound(_ForwardIterator __first, _ForwardIterator __last,
    const _Tp& __val, _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;

      _DistanceType __len = std::distance(__first, __last);

      while (__len > 0)
 {
   _DistanceType __half = __len >> 1;
   _ForwardIterator __middle = __first;
   std::advance(__middle, __half);
   if (__comp(__middle, __val))
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else
     __len = __half;
 }
      return __first;
    }
# 982 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    lower_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {

     
     

      ;

      return std::__lower_bound(__first, __last, __val,
    __gnu_cxx::__ops::__iter_less_val());
    }



  inline int
  __lg(int __n)
  { return sizeof(int) * 8 - 1 - __builtin_clz(__n); }

  inline unsigned
  __lg(unsigned __n)
  { return sizeof(int) * 8 - 1 - __builtin_clz(__n); }

  inline long
  __lg(long __n)
  { return sizeof(long) * 8 - 1 - __builtin_clzl(__n); }

  inline unsigned long
  __lg(unsigned long __n)
  { return sizeof(long) * 8 - 1 - __builtin_clzl(__n); }

  inline long long
  __lg(long long __n)
  { return sizeof(long long) * 8 - 1 - __builtin_clzll(__n); }

  inline unsigned long long
  __lg(unsigned long long __n)
  { return sizeof(long long) * 8 - 1 - __builtin_clzll(__n); }




# 1039 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _II1, typename _II2>
    inline bool
    equal(_II1 __first1, _II1 __last1, _II2 __first2)
    {

     
     
     


      ;

      return std::__equal_aux(std::__niter_base(__first1),
         std::__niter_base(__last1),
         std::__niter_base(__first2));
    }
# 1071 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _IIter1, typename _IIter2, typename _BinaryPredicate>
    inline bool
    equal(_IIter1 __first1, _IIter1 __last1,
   _IIter2 __first2, _BinaryPredicate __binary_pred)
    {

     
     
      ;

      for (; __first1 != __last1; ++__first1, (void)++__first2)
 if (!bool(__binary_pred(*__first1, *__first2)))
   return false;
      return true;
    }
# 1201 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _II1, typename _II2>
    inline bool
    lexicographical_compare(_II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2)
    {





     
     
     
     
      ;
      ;

      return std::__lexicographical_compare_aux(std::__niter_base(__first1),
      std::__niter_base(__last1),
      std::__niter_base(__first2),
      std::__niter_base(__last2));
    }
# 1237 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _II1, typename _II2, typename _Compare>
    inline bool
    lexicographical_compare(_II1 __first1, _II1 __last1,
       _II2 __first2, _II2 __last2, _Compare __comp)
    {

     
     
      ;
      ;

      return std::__lexicographical_compare_impl
 (__first1, __last1, __first2, __last2,
  __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate>
    pair<_InputIterator1, _InputIterator2>
    __mismatch(_InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _BinaryPredicate __binary_pred)
    {
      while (__first1 != __last1 && __binary_pred(__first1, __first2))
        {
   ++__first1;
   ++__first2;
        }
      return pair<_InputIterator1, _InputIterator2>(__first1, __first2);
    }
# 1280 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    inline pair<_InputIterator1, _InputIterator2>
    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2)
    {

     
     
     


      ;

      return std::__mismatch(__first1, __last1, __first2,
        __gnu_cxx::__ops::__iter_equal_to_iter());
    }
# 1313 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _BinaryPredicate>
    inline pair<_InputIterator1, _InputIterator2>
    mismatch(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _BinaryPredicate __binary_pred)
    {

     
     
      ;

      return std::__mismatch(__first1, __last1, __first2,
 __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
    }
# 1413 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algobase.h" 3

}
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/algorithm" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 1 3
# 59 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 3
# 75 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 1 3 4
# 25 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/libc-header-start.h" 1 3 4
# 26 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 216 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 3 4
typedef long unsigned int size_t;
# 32 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4

extern "C" {





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/waitflags.h" 1 3 4
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/waitstatus.h" 1 3 4
# 41 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4
# 55 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/floatn.h" 1 3 4
# 56 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 97 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) throw () ;



extern double atof (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



__extension__ extern long long int atoll (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) throw () __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));
# 139 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));




extern int strfromd (char *__dest, size_t __size, const char *__format,
       double __f)
     throw () __attribute__ ((__nonnull__ (3)));

extern int strfromf (char *__dest, size_t __size, const char *__format,
       float __f)
     throw () __attribute__ ((__nonnull__ (3)));

extern int strfroml (char *__dest, size_t __size, const char *__format,
       long double __f)
     throw () __attribute__ ((__nonnull__ (3)));
# 199 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/locale_t.h" 1 3 4
# 22 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/locale_t.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/__locale_t.h" 1 3 4
# 28 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/__locale_t.h" 3 4
struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
};

typedef struct __locale_struct *__locale_t;
# 23 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/locale_t.h" 2 3 4

typedef __locale_t locale_t;
# 200 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4

extern long int strtol_l (const char *__restrict __nptr,
     char **__restrict __endptr, int __base,
     locale_t __loc) throw () __attribute__ ((__nonnull__ (1, 4)));

extern unsigned long int strtoul_l (const char *__restrict __nptr,
        char **__restrict __endptr,
        int __base, locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern long long int strtoll_l (const char *__restrict __nptr,
    char **__restrict __endptr, int __base,
    locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern unsigned long long int strtoull_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

extern double strtod_l (const char *__restrict __nptr,
   char **__restrict __endptr, locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));

extern float strtof_l (const char *__restrict __nptr,
         char **__restrict __endptr, locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));

extern long double strtold_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));
# 245 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__leaf__)) atoi (const char *__nptr) throw ()
{
  return (int) strtol (__nptr, (char **) __null, 10);
}
extern __inline __attribute__ ((__gnu_inline__)) long int
__attribute__ ((__leaf__)) atol (const char *__nptr) throw ()
{
  return strtol (__nptr, (char **) __null, 10);
}


__extension__ extern __inline __attribute__ ((__gnu_inline__)) long long int
__attribute__ ((__leaf__)) atoll (const char *__nptr) throw ()
{
  return strtoll (__nptr, (char **) __null, 10);
}
# 270 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) throw () ;


extern long int a64l (const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 3 4
extern "C" {

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/wordsize.h" 1 3 4
# 28 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;

typedef signed long int __int64_t;
typedef unsigned long int __uint64_t;







typedef long int __quad_t;
typedef unsigned long int __u_quad_t;







typedef long int __intmax_t;
typedef unsigned long int __uintmax_t;
# 130 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/typesizes.h" 1 3 4
# 131 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types.h" 2 3 4


typedef unsigned long int __dev_t;
typedef unsigned int __uid_t;
typedef unsigned int __gid_t;
typedef unsigned long int __ino_t;
typedef unsigned long int __ino64_t;
typedef unsigned int __mode_t;
typedef unsigned long int __nlink_t;
typedef long int __off_t;
typedef long int __off64_t;
typedef int __pid_t;
typedef struct { int __val[2]; } __fsid_t;
typedef long int __clock_t;
typedef unsigned long int __rlim_t;
typedef unsigned long int __rlim64_t;
typedef unsigned int __id_t;
typedef long int __time_t;
typedef unsigned int __useconds_t;
typedef long int __suseconds_t;

typedef int __daddr_t;
typedef int __key_t;


typedef int __clockid_t;


typedef void * __timer_t;


typedef long int __blksize_t;




typedef long int __blkcnt_t;
typedef long int __blkcnt64_t;


typedef unsigned long int __fsblkcnt_t;
typedef unsigned long int __fsblkcnt64_t;


typedef unsigned long int __fsfilcnt_t;
typedef unsigned long int __fsfilcnt64_t;


typedef long int __fsword_t;

typedef long int __ssize_t;


typedef long int __syscall_slong_t;

typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


typedef long int __intptr_t;


typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 30 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;




typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 128 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 130 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/time_t.h" 1 3 4






typedef __time_t time_t;
# 131 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 132 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 146 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;




# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdint-intn.h" 1 3 4
# 24 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 157 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4
# 178 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 3 4
typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 194 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/endian.h" 1 3 4
# 36 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/endian.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/endian.h" 1 3 4
# 37 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/endian.h" 2 3 4
# 60 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/endian.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/byteswap.h" 1 3 4
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/byteswap.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/byteswap-16.h" 1 3 4
# 35 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/byteswap.h" 2 3 4
# 43 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/byteswap.h" 3 4
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
# 74 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/byteswap.h" 3 4
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
# 61 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/endian.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/uintn-identity.h" 1 3 4
# 32 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/endian.h" 2 3 4
# 195 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 1 3 4
# 30 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/select.h" 1 3 4
# 31 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 2 3 4


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/sigset_t.h" 1 3 4



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 2 3 4



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/struct_timeval.h" 1 3 4







struct timeval
{
  __time_t tv_sec;
  __suseconds_t tv_usec;
};
# 38 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 2 3 4

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/struct_timespec.h" 1 3 4







struct timespec
{
  __time_t tv_sec;
  __syscall_slong_t tv_nsec;
};
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 2 3 4
# 49 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 3 4
typedef long int __fd_mask;
# 59 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 3 4
extern "C" {
# 101 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 113 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 126 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/select.h" 3 4
}
# 198 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4







# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/sysmacros.h" 1 3 4
# 41 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/sysmacros.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/sysmacros.h" 1 3 4
# 42 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/sysmacros.h" 2 3 4
# 71 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/sysmacros.h" 3 4
extern "C" {

extern unsigned int gnu_dev_major (__dev_t __dev) throw () __attribute__ ((__const__));
extern unsigned int gnu_dev_minor (__dev_t __dev) throw () __attribute__ ((__const__));
extern __dev_t gnu_dev_makedev (unsigned int __major, unsigned int __minor) throw () __attribute__ ((__const__));



__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int __attribute__ ((__leaf__)) gnu_dev_major (__dev_t __dev) throw () { unsigned int __major; __major = ((__dev & (__dev_t) 0x00000000000fff00u) >> 8); __major |= ((__dev & (__dev_t) 0xfffff00000000000u) >> 32); return __major; }
__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) unsigned int __attribute__ ((__leaf__)) gnu_dev_minor (__dev_t __dev) throw () { unsigned int __minor; __minor = ((__dev & (__dev_t) 0x00000000000000ffu) >> 0); __minor |= ((__dev & (__dev_t) 0x00000ffffff00000u) >> 12); return __minor; }
__extension__ extern __inline __attribute__ ((__gnu_inline__)) __attribute__ ((__const__)) __dev_t __attribute__ ((__leaf__)) gnu_dev_makedev (unsigned int __major, unsigned int __minor) throw () { __dev_t __dev; __dev = (((__dev_t) (__major & 0x00000fffu)) << 8); __dev |= (((__dev_t) (__major & 0xfffff000u)) << 32); __dev |= (((__dev_t) (__minor & 0x000000ffu)) << 0); __dev |= (((__dev_t) (__minor & 0xffffff00u)) << 12); return __dev; }



}
# 206 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4






typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 246 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/pthreadtypes.h" 1 3 4
# 23 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/pthreadtypes.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/thread-shared-types.h" 1 3 4
# 58 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/thread-shared-types.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/pthreadtypes-arch.h" 1 3 4
# 49 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/pthreadtypes-arch.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;

  int __cur_writer;
  int __shared;
  unsigned long int __pad1;
  unsigned long int __pad2;


  unsigned int __flags;
# 83 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/pthreadtypes-arch.h" 3 4
};
# 59 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/thread-shared-types.h" 2 3 4




typedef struct __pthread_internal_list
{
  struct __pthread_internal_list *__prev;
  struct __pthread_internal_list *__next;
} __pthread_list_t;
# 99 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/thread-shared-types.h" 3 4
struct __pthread_mutex_s
{
  int __lock ;
  unsigned int __count;
  int __owner;

  unsigned int __nusers;



  int __kind;
 

  int __spins;
  __pthread_list_t __list;
# 123 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/thread-shared-types.h" 3 4
 
};




struct __pthread_cond_s
{
  __extension__ union
  {
    __extension__ unsigned long long int __wseq;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __wseq32;
  };
  __extension__ union
  {
    __extension__ unsigned long long int __g1_start;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __g1_start32;
  };
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};
# 24 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[56];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[40];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[56];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[32];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 255 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/sys/types.h" 2 3 4


}
# 280 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4






extern long int random (void) throw ();


extern void srandom (unsigned int __seed) throw ();





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) throw () __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) throw () __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     throw () __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     throw () __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) throw ();

extern void srand (unsigned int __seed) throw ();



extern int rand_r (unsigned int *__seed) throw ();







extern double drand48 (void) throw ();
extern double erand48 (unsigned short int __xsubi[3]) throw () __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) throw ();
extern long int nrand48 (unsigned short int __xsubi[3])
     throw () __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) throw ();
extern long int jrand48 (unsigned short int __xsubi[3])
     throw () __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) throw ();
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     throw () __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) throw () __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     throw () __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) throw () __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) throw () __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     throw () __attribute__ ((__malloc__)) ;






extern void *realloc (void *__ptr, size_t __size)
     throw () __attribute__ ((__warn_unused_result__));







extern void *reallocarray (void *__ptr, size_t __nmemb, size_t __size)
     throw () __attribute__ ((__warn_unused_result__));



extern void free (void *__ptr) throw ();


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/alloca.h" 1 3 4
# 24 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/alloca.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 25 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/alloca.h" 2 3 4

extern "C" {





extern void *alloca (size_t __size) throw ();





}
# 452 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) throw () __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     throw () __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) ;



extern void abort (void) throw () __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) throw () __attribute__ ((__nonnull__ (1)));




extern "C++" int at_quick_exit (void (*__func) (void))
     throw () __asm ("at_quick_exit") __attribute__ ((__nonnull__ (1)));
# 492 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     throw () __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) throw () __attribute__ ((__noreturn__));





extern void quick_exit (int __status) throw () __attribute__ ((__noreturn__));





extern void _Exit (int __status) throw () __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) throw () __attribute__ ((__nonnull__ (1))) ;




extern char *secure_getenv (const char *__name)
     throw () __attribute__ ((__nonnull__ (1))) ;






extern int putenv (char *__string) throw () __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     throw () __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) throw () __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) throw ();
# 557 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) throw () __attribute__ ((__nonnull__ (1)));
# 570 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 580 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 592 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 602 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int mkstemps64 (char *__template, int __suffixlen)
     __attribute__ ((__nonnull__ (1))) ;
# 613 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) throw () __attribute__ ((__nonnull__ (1))) ;
# 624 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int mkostemp (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 634 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int mkostemp64 (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 644 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int mkostemps (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 656 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int mkostemps64 (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 666 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int system (const char *__command) ;





extern char *canonicalize_file_name (const char *__name)
     throw () __attribute__ ((__nonnull__ (1))) ;
# 682 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) throw () ;






typedef int (*__compar_fn_t) (const void *, const void *);


typedef __compar_fn_t comparison_fn_t;



typedef int (*__compar_d_fn_t) (const void *, const void *, void *);




extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdlib-bsearch.h" 1 3 4
# 19 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdlib-bsearch.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) void *
bsearch (const void *__key, const void *__base, size_t __nmemb, size_t __size,
  __compar_fn_t __compar)
{
  size_t __l, __u, __idx;
  const void *__p;
  int __comparison;

  __l = 0;
  __u = __nmemb;
  while (__l < __u)
    {
      __idx = (__l + __u) / 2;
      __p = (void *) (((const char *) __base) + (__idx * __size));
      __comparison = (*__compar) (__key, __p);
      if (__comparison < 0)
 __u = __idx;
      else if (__comparison > 0)
 __l = __idx + 1;
      else
 return (void *) __p;
    }

  return __null;
}
# 708 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4




extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));

extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
       __compar_d_fn_t __compar, void *__arg)
  __attribute__ ((__nonnull__ (1, 4)));




extern int abs (int __x) throw () __attribute__ ((__const__)) ;
extern long int labs (long int __x) throw () __attribute__ ((__const__)) ;


__extension__ extern long long int llabs (long long int __x)
     throw () __attribute__ ((__const__)) ;






extern div_t div (int __numer, int __denom)
     throw () __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     throw () __attribute__ ((__const__)) ;


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     throw () __attribute__ ((__const__)) ;
# 754 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) throw () __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) throw () __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     throw () __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     throw () __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     throw () __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     throw () __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) throw () __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) throw () __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) throw ();


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) throw ();


extern int wctomb (char *__s, wchar_t __wchar) throw ();



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) throw ();

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     throw ();







extern int rpmatch (const char *__response) throw () __attribute__ ((__nonnull__ (1))) ;
# 839 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     throw () __attribute__ ((__nonnull__ (1, 2, 3))) ;





extern void setkey (const char *__key) throw () __attribute__ ((__nonnull__ (1)));







extern int posix_openpt (int __oflag) ;







extern int grantpt (int __fd) throw ();



extern int unlockpt (int __fd) throw ();




extern char *ptsname (int __fd) throw () ;






extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2)));


extern int getpt (void);






extern int getloadavg (double __loadavg[], int __nelem)
     throw () __attribute__ ((__nonnull__ (1)));
# 901 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdlib-float.h" 1 3 4
# 24 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdlib-float.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) double
__attribute__ ((__leaf__)) atof (const char *__nptr) throw ()
{
  return strtod (__nptr, (char **) __null);
}
# 902 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 2 3 4
# 911 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdlib.h" 3 4
}
# 76 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 2 3

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/std_abs.h" 1 3
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/std_abs.h" 3
       
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/std_abs.h" 3
# 46 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/std_abs.h" 3
extern "C++"
{
namespace std __attribute__ ((__visibility__ ("default")))
{


  using ::abs;


  inline long
  abs(long __i) { return __builtin_labs(__i); }



  inline long long
  abs(long long __x) { return __builtin_llabs (__x); }







  inline double
  abs(double __x)
  { return __builtin_fabs(__x); }

  inline float
  abs(float __x)
  { return __builtin_fabsf(__x); }

  inline long double
  abs(long double __x)
  { return __builtin_fabsl(__x); }



  inline __int128
  abs(__int128 __x) { return __x >= 0 ? __x : -__x; }
# 106 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/std_abs.h" 3

}
}
# 78 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 2 3
# 118 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 3
extern "C++"
{
namespace std __attribute__ ((__visibility__ ("default")))
{


  using ::div_t;
  using ::ldiv_t;

  using ::abort;
  using ::atexit;





  using ::atof;
  using ::atoi;
  using ::atol;
  using ::bsearch;
  using ::calloc;
  using ::div;
  using ::exit;
  using ::free;
  using ::getenv;
  using ::labs;
  using ::ldiv;
  using ::malloc;

  using ::mblen;
  using ::mbstowcs;
  using ::mbtowc;

  using ::qsort;





  using ::rand;
  using ::realloc;
  using ::srand;
  using ::strtod;
  using ::strtol;
  using ::strtoul;
  using ::system;

  using ::wcstombs;
  using ::wctomb;



  inline ldiv_t
  div(long __i, long __j) { return ldiv(__i, __j); }




}
# 189 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 3
namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{



  using ::lldiv_t;





  using ::_Exit;



  using ::llabs;

  inline lldiv_t
  div(long long __n, long long __d)
  { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }

  using ::lldiv;
# 221 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 3
  using ::atoll;
  using ::strtoll;
  using ::strtoull;

  using ::strtof;
  using ::strtold;


}

namespace std
{

  using ::__gnu_cxx::lldiv_t;

  using ::__gnu_cxx::_Exit;

  using ::__gnu_cxx::llabs;
  using ::__gnu_cxx::div;
  using ::__gnu_cxx::lldiv;

  using ::__gnu_cxx::atoll;
  using ::__gnu_cxx::strtof;
  using ::__gnu_cxx::strtoll;
  using ::__gnu_cxx::strtoull;
  using ::__gnu_cxx::strtold;
}



}
# 60 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 1 3
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
       
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
# 42 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
namespace std __attribute__ ((__visibility__ ("default")))
{

# 204 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _FIter, typename _Tp>
    bool
    binary_search(_FIter, _FIter, const _Tp&);

  template<typename _FIter, typename _Tp, typename _Compare>
    bool
    binary_search(_FIter, _FIter, const _Tp&, _Compare);
# 224 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _IIter, typename _OIter>
    _OIter
    copy(_IIter, _IIter, _OIter);

  template<typename _BIter1, typename _BIter2>
    _BIter2
    copy_backward(_BIter1, _BIter1, _BIter2);
# 245 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _FIter, typename _Tp>
    pair<_FIter, _FIter>
    equal_range(_FIter, _FIter, const _Tp&);

  template<typename _FIter, typename _Tp, typename _Compare>
    pair<_FIter, _FIter>
    equal_range(_FIter, _FIter, const _Tp&, _Compare);

  template<typename _FIter, typename _Tp>
    void
    fill(_FIter, _FIter, const _Tp&);

  template<typename _OIter, typename _Size, typename _Tp>
    _OIter
    fill_n(_OIter, _Size, const _Tp&);



  template<typename _FIter1, typename _FIter2>
    _FIter1
    find_end(_FIter1, _FIter1, _FIter2, _FIter2);

  template<typename _FIter1, typename _FIter2, typename _BinaryPredicate>
    _FIter1
    find_end(_FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate);
# 284 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _IIter1, typename _IIter2>
    bool
    includes(_IIter1, _IIter1, _IIter2, _IIter2);

  template<typename _IIter1, typename _IIter2, typename _Compare>
    bool
    includes(_IIter1, _IIter1, _IIter2, _IIter2, _Compare);

  template<typename _BIter>
    void
    inplace_merge(_BIter, _BIter, _BIter);

  template<typename _BIter, typename _Compare>
    void
    inplace_merge(_BIter, _BIter, _BIter, _Compare);
# 347 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _FIter1, typename _FIter2>
    void
    iter_swap(_FIter1, _FIter2);

  template<typename _FIter, typename _Tp>
    _FIter
    lower_bound(_FIter, _FIter, const _Tp&);

  template<typename _FIter, typename _Tp, typename _Compare>
    _FIter
    lower_bound(_FIter, _FIter, const _Tp&, _Compare);

  template<typename _RAIter>
    void
    make_heap(_RAIter, _RAIter);

  template<typename _RAIter, typename _Compare>
    void
    make_heap(_RAIter, _RAIter, _Compare);

  template<typename _Tp>
   
    const _Tp&
    max(const _Tp&, const _Tp&);

  template<typename _Tp, typename _Compare>
   
    const _Tp&
    max(const _Tp&, const _Tp&, _Compare);




  template<typename _Tp>
   
    const _Tp&
    min(const _Tp&, const _Tp&);

  template<typename _Tp, typename _Compare>
   
    const _Tp&
    min(const _Tp&, const _Tp&, _Compare);
# 446 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _BIter>
    bool
    next_permutation(_BIter, _BIter);

  template<typename _BIter, typename _Compare>
    bool
    next_permutation(_BIter, _BIter, _Compare);
# 463 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _IIter, typename _RAIter>
    _RAIter
    partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter);

  template<typename _IIter, typename _RAIter, typename _Compare>
    _RAIter
    partial_sort_copy(_IIter, _IIter, _RAIter, _RAIter, _Compare);
# 484 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _RAIter>
    void
    pop_heap(_RAIter, _RAIter);

  template<typename _RAIter, typename _Compare>
    void
    pop_heap(_RAIter, _RAIter, _Compare);

  template<typename _BIter>
    bool
    prev_permutation(_BIter, _BIter);

  template<typename _BIter, typename _Compare>
    bool
    prev_permutation(_BIter, _BIter, _Compare);

  template<typename _RAIter>
    void
    push_heap(_RAIter, _RAIter);

  template<typename _RAIter, typename _Compare>
    void
    push_heap(_RAIter, _RAIter, _Compare);



  template<typename _FIter, typename _Tp>
    _FIter
    remove(_FIter, _FIter, const _Tp&);

  template<typename _FIter, typename _Predicate>
    _FIter
    remove_if(_FIter, _FIter, _Predicate);

  template<typename _IIter, typename _OIter, typename _Tp>
    _OIter
    remove_copy(_IIter, _IIter, _OIter, const _Tp&);

  template<typename _IIter, typename _OIter, typename _Predicate>
    _OIter
    remove_copy_if(_IIter, _IIter, _OIter, _Predicate);



  template<typename _IIter, typename _OIter, typename _Tp>
    _OIter
    replace_copy(_IIter, _IIter, _OIter, const _Tp&, const _Tp&);

  template<typename _Iter, typename _OIter, typename _Predicate, typename _Tp>
    _OIter
    replace_copy_if(_Iter, _Iter, _OIter, _Predicate, const _Tp&);



  template<typename _BIter>
    void
    reverse(_BIter, _BIter);

  template<typename _BIter, typename _OIter>
    _OIter
    reverse_copy(_BIter, _BIter, _OIter);

  inline namespace _V2
  {
    template<typename _FIter>
      _FIter
      rotate(_FIter, _FIter, _FIter);
  }

  template<typename _FIter, typename _OIter>
    _OIter
    rotate_copy(_FIter, _FIter, _FIter, _OIter);
# 570 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/algorithmfwd.h" 3
  template<typename _RAIter>
    void
    sort_heap(_RAIter, _RAIter);

  template<typename _RAIter, typename _Compare>
    void
    sort_heap(_RAIter, _RAIter, _Compare);

  template<typename _BIter, typename _Predicate>
    _BIter
    stable_partition(_BIter, _BIter, _Predicate);




  template<typename _Tp, size_t _Nm>
    inline void
    swap(_Tp& __a, _Tp& __b);

  template<typename _Tp, size_t _Nm>
    inline void
    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]);


  template<typename _FIter1, typename _FIter2>
    _FIter2
    swap_ranges(_FIter1, _FIter1, _FIter2);



  template<typename _FIter>
    _FIter
    unique(_FIter, _FIter);

  template<typename _FIter, typename _BinaryPredicate>
    _FIter
    unique(_FIter, _FIter, _BinaryPredicate);



  template<typename _FIter, typename _Tp>
    _FIter
    upper_bound(_FIter, _FIter, const _Tp&);

  template<typename _FIter, typename _Tp, typename _Compare>
    _FIter
    upper_bound(_FIter, _FIter, const _Tp&, _Compare);





  template<typename _FIter>
    _FIter
    adjacent_find(_FIter, _FIter);

  template<typename _FIter, typename _BinaryPredicate>
    _FIter
    adjacent_find(_FIter, _FIter, _BinaryPredicate);

  template<typename _IIter, typename _Tp>
    typename iterator_traits<_IIter>::difference_type
    count(_IIter, _IIter, const _Tp&);

  template<typename _IIter, typename _Predicate>
    typename iterator_traits<_IIter>::difference_type
    count_if(_IIter, _IIter, _Predicate);

  template<typename _IIter1, typename _IIter2>
    bool
    equal(_IIter1, _IIter1, _IIter2);

  template<typename _IIter1, typename _IIter2, typename _BinaryPredicate>
    bool
    equal(_IIter1, _IIter1, _IIter2, _BinaryPredicate);

  template<typename _IIter, typename _Tp>
    _IIter
    find(_IIter, _IIter, const _Tp&);

  template<typename _FIter1, typename _FIter2>
    _FIter1
    find_first_of(_FIter1, _FIter1, _FIter2, _FIter2);

  template<typename _FIter1, typename _FIter2, typename _BinaryPredicate>
    _FIter1
    find_first_of(_FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate);

  template<typename _IIter, typename _Predicate>
    _IIter
    find_if(_IIter, _IIter, _Predicate);

  template<typename _IIter, typename _Funct>
    _Funct
    for_each(_IIter, _IIter, _Funct);

  template<typename _FIter, typename _Generator>
    void
    generate(_FIter, _FIter, _Generator);

  template<typename _OIter, typename _Size, typename _Generator>
    _OIter
    generate_n(_OIter, _Size, _Generator);

  template<typename _IIter1, typename _IIter2>
    bool
    lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2);

  template<typename _IIter1, typename _IIter2, typename _Compare>
    bool
    lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2, _Compare);

  template<typename _FIter>
   
    _FIter
    max_element(_FIter, _FIter);

  template<typename _FIter, typename _Compare>
   
    _FIter
    max_element(_FIter, _FIter, _Compare);

  template<typename _IIter1, typename _IIter2, typename _OIter>
    _OIter
    merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);

  template<typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare>
    _OIter
    merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);

  template<typename _FIter>
   
    _FIter
    min_element(_FIter, _FIter);

  template<typename _FIter, typename _Compare>
   
    _FIter
    min_element(_FIter, _FIter, _Compare);

  template<typename _IIter1, typename _IIter2>
    pair<_IIter1, _IIter2>
    mismatch(_IIter1, _IIter1, _IIter2);

  template<typename _IIter1, typename _IIter2, typename _BinaryPredicate>
    pair<_IIter1, _IIter2>
    mismatch(_IIter1, _IIter1, _IIter2, _BinaryPredicate);

  template<typename _RAIter>
    void
    nth_element(_RAIter, _RAIter, _RAIter);

  template<typename _RAIter, typename _Compare>
    void
    nth_element(_RAIter, _RAIter, _RAIter, _Compare);

  template<typename _RAIter>
    void
    partial_sort(_RAIter, _RAIter, _RAIter);

  template<typename _RAIter, typename _Compare>
    void
    partial_sort(_RAIter, _RAIter, _RAIter, _Compare);

  template<typename _BIter, typename _Predicate>
    _BIter
    partition(_BIter, _BIter, _Predicate);

  template<typename _RAIter>
    void
    random_shuffle(_RAIter, _RAIter);

  template<typename _RAIter, typename _Generator>
    void
    random_shuffle(_RAIter, _RAIter,



     _Generator&);


  template<typename _FIter, typename _Tp>
    void
    replace(_FIter, _FIter, const _Tp&, const _Tp&);

  template<typename _FIter, typename _Predicate, typename _Tp>
    void
    replace_if(_FIter, _FIter, _Predicate, const _Tp&);

  template<typename _FIter1, typename _FIter2>
    _FIter1
    search(_FIter1, _FIter1, _FIter2, _FIter2);

  template<typename _FIter1, typename _FIter2, typename _BinaryPredicate>
    _FIter1
    search(_FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate);

  template<typename _FIter, typename _Size, typename _Tp>
    _FIter
    search_n(_FIter, _FIter, _Size, const _Tp&);

  template<typename _FIter, typename _Size, typename _Tp,
    typename _BinaryPredicate>
    _FIter
    search_n(_FIter, _FIter, _Size, const _Tp&, _BinaryPredicate);

  template<typename _IIter1, typename _IIter2, typename _OIter>
    _OIter
    set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);

  template<typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare>
    _OIter
    set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);

  template<typename _IIter1, typename _IIter2, typename _OIter>
    _OIter
    set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);

  template<typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare>
    _OIter
    set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);

  template<typename _IIter1, typename _IIter2, typename _OIter>
    _OIter
    set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);

  template<typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare>
    _OIter
    set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2,
        _OIter, _Compare);

  template<typename _IIter1, typename _IIter2, typename _OIter>
    _OIter
    set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);

  template<typename _IIter1, typename _IIter2, typename _OIter,
    typename _Compare>
    _OIter
    set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);

  template<typename _RAIter>
    void
    sort(_RAIter, _RAIter);

  template<typename _RAIter, typename _Compare>
    void
    sort(_RAIter, _RAIter, _Compare);

  template<typename _RAIter>
    void
    stable_sort(_RAIter, _RAIter);

  template<typename _RAIter, typename _Compare>
    void
    stable_sort(_RAIter, _RAIter, _Compare);

  template<typename _IIter, typename _OIter, typename _UnaryOperation>
    _OIter
    transform(_IIter, _IIter, _OIter, _UnaryOperation);

  template<typename _IIter1, typename _IIter2, typename _OIter,
    typename _BinaryOperation>
    _OIter
    transform(_IIter1, _IIter1, _IIter2, _OIter, _BinaryOperation);

  template<typename _IIter, typename _OIter>
    _OIter
    unique_copy(_IIter, _IIter, _OIter);

  template<typename _IIter, typename _OIter, typename _BinaryPredicate>
    _OIter
    unique_copy(_IIter, _IIter, _OIter, _BinaryPredicate);


}
# 61 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 1 3
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
namespace std __attribute__ ((__visibility__ ("default")))
{







  template<typename _RandomAccessIterator, typename _Distance,
    typename _Compare>
    _Distance
    __is_heap_until(_RandomAccessIterator __first, _Distance __n,
      _Compare& __comp)
    {
      _Distance __parent = 0;
      for (_Distance __child = 1; __child < __n; ++__child)
 {
   if (__comp(__first + __parent, __first + __child))
     return __child;
   if ((__child & 1) == 0)
     ++__parent;
 }
      return __n;
    }



  template<typename _RandomAccessIterator, typename _Distance>
    inline bool
    __is_heap(_RandomAccessIterator __first, _Distance __n)
    {
      __gnu_cxx::__ops::_Iter_less_iter __comp;
      return std::__is_heap_until(__first, __n, __comp) == __n;
    }

  template<typename _RandomAccessIterator, typename _Compare,
    typename _Distance>
    inline bool
    __is_heap(_RandomAccessIterator __first, _Compare __comp, _Distance __n)
    {
      typedef __decltype(__comp) _Cmp;
      __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp((__comp));
      return std::__is_heap_until(__first, __n, __cmp) == __n;
    }

  template<typename _RandomAccessIterator>
    inline bool
    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    { return std::__is_heap(__first, std::distance(__first, __last)); }

  template<typename _RandomAccessIterator, typename _Compare>
    inline bool
    __is_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {
      return std::__is_heap(__first, (__comp),
       std::distance(__first, __last));
    }




  template<typename _RandomAccessIterator, typename _Distance, typename _Tp,
    typename _Compare>
    void
    __push_heap(_RandomAccessIterator __first,
  _Distance __holeIndex, _Distance __topIndex, _Tp __value,
  _Compare& __comp)
    {
      _Distance __parent = (__holeIndex - 1) / 2;
      while (__holeIndex > __topIndex && __comp(__first + __parent, __value))
 {
   *(__first + __holeIndex) = (*(__first + __parent));
   __holeIndex = __parent;
   __parent = (__holeIndex - 1) / 2;
 }
      *(__first + __holeIndex) = (__value);
    }
# 152 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    inline void
    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

     
      ;
      ;
      ;

      __gnu_cxx::__ops::_Iter_less_val __comp;
      _ValueType __value = (*(__last - 1));
      std::__push_heap(__first, _DistanceType((__last - __first) - 1),
         _DistanceType(0), (__value), __comp);
    }
# 187 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    push_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;


     

      ;
      ;
      ;

      __decltype(__gnu_cxx::__ops::__iter_comp_val((__comp)))
 __cmp((__comp));
      _ValueType __value = (*(__last - 1));
      std::__push_heap(__first, _DistanceType((__last - __first) - 1),
         _DistanceType(0), (__value), __cmp);
    }

  template<typename _RandomAccessIterator, typename _Distance,
    typename _Tp, typename _Compare>
    void
    __adjust_heap(_RandomAccessIterator __first, _Distance __holeIndex,
    _Distance __len, _Tp __value, _Compare __comp)
    {
      const _Distance __topIndex = __holeIndex;
      _Distance __secondChild = __holeIndex;
      while (__secondChild < (__len - 1) / 2)
 {
   __secondChild = 2 * (__secondChild + 1);
   if (__comp(__first + __secondChild,
       __first + (__secondChild - 1)))
     __secondChild--;
   *(__first + __holeIndex) = (*(__first + __secondChild));
   __holeIndex = __secondChild;
 }
      if ((__len & 1) == 0 && __secondChild == (__len - 2) / 2)
 {
   __secondChild = 2 * (__secondChild + 1);
   *(__first + __holeIndex) = (*(__first + (__secondChild - 1)))
                                  ;
   __holeIndex = __secondChild - 1;
 }
      __decltype(__gnu_cxx::__ops::__iter_comp_val((__comp)))
 __cmp((__comp));
      std::__push_heap(__first, __holeIndex, __topIndex,
         (__value), __cmp);
    }

  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    __pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
        _RandomAccessIterator __result, _Compare& __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;

      _ValueType __value = (*__result);
      *__result = (*__first);
      std::__adjust_heap(__first, _DistanceType(0),
    _DistanceType(__last - __first),
    (__value), __comp);
    }
# 269 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    inline void
    pop_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

     

      ;
      ;
      ;
      ;

      if (__last - __first > 1)
 {
   --__last;
   __gnu_cxx::__ops::_Iter_less_iter __comp;
   std::__pop_heap(__first, __last, __last, __comp);
 }
    }
# 302 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    pop_heap(_RandomAccessIterator __first,
      _RandomAccessIterator __last, _Compare __comp)
    {

     

      ;
      ;
      ;
      ;

      if (__last - __first > 1)
 {
   typedef __decltype(__comp) _Cmp;
   __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp((__comp));
   --__last;
   std::__pop_heap(__first, __last, __last, __cmp);
 }
    }

  template<typename _RandomAccessIterator, typename _Compare>
    void
    __make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare& __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
   _DistanceType;

      if (__last - __first < 2)
 return;

      const _DistanceType __len = __last - __first;
      _DistanceType __parent = (__len - 2) / 2;
      while (true)
 {
   _ValueType __value = (*(__first + __parent));
   std::__adjust_heap(__first, __parent, __len, (__value),
        __comp);
   if (__parent == 0)
     return;
   __parent--;
 }
    }
# 358 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    inline void
    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

     

      ;
      ;

      __gnu_cxx::__ops::_Iter_less_iter __comp;
      std::__make_heap(__first, __last, __comp);
    }
# 384 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    make_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {

     

      ;
      ;

      typedef __decltype(__comp) _Cmp;
      __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp((__comp));
      std::__make_heap(__first, __last, __cmp);
    }

  template<typename _RandomAccessIterator, typename _Compare>
    void
    __sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare& __comp)
    {
      while (__last - __first > 1)
 {
   --__last;
   std::__pop_heap(__first, __last, __last, __comp);
 }
    }
# 420 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator>
    inline void
    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

     

      ;
      ;
      ;

      __gnu_cxx::__ops::_Iter_less_iter __comp;
      std::__sort_heap(__first, __last, __comp);
    }
# 447 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    sort_heap(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Compare __comp)
    {

     

      ;
      ;
      ;

      typedef __decltype(__comp) _Cmp;
      __gnu_cxx::__ops::_Iter_comp_iter<_Cmp> __cmp((__comp));
      std::__sort_heap(__first, __last, __cmp);
    }
# 558 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_heap.h" 3

}
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_tempbuf.h" 1 3
# 60 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_tempbuf.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_construct.h" 1 3
# 59 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_construct.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/new" 1 3
# 37 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/new" 3
       
# 38 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/new" 3


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/exception" 1 3
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/exception" 3
       
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/exception" 3

#pragma GCC visibility push(default)


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/exception.h" 1 3
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/exception.h" 3
       
# 35 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/exception.h" 3

#pragma GCC visibility push(default)



extern "C++" {

namespace std
{
# 60 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/exception.h" 3
  class exception
  {
  public:
    exception() throw() { }
    virtual ~exception() throw();



    virtual const char*
    what() const throw();
  };

}

}

#pragma GCC visibility pop
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/exception" 2 3

extern "C++" {

namespace std
{


  class bad_exception : public exception
  {
  public:
    bad_exception() throw() { }



    virtual ~bad_exception() throw();


    virtual const char*
    what() const throw();
  };


  typedef void (*terminate_handler) ();


  typedef void (*unexpected_handler) ();


  terminate_handler set_terminate(terminate_handler) throw();
# 76 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/exception" 3
  void terminate() throw() __attribute__ ((__noreturn__));


  unexpected_handler set_unexpected(unexpected_handler) throw();
# 88 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/exception" 3
  void unexpected() __attribute__ ((__noreturn__));
# 101 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/exception" 3
  bool uncaught_exception() throw() __attribute__ ((__pure__));




  int uncaught_exceptions() throw() __attribute__ ((__pure__));



}

namespace __gnu_cxx
{

# 132 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/exception" 3
  void __verbose_terminate_handler();


}

}

#pragma GCC visibility pop
# 41 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/new" 2 3

#pragma GCC visibility push(default)

extern "C++" {

namespace std
{






  class bad_alloc : public exception
  {
  public:
    bad_alloc() throw() { }



    virtual ~bad_alloc() throw();


    virtual const char* what() const throw();
  };
# 86 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/new" 3
  struct nothrow_t
  {



  };

  extern const nothrow_t nothrow;



  typedef void (*new_handler)();



  new_handler set_new_handler(new_handler) throw();





}
# 120 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/new" 3
void* operator new(std::size_t) throw(std::bad_alloc)
  __attribute__((__externally_visible__));
void* operator new[](std::size_t) throw(std::bad_alloc)
  __attribute__((__externally_visible__));
void operator delete(void*) throw()
  __attribute__((__externally_visible__));
void operator delete[](void*) throw()
  __attribute__((__externally_visible__));






void* operator new(std::size_t, const std::nothrow_t&) throw()
  __attribute__((__externally_visible__));
void* operator new[](std::size_t, const std::nothrow_t&) throw()
  __attribute__((__externally_visible__));
void operator delete(void*, const std::nothrow_t&) throw()
  __attribute__((__externally_visible__));
void operator delete[](void*, const std::nothrow_t&) throw()
  __attribute__((__externally_visible__));
# 168 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/new" 3
inline void* operator new(std::size_t, void* __p) throw()
{ return __p; }
inline void* operator new[](std::size_t, void* __p) throw()
{ return __p; }


inline void operator delete (void*, void*) throw() { }
inline void operator delete[](void*, void*) throw() { }

}
# 216 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/new" 3
#pragma GCC visibility pop
# 60 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_construct.h" 2 3

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/alloc_traits.h" 1 3
# 32 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/alloc_traits.h" 3
       
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/alloc_traits.h" 3





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 1 3
# 46 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++allocator.h" 1 3
# 33 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++allocator.h" 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/new_allocator.h" 1 3
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/new_allocator.h" 3
namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{


  using std::size_t;
  using std::ptrdiff_t;
# 57 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/new_allocator.h" 3
  template<typename _Tp>
    class new_allocator
    {
    public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef const _Tp* const_pointer;
      typedef _Tp& reference;
      typedef const _Tp& const_reference;
      typedef _Tp value_type;

      template<typename _Tp1>
 struct rebind
 { typedef new_allocator<_Tp1> other; };







      new_allocator() throw() { }

      new_allocator(const new_allocator&) throw() { }

      template<typename _Tp1>
 new_allocator(const new_allocator<_Tp1>&) throw() { }

      ~new_allocator() throw() { }

      pointer
      address(reference __x) const
      { return std::__addressof(__x); }

      const_pointer
      address(const_reference __x) const
      { return std::__addressof(__x); }



      pointer
      allocate(size_type __n, const void* = static_cast<const void*>(0))
      {
 if (__n > this->max_size())
   std::__throw_bad_alloc();
# 111 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/new_allocator.h" 3
 return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
      }


      void
      deallocate(pointer __p, size_type)
      {







 ::operator delete(__p);
      }

      size_type
      max_size() const throw()
      { return size_t(-1) / sizeof(_Tp); }
# 144 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/new_allocator.h" 3
      void
      construct(pointer __p, const _Tp& __val)
      { ::new((void *)__p) _Tp(__val); }

      void
      destroy(pointer __p) { __p->~_Tp(); }

    };

  template<typename _Tp>
    inline bool
    operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
    { return true; }

  template<typename _Tp>
    inline bool
    operator!=(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
    { return false; }


}
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/mips64el-loongson-linux/bits/c++allocator.h" 2 3
# 47 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 2 3
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/memoryfwd.h" 1 3
# 46 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/memoryfwd.h" 3
       
# 47 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/memoryfwd.h" 3



namespace std __attribute__ ((__visibility__ ("default")))
{

# 63 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/memoryfwd.h" 3
  template<typename>
    class allocator;

  template<>
    class allocator<void>;


  template<typename, typename>
    struct uses_allocator;




}
# 48 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 2 3
# 57 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 3
namespace std __attribute__ ((__visibility__ ("default")))
{








  template<>
    class allocator<void>
    {
    public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef void* pointer;
      typedef const void* const_pointer;
      typedef void value_type;

      template<typename _Tp1>
 struct rebind
 { typedef allocator<_Tp1> other; };
# 97 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 3
    };
# 107 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 3
  template<typename _Tp>
    class allocator: public __gnu_cxx::new_allocator<_Tp>
    {
   public:
      typedef size_t size_type;
      typedef ptrdiff_t difference_type;
      typedef _Tp* pointer;
      typedef const _Tp* const_pointer;
      typedef _Tp& reference;
      typedef const _Tp& const_reference;
      typedef _Tp value_type;

      template<typename _Tp1>
 struct rebind
 { typedef allocator<_Tp1> other; };
# 131 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 3
      allocator() throw() { }

      allocator(const allocator& __a) throw()
      : __gnu_cxx::new_allocator<_Tp>(__a) { }

      template<typename _Tp1>
 allocator(const allocator<_Tp1>&) throw() { }

      ~allocator() throw() { }


    };

  template<typename _T1, typename _T2>
    inline bool
    operator==(const allocator<_T1>&, const allocator<_T2>&)
    throw()
    { return true; }

  template<typename _Tp>
    inline bool
    operator==(const allocator<_Tp>&, const allocator<_Tp>&)
    throw()
    { return true; }

  template<typename _T1, typename _T2>
    inline bool
    operator!=(const allocator<_T1>&, const allocator<_T2>&)
    throw()
    { return false; }

  template<typename _Tp>
    inline bool
    operator!=(const allocator<_Tp>&, const allocator<_Tp>&)
    throw()
    { return false; }






  extern template class allocator<char>;
  extern template class allocator<wchar_t>;






  template<typename _Alloc, bool = __is_empty(_Alloc)>
    struct __alloc_swap
    { static void _S_do_it(_Alloc&, _Alloc&) { } };

  template<typename _Alloc>
    struct __alloc_swap<_Alloc, false>
    {
      static void
      _S_do_it(_Alloc& __one, _Alloc& __two)
      {

 if (__one != __two)
   swap(__one, __two);
      }
    };


  template<typename _Alloc, bool = __is_empty(_Alloc)>
    struct __alloc_neq
    {
      static bool
      _S_do_it(const _Alloc&, const _Alloc&)
      { return false; }
    };

  template<typename _Alloc>
    struct __alloc_neq<_Alloc, false>
    {
      static bool
      _S_do_it(const _Alloc& __one, const _Alloc& __two)
      { return __one != __two; }
    };
# 244 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/allocator.h" 3

}
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/alloc_traits.h" 2 3


namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{






template<typename _Alloc>
  struct __alloc_traits



  {
    typedef _Alloc allocator_type;
# 120 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ext/alloc_traits.h" 3
    typedef typename _Alloc::pointer pointer;
    typedef typename _Alloc::const_pointer const_pointer;
    typedef typename _Alloc::value_type value_type;
    typedef typename _Alloc::reference reference;
    typedef typename _Alloc::const_reference const_reference;
    typedef typename _Alloc::size_type size_type;
    typedef typename _Alloc::difference_type difference_type;

    static pointer
    allocate(_Alloc& __a, size_type __n)
    { return __a.allocate(__n); }

    static void deallocate(_Alloc& __a, pointer __p, size_type __n)
    { __a.deallocate(__p, __n); }

    template<typename _Tp>
      static void construct(_Alloc& __a, pointer __p, const _Tp& __arg)
      { __a.construct(__p, __arg); }

    static void destroy(_Alloc& __a, pointer __p)
    { __a.destroy(__p); }

    static size_type max_size(const _Alloc& __a)
    { return __a.max_size(); }

    static const _Alloc& _S_select_on_copy(const _Alloc& __a) { return __a; }

    static void _S_on_swap(_Alloc& __a, _Alloc& __b)
    {


      std::__alloc_swap<_Alloc>::_S_do_it(__a, __b);
    }

    template<typename _Tp>
      struct rebind
      { typedef typename _Alloc::template rebind<_Tp>::other other; };

  };


}
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_construct.h" 2 3

namespace std __attribute__ ((__visibility__ ("default")))
{

# 77 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_construct.h" 3
  template<typename _T1, typename _T2>
    inline void
    _Construct(_T1* __p, const _T2& __value)
    {


      ::new(static_cast<void*>(__p)) _T1(__value);
    }


  template<typename _T1>
    inline void
    _Construct_novalue(_T1* __p)
    { ::new(static_cast<void*>(__p)) _T1; }




  template<typename _Tp>
    inline void
    _Destroy(_Tp* __pointer)
    { __pointer->~_Tp(); }

  template<bool>
    struct _Destroy_aux
    {
      template<typename _ForwardIterator>
        static void
        __destroy(_ForwardIterator __first, _ForwardIterator __last)
 {
   for (; __first != __last; ++__first)
     std::_Destroy(std::__addressof(*__first));
 }
    };

  template<>
    struct _Destroy_aux<true>
    {
      template<typename _ForwardIterator>
        static void
        __destroy(_ForwardIterator, _ForwardIterator) { }
    };






  template<typename _ForwardIterator>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
                       _Value_type;





      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 __destroy(__first, __last);
    }

  template<bool>
    struct _Destroy_n_aux
    {
      template<typename _ForwardIterator, typename _Size>
        static _ForwardIterator
        __destroy_n(_ForwardIterator __first, _Size __count)
 {
   for (; __count > 0; (void)++__first, --__count)
     std::_Destroy(std::__addressof(*__first));
   return __first;
 }
    };

  template<>
    struct _Destroy_n_aux<true>
    {
      template<typename _ForwardIterator, typename _Size>
        static _ForwardIterator
        __destroy_n(_ForwardIterator __first, _Size __count)
 {
   std::advance(__first, __count);
   return __first;
 }
    };






  template<typename _ForwardIterator, typename _Size>
    inline _ForwardIterator
    _Destroy_n(_ForwardIterator __first, _Size __count)
    {
      typedef typename iterator_traits<_ForwardIterator>::value_type
                       _Value_type;





      return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
 __destroy_n(__first, __count);
    }







  template<typename _ForwardIterator, typename _Allocator>
    void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
      _Allocator& __alloc)
    {
      typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
      for (; __first != __last; ++__first)
 __traits::destroy(__alloc, std::__addressof(*__first));
    }

  template<typename _ForwardIterator, typename _Tp>
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
      allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    }
# 232 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_construct.h" 3

}
# 61 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_tempbuf.h" 2 3

namespace std __attribute__ ((__visibility__ ("default")))
{

# 83 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_tempbuf.h" 3
  template<typename _Tp>
    pair<_Tp*, ptrdiff_t>
    get_temporary_buffer(ptrdiff_t __len)
    {
      const ptrdiff_t __max =
 __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
      if (__len > __max)
 __len = __max;

      while (__len > 0)
 {
   _Tp* __tmp = static_cast<_Tp*>(::operator new(__len * sizeof(_Tp),
       std::nothrow));
   if (__tmp != 0)
     return std::pair<_Tp*, ptrdiff_t>(__tmp, __len);
   __len /= 2;
 }
      return std::pair<_Tp*, ptrdiff_t>(static_cast<_Tp*>(0), 0);
    }
# 110 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_tempbuf.h" 3
  template<typename _Tp>
    inline void
    return_temporary_buffer(_Tp* __p)
    { ::operator delete(__p, std::nothrow); }







  template<typename _ForwardIterator, typename _Tp>
    class _Temporary_buffer
    {

     

    public:
      typedef _Tp value_type;
      typedef value_type* pointer;
      typedef pointer iterator;
      typedef ptrdiff_t size_type;

    protected:
      size_type _M_original_len;
      size_type _M_len;
      pointer _M_buffer;

    public:

      size_type
      size() const
      { return _M_len; }


      size_type
      requested_size() const
      { return _M_original_len; }


      iterator
      begin()
      { return _M_buffer; }


      iterator
      end()
      { return _M_buffer + _M_len; }





      _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last);

      ~_Temporary_buffer()
      {
 std::_Destroy(_M_buffer, _M_buffer + _M_len);
 std::return_temporary_buffer(_M_buffer);
      }

    private:

      _Temporary_buffer(const _Temporary_buffer&);

      void
      operator=(const _Temporary_buffer&);
    };


  template<bool>
    struct __uninitialized_construct_buf_dispatch
    {
      template<typename _Pointer, typename _ForwardIterator>
        static void
        __ucr(_Pointer __first, _Pointer __last,
       _ForwardIterator __seed)
        {
   if(__first == __last)
     return;

   _Pointer __cur = __first;
   if (true)
     {
       std::_Construct(std::__addressof(*__first),
         (*__seed));
       _Pointer __prev = __cur;
       ++__cur;
       for(; __cur != __last; ++__cur, ++__prev)
  std::_Construct(std::__addressof(*__cur),
    (*__prev));
       *__seed = (*__prev);
     }
   if (false)
     {
       std::_Destroy(__first, __cur);
       ;
     }
 }
    };

  template<>
    struct __uninitialized_construct_buf_dispatch<true>
    {
      template<typename _Pointer, typename _ForwardIterator>
        static void
        __ucr(_Pointer, _Pointer, _ForwardIterator) { }
    };
# 229 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_tempbuf.h" 3
  template<typename _Pointer, typename _ForwardIterator>
    inline void
    __uninitialized_construct_buf(_Pointer __first, _Pointer __last,
      _ForwardIterator __seed)
    {
      typedef typename std::iterator_traits<_Pointer>::value_type
 _ValueType;

      std::__uninitialized_construct_buf_dispatch<
        __has_trivial_constructor(_ValueType)>::
   __ucr(__first, __last, __seed);
    }

  template<typename _ForwardIterator, typename _Tp>
    _Temporary_buffer<_ForwardIterator, _Tp>::
    _Temporary_buffer(_ForwardIterator __first, _ForwardIterator __last)
    : _M_original_len(std::distance(__first, __last)),
      _M_len(0), _M_buffer(0)
    {
      if (true)
 {
   std::pair<pointer, size_type> __p(std::get_temporary_buffer<
         value_type>(_M_original_len));
   _M_buffer = __p.first;
   _M_len = __p.second;
   if (_M_buffer)
     std::__uninitialized_construct_buf(_M_buffer, _M_buffer + _M_len,
            __first);
 }
      if (false)
 {
   std::return_temporary_buffer(_M_buffer);
   _M_buffer = 0;
   _M_len = 0;
   ;
 }
    }


}
# 63 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 2 3
# 71 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
namespace std __attribute__ ((__visibility__ ("default")))
{



  template<typename _Iterator, typename _Compare>
    void
    __move_median_to_first(_Iterator __result,_Iterator __a, _Iterator __b,
      _Iterator __c, _Compare __comp)
    {
      if (__comp(__a, __b))
 {
   if (__comp(__b, __c))
     std::iter_swap(__result, __b);
   else if (__comp(__a, __c))
     std::iter_swap(__result, __c);
   else
     std::iter_swap(__result, __a);
 }
      else if (__comp(__a, __c))
 std::iter_swap(__result, __a);
      else if (__comp(__b, __c))
 std::iter_swap(__result, __c);
      else
 std::iter_swap(__result, __b);
    }


  template<typename _InputIterator, typename _Predicate>
    inline _InputIterator
    __find_if(_InputIterator __first, _InputIterator __last,
       _Predicate __pred, input_iterator_tag)
    {
      while (__first != __last && !__pred(__first))
 ++__first;
      return __first;
    }


  template<typename _RandomAccessIterator, typename _Predicate>
    _RandomAccessIterator
    __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,
       _Predicate __pred, random_access_iterator_tag)
    {
      typename iterator_traits<_RandomAccessIterator>::difference_type
 __trip_count = (__last - __first) >> 2;

      for (; __trip_count > 0; --__trip_count)
 {
   if (__pred(__first))
     return __first;
   ++__first;

   if (__pred(__first))
     return __first;
   ++__first;

   if (__pred(__first))
     return __first;
   ++__first;

   if (__pred(__first))
     return __first;
   ++__first;
 }

      switch (__last - __first)
 {
 case 3:
   if (__pred(__first))
     return __first;
   ++__first;
 case 2:
   if (__pred(__first))
     return __first;
   ++__first;
 case 1:
   if (__pred(__first))
     return __first;
   ++__first;
 case 0:
 default:
   return __last;
 }
    }

  template<typename _Iterator, typename _Predicate>
    inline _Iterator
    __find_if(_Iterator __first, _Iterator __last, _Predicate __pred)
    {
      return __find_if(__first, __last, __pred,
         std::__iterator_category(__first));
    }


  template<typename _InputIterator, typename _Predicate>
    inline _InputIterator
    __find_if_not(_InputIterator __first, _InputIterator __last,
    _Predicate __pred)
    {
      return std::__find_if(__first, __last,
       __gnu_cxx::__ops::__negate(__pred),
       std::__iterator_category(__first));
    }




  template<typename _InputIterator, typename _Predicate, typename _Distance>
    _InputIterator
    __find_if_not_n(_InputIterator __first, _Distance& __len, _Predicate __pred)
    {
      for (; __len; --__len, ++__first)
 if (!__pred(__first))
   break;
      return __first;
    }
# 202 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    _ForwardIterator1
    __search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2,
      _BinaryPredicate __predicate)
    {

      if (__first1 == __last1 || __first2 == __last2)
 return __first1;


      _ForwardIterator2 __p1(__first2);
      if (++__p1 == __last2)
 return std::__find_if(__first1, __last1,
  __gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));


      _ForwardIterator2 __p;
      _ForwardIterator1 __current = __first1;

      for (;;)
 {
   __first1 =
     std::__find_if(__first1, __last1,
  __gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));

   if (__first1 == __last1)
     return __last1;

   __p = __p1;
   __current = __first1;
   if (++__current == __last1)
     return __last1;

   while (__predicate(__current, __p))
     {
       if (++__p == __last2)
  return __first1;
       if (++__current == __last1)
  return __last1;
     }
   ++__first1;
 }
      return __first1;
    }






  template<typename _ForwardIterator, typename _Integer,
    typename _UnaryPredicate>
    _ForwardIterator
    __search_n_aux(_ForwardIterator __first, _ForwardIterator __last,
     _Integer __count, _UnaryPredicate __unary_pred,
     std::forward_iterator_tag)
    {
      __first = std::__find_if(__first, __last, __unary_pred);
      while (__first != __last)
 {
   typename iterator_traits<_ForwardIterator>::difference_type
     __n = __count;
   _ForwardIterator __i = __first;
   ++__i;
   while (__i != __last && __n != 1 && __unary_pred(__i))
     {
       ++__i;
       --__n;
     }
   if (__n == 1)
     return __first;
   if (__i == __last)
     return __last;
   __first = std::__find_if(++__i, __last, __unary_pred);
 }
      return __last;
    }





  template<typename _RandomAccessIter, typename _Integer,
    typename _UnaryPredicate>
    _RandomAccessIter
    __search_n_aux(_RandomAccessIter __first, _RandomAccessIter __last,
     _Integer __count, _UnaryPredicate __unary_pred,
     std::random_access_iterator_tag)
    {
      typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 _DistanceType;

      _DistanceType __tailSize = __last - __first;
      _DistanceType __remainder = __count;

      while (__remainder <= __tailSize)
 {
   __first += __remainder;
   __tailSize -= __remainder;


   _RandomAccessIter __backTrack = __first;
   while (__unary_pred(--__backTrack))
     {
       if (--__remainder == 0)
  return (__first - __count);
     }
   __remainder = __count + 1 - (__first - __backTrack);
 }
      return __last;
    }

  template<typename _ForwardIterator, typename _Integer,
    typename _UnaryPredicate>
    _ForwardIterator
    __search_n(_ForwardIterator __first, _ForwardIterator __last,
        _Integer __count,
        _UnaryPredicate __unary_pred)
    {
      if (__count <= 0)
 return __first;

      if (__count == 1)
 return std::__find_if(__first, __last, __unary_pred);

      return std::__search_n_aux(__first, __last, __count, __unary_pred,
     std::__iterator_category(__first));
    }


  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    _ForwardIterator1
    __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
        _ForwardIterator2 __first2, _ForwardIterator2 __last2,
        forward_iterator_tag, forward_iterator_tag,
        _BinaryPredicate __comp)
    {
      if (__first2 == __last2)
 return __last1;

      _ForwardIterator1 __result = __last1;
      while (1)
 {
   _ForwardIterator1 __new_result
     = std::__search(__first1, __last1, __first2, __last2, __comp);
   if (__new_result == __last1)
     return __result;
   else
     {
       __result = __new_result;
       __first1 = __new_result;
       ++__first1;
     }
 }
    }


  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BinaryPredicate>
    _BidirectionalIterator1
    __find_end(_BidirectionalIterator1 __first1,
        _BidirectionalIterator1 __last1,
        _BidirectionalIterator2 __first2,
        _BidirectionalIterator2 __last2,
        bidirectional_iterator_tag, bidirectional_iterator_tag,
        _BinaryPredicate __comp)
    {

     

     


      typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
      typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;

      _RevIterator1 __rlast1(__first1);
      _RevIterator2 __rlast2(__first2);
      _RevIterator1 __rresult = std::__search(_RevIterator1(__last1), __rlast1,
           _RevIterator2(__last2), __rlast2,
           __comp);

      if (__rresult == __rlast1)
 return __last1;
      else
 {
   _BidirectionalIterator1 __result = __rresult.base();
   std::advance(__result, -std::distance(__first2, __last2));
   return __result;
 }
    }
# 423 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    inline _ForwardIterator1
    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2)
    {

     
     
     


      ;
      ;

      return std::__find_end(__first1, __last1, __first2, __last2,
        std::__iterator_category(__first1),
        std::__iterator_category(__first2),
        __gnu_cxx::__ops::__iter_equal_to_iter());
    }
# 471 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    inline _ForwardIterator1
    find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
      _ForwardIterator2 __first2, _ForwardIterator2 __last2,
      _BinaryPredicate __comp)
    {

     
     
     


      ;
      ;

      return std::__find_end(__first1, __last1, __first2, __last2,
        std::__iterator_category(__first1),
        std::__iterator_category(__first2),
        __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }
# 639 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _Predicate>
    _OutputIterator
    __remove_copy_if(_InputIterator __first, _InputIterator __last,
       _OutputIterator __result, _Predicate __pred)
    {
      for (; __first != __last; ++__first)
 if (!__pred(__first))
   {
     *__result = *__first;
     ++__result;
   }
      return __result;
    }
# 668 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator, typename _Tp>
    inline _OutputIterator
    remove_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result, const _Tp& __value)
    {

     
     

     

      ;

      return std::__remove_copy_if(__first, __last, __result,
 __gnu_cxx::__ops::__iter_equals_val(__value));
    }
# 700 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _Predicate>
    inline _OutputIterator
    remove_copy_if(_InputIterator __first, _InputIterator __last,
     _OutputIterator __result, _Predicate __pred)
    {

     
     

     

      ;

      return std::__remove_copy_if(__first, __last, __result,
       __gnu_cxx::__ops::__pred_iter(__pred));
    }
# 858 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    __remove_if(_ForwardIterator __first, _ForwardIterator __last,
  _Predicate __pred)
    {
      __first = std::__find_if(__first, __last, __pred);
      if (__first == __last)
 return __first;
      _ForwardIterator __result = __first;
      ++__first;
      for (; __first != __last; ++__first)
 if (!__pred(__first))
   {
     *__result = (*__first);
     ++__result;
   }
      return __result;
    }
# 894 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    remove(_ForwardIterator __first, _ForwardIterator __last,
    const _Tp& __value)
    {

     

     

      ;

      return std::__remove_if(__first, __last,
  __gnu_cxx::__ops::__iter_equals_val(__value));
    }
# 927 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    inline _ForwardIterator
    remove_if(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      return std::__remove_if(__first, __last,
         __gnu_cxx::__ops::__pred_iter(__pred));
    }

  template<typename _ForwardIterator, typename _BinaryPredicate>
    _ForwardIterator
    __adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
      _BinaryPredicate __binary_pred)
    {
      if (__first == __last)
 return __last;
      _ForwardIterator __next = __first;
      while (++__next != __last)
 {
   if (__binary_pred(__first, __next))
     return __first;
   __first = __next;
 }
      return __last;
    }

  template<typename _ForwardIterator, typename _BinaryPredicate>
    _ForwardIterator
    __unique(_ForwardIterator __first, _ForwardIterator __last,
      _BinaryPredicate __binary_pred)
    {

      __first = std::__adjacent_find(__first, __last, __binary_pred);
      if (__first == __last)
 return __last;


      _ForwardIterator __dest = __first;
      ++__first;
      while (++__first != __last)
 if (!__binary_pred(__dest, __first))
   *++__dest = (*__first);
      return ++__dest;
    }
# 993 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    inline _ForwardIterator
    unique(_ForwardIterator __first, _ForwardIterator __last)
    {

     

     

      ;

      return std::__unique(__first, __last,
      __gnu_cxx::__ops::__iter_equal_to_iter());
    }
# 1023 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _BinaryPredicate>
    inline _ForwardIterator
    unique(_ForwardIterator __first, _ForwardIterator __last,
    _BinaryPredicate __binary_pred)
    {

     

     


      ;

      return std::__unique(__first, __last,
      __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
    }







  template<typename _ForwardIterator, typename _OutputIterator,
    typename _BinaryPredicate>
    _OutputIterator
    __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
    _OutputIterator __result, _BinaryPredicate __binary_pred,
    forward_iterator_tag, output_iterator_tag)
    {

     



      _ForwardIterator __next = __first;
      *__result = *__first;
      while (++__next != __last)
 if (!__binary_pred(__first, __next))
   {
     __first = __next;
     *++__result = *__first;
   }
      return ++__result;
    }







  template<typename _InputIterator, typename _OutputIterator,
    typename _BinaryPredicate>
    _OutputIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _OutputIterator __result, _BinaryPredicate __binary_pred,
    input_iterator_tag, output_iterator_tag)
    {

     



      typename iterator_traits<_InputIterator>::value_type __value = *__first;
      __decltype(__gnu_cxx::__ops::__iter_comp_val(__binary_pred))
 __rebound_pred
 = __gnu_cxx::__ops::__iter_comp_val(__binary_pred);
      *__result = __value;
      while (++__first != __last)
 if (!__rebound_pred(__first, __value))
   {
     __value = *__first;
     *++__result = __value;
   }
      return ++__result;
    }







  template<typename _InputIterator, typename _ForwardIterator,
    typename _BinaryPredicate>
    _ForwardIterator
    __unique_copy(_InputIterator __first, _InputIterator __last,
    _ForwardIterator __result, _BinaryPredicate __binary_pred,
    input_iterator_tag, forward_iterator_tag)
    {

     


      *__result = *__first;
      while (++__first != __last)
 if (!__binary_pred(__result, __first))
   *++__result = *__first;
      return ++__result;
    }






  template<typename _BidirectionalIterator>
    void
    __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
       bidirectional_iterator_tag)
    {
      while (true)
 if (__first == __last || __first == --__last)
   return;
 else
   {
     std::iter_swap(__first, __last);
     ++__first;
   }
    }






  template<typename _RandomAccessIterator>
    void
    __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
       random_access_iterator_tag)
    {
      if (__first == __last)
 return;
      --__last;
      while (__first < __last)
 {
   std::iter_swap(__first, __last);
   ++__first;
   --__last;
 }
    }
# 1178 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    inline void
    reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
    {

     

      ;
      std::__reverse(__first, __last, std::__iterator_category(__first));
    }
# 1205 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _OutputIterator>
    _OutputIterator
    reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
   _OutputIterator __result)
    {

     

     

      ;

      while (__first != __last)
 {
   --__last;
   *__result = *__last;
   ++__result;
 }
      return __result;
    }





  template<typename _EuclideanRingElement>
    _EuclideanRingElement
    __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
    {
      while (__n != 0)
 {
   _EuclideanRingElement __t = __m % __n;
   __m = __n;
   __n = __t;
 }
      return __m;
    }

  inline namespace _V2
  {


  template<typename _ForwardIterator>
    _ForwardIterator
    __rotate(_ForwardIterator __first,
      _ForwardIterator __middle,
      _ForwardIterator __last,
      forward_iterator_tag)
    {
      if (__first == __middle)
 return __last;
      else if (__last == __middle)
 return __first;

      _ForwardIterator __first2 = __middle;
      do
 {
   std::iter_swap(__first, __first2);
   ++__first;
   ++__first2;
   if (__first == __middle)
     __middle = __first2;
 }
      while (__first2 != __last);

      _ForwardIterator __ret = __first;

      __first2 = __middle;

      while (__first2 != __last)
 {
   std::iter_swap(__first, __first2);
   ++__first;
   ++__first2;
   if (__first == __middle)
     __middle = __first2;
   else if (__first2 == __last)
     __first2 = __middle;
 }
      return __ret;
    }


  template<typename _BidirectionalIterator>
    _BidirectionalIterator
    __rotate(_BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
       bidirectional_iterator_tag)
    {

     


      if (__first == __middle)
 return __last;
      else if (__last == __middle)
 return __first;

      std::__reverse(__first, __middle, bidirectional_iterator_tag());
      std::__reverse(__middle, __last, bidirectional_iterator_tag());

      while (__first != __middle && __middle != __last)
 {
   std::iter_swap(__first, --__last);
   ++__first;
 }

      if (__first == __middle)
 {
   std::__reverse(__middle, __last, bidirectional_iterator_tag());
   return __last;
 }
      else
 {
   std::__reverse(__first, __middle, bidirectional_iterator_tag());
   return __first;
 }
    }


  template<typename _RandomAccessIterator>
    _RandomAccessIterator
    __rotate(_RandomAccessIterator __first,
      _RandomAccessIterator __middle,
      _RandomAccessIterator __last,
      random_access_iterator_tag)
    {

     


      if (__first == __middle)
 return __last;
      else if (__last == __middle)
 return __first;

      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;

      _Distance __n = __last - __first;
      _Distance __k = __middle - __first;

      if (__k == __n - __k)
 {
   std::swap_ranges(__first, __middle, __middle);
   return __middle;
 }

      _RandomAccessIterator __p = __first;
      _RandomAccessIterator __ret = __first + (__last - __middle);

      for (;;)
 {
   if (__k < __n - __k)
     {
       if (__is_pod(_ValueType) && __k == 1)
  {
    _ValueType __t = (*__p);
    std::copy(__p + 1, __p + __n, __p);
    *(__p + __n - 1) = (__t);
    return __ret;
  }
       _RandomAccessIterator __q = __p + __k;
       for (_Distance __i = 0; __i < __n - __k; ++ __i)
  {
    std::iter_swap(__p, __q);
    ++__p;
    ++__q;
  }
       __n %= __k;
       if (__n == 0)
  return __ret;
       std::swap(__n, __k);
       __k = __n - __k;
     }
   else
     {
       __k = __n - __k;
       if (__is_pod(_ValueType) && __k == 1)
  {
    _ValueType __t = (*(__p + __n - 1));
    std::copy_backward(__p, __p + __n - 1, __p + __n);
    *__p = (__t);
    return __ret;
  }
       _RandomAccessIterator __q = __p + __n;
       __p = __q - __k;
       for (_Distance __i = 0; __i < __n - __k; ++ __i)
  {
    --__p;
    --__q;
    std::iter_swap(__p, __q);
  }
       __n %= __k;
       if (__n == 0)
  return __ret;
       std::swap(__n, __k);
     }
 }
    }
# 1432 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    inline _ForwardIterator
    rotate(_ForwardIterator __first, _ForwardIterator __middle,
    _ForwardIterator __last)
    {

     

      ;
      ;

      return std::__rotate(__first, __middle, __last,
      std::__iterator_category(__first));
    }

  }
# 1469 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _OutputIterator>
    inline _OutputIterator
    rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
  _ForwardIterator __last, _OutputIterator __result)
    {

     
     

      ;
      ;

      return std::copy(__first, __middle,
         std::copy(__middle, __last, __result));
    }


  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    __partition(_ForwardIterator __first, _ForwardIterator __last,
  _Predicate __pred, forward_iterator_tag)
    {
      if (__first == __last)
 return __first;

      while (__pred(*__first))
 if (++__first == __last)
   return __first;

      _ForwardIterator __next = __first;

      while (++__next != __last)
 if (__pred(*__next))
   {
     std::iter_swap(__first, __next);
     ++__first;
   }

      return __first;
    }


  template<typename _BidirectionalIterator, typename _Predicate>
    _BidirectionalIterator
    __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
  _Predicate __pred, bidirectional_iterator_tag)
    {
      while (true)
 {
   while (true)
     if (__first == __last)
       return __first;
     else if (__pred(*__first))
       ++__first;
     else
       break;
   --__last;
   while (true)
     if (__first == __last)
       return __first;
     else if (!bool(__pred(*__last)))
       --__last;
     else
       break;
   std::iter_swap(__first, __last);
   ++__first;
 }
    }
# 1546 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
    typename _Distance>
    _ForwardIterator
    __stable_partition_adaptive(_ForwardIterator __first,
    _ForwardIterator __last,
    _Predicate __pred, _Distance __len,
    _Pointer __buffer,
    _Distance __buffer_size)
    {
      if (__len == 1)
 return __first;

      if (__len <= __buffer_size)
 {
   _ForwardIterator __result1 = __first;
   _Pointer __result2 = __buffer;




   *__result2 = (*__first);
   ++__result2;
   ++__first;
   for (; __first != __last; ++__first)
     if (__pred(__first))
       {
  *__result1 = (*__first);
  ++__result1;
       }
     else
       {
  *__result2 = (*__first);
  ++__result2;
       }

   std::copy(__buffer, __result2, __result1);
   return __result1;
 }

      _ForwardIterator __middle = __first;
      std::advance(__middle, __len / 2);
      _ForwardIterator __left_split =
 std::__stable_partition_adaptive(__first, __middle, __pred,
      __len / 2, __buffer,
      __buffer_size);



      _Distance __right_len = __len - __len / 2;
      _ForwardIterator __right_split =
 std::__find_if_not_n(__middle, __right_len, __pred);

      if (__right_len)
 __right_split =
   std::__stable_partition_adaptive(__right_split, __last, __pred,
        __right_len,
        __buffer, __buffer_size);

      std::rotate(__left_split, __middle, __right_split);
      std::advance(__left_split, std::distance(__middle, __right_split));
      return __left_split;
    }

  template<typename _ForwardIterator, typename _Predicate>
    _ForwardIterator
    __stable_partition(_ForwardIterator __first, _ForwardIterator __last,
         _Predicate __pred)
    {
      __first = std::__find_if_not(__first, __last, __pred);

      if (__first == __last)
 return __first;

      typedef typename iterator_traits<_ForwardIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;

      _Temporary_buffer<_ForwardIterator, _ValueType> __buf(__first, __last);
      return
 std::__stable_partition_adaptive(__first, __last, __pred,
      _DistanceType(__buf.requested_size()),
      __buf.begin(),
      _DistanceType(__buf.size()));
    }
# 1649 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    inline _ForwardIterator
    stable_partition(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      return std::__stable_partition(__first, __last,
         __gnu_cxx::__ops::__pred_iter(__pred));
    }


  template<typename _RandomAccessIterator, typename _Compare>
    void
    __heap_select(_RandomAccessIterator __first,
    _RandomAccessIterator __middle,
    _RandomAccessIterator __last, _Compare __comp)
    {
      std::__make_heap(__first, __middle, __comp);
      for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
 if (__comp(__i, __first))
   std::__pop_heap(__first, __middle, __i, __comp);
    }



  template<typename _InputIterator, typename _RandomAccessIterator,
    typename _Compare>
    _RandomAccessIterator
    __partial_sort_copy(_InputIterator __first, _InputIterator __last,
   _RandomAccessIterator __result_first,
   _RandomAccessIterator __result_last,
   _Compare __comp)
    {
      typedef typename iterator_traits<_InputIterator>::value_type
 _InputValueType;
      typedef iterator_traits<_RandomAccessIterator> _RItTraits;
      typedef typename _RItTraits::difference_type _DistanceType;

      if (__result_first == __result_last)
 return __result_last;
      _RandomAccessIterator __result_real_last = __result_first;
      while (__first != __last && __result_real_last != __result_last)
 {
   *__result_real_last = *__first;
   ++__result_real_last;
   ++__first;
 }

      std::__make_heap(__result_first, __result_real_last, __comp);
      while (__first != __last)
 {
   if (__comp(__first, __result_first))
     std::__adjust_heap(__result_first, _DistanceType(0),
          _DistanceType(__result_real_last
          - __result_first),
          _InputValueType(*__first), __comp);
   ++__first;
 }
      std::__sort_heap(__result_first, __result_real_last, __comp);
      return __result_real_last;
    }
# 1735 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _RandomAccessIterator>
    inline _RandomAccessIterator
    partial_sort_copy(_InputIterator __first, _InputIterator __last,
        _RandomAccessIterator __result_first,
        _RandomAccessIterator __result_last)
    {
# 1749 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
     
     

     

     
      ;
      ;
      ;

      return std::__partial_sort_copy(__first, __last,
          __result_first, __result_last,
          __gnu_cxx::__ops::__iter_less_iter());
    }
# 1784 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _RandomAccessIterator,
    typename _Compare>
    inline _RandomAccessIterator
    partial_sort_copy(_InputIterator __first, _InputIterator __last,
        _RandomAccessIterator __result_first,
        _RandomAccessIterator __result_last,
        _Compare __comp)
    {
# 1800 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
     
     

     

     

     

      ;
      ;
      ;

      return std::__partial_sort_copy(__first, __last,
          __result_first, __result_last,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }


  template<typename _RandomAccessIterator, typename _Compare>
    void
    __unguarded_linear_insert(_RandomAccessIterator __last,
         _Compare __comp)
    {
      typename iterator_traits<_RandomAccessIterator>::value_type
 __val = (*__last);
      _RandomAccessIterator __next = __last;
      --__next;
      while (__comp(__val, __next))
 {
   *__last = (*__next);
   __last = __next;
   --__next;
 }
      *__last = (__val);
    }


  template<typename _RandomAccessIterator, typename _Compare>
    void
    __insertion_sort(_RandomAccessIterator __first,
       _RandomAccessIterator __last, _Compare __comp)
    {
      if (__first == __last) return;

      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 {
   if (__comp(__i, __first))
     {
       typename iterator_traits<_RandomAccessIterator>::value_type
  __val = (*__i);
       std::copy_backward(__first, __i, __i + 1);
       *__first = (__val);
     }
   else
     std::__unguarded_linear_insert(__i,
    __gnu_cxx::__ops::__val_comp_iter(__comp));
 }
    }


  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    __unguarded_insertion_sort(_RandomAccessIterator __first,
          _RandomAccessIterator __last, _Compare __comp)
    {
      for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
 std::__unguarded_linear_insert(__i,
    __gnu_cxx::__ops::__val_comp_iter(__comp));
    }





  enum { _S_threshold = 16 };


  template<typename _RandomAccessIterator, typename _Compare>
    void
    __final_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last, _Compare __comp)
    {
      if (__last - __first > int(_S_threshold))
 {
   std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
   std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
       __comp);
 }
      else
 std::__insertion_sort(__first, __last, __comp);
    }


  template<typename _RandomAccessIterator, typename _Compare>
    _RandomAccessIterator
    __unguarded_partition(_RandomAccessIterator __first,
     _RandomAccessIterator __last,
     _RandomAccessIterator __pivot, _Compare __comp)
    {
      while (true)
 {
   while (__comp(__first, __pivot))
     ++__first;
   --__last;
   while (__comp(__pivot, __last))
     --__last;
   if (!(__first < __last))
     return __first;
   std::iter_swap(__first, __last);
   ++__first;
 }
    }


  template<typename _RandomAccessIterator, typename _Compare>
    inline _RandomAccessIterator
    __unguarded_partition_pivot(_RandomAccessIterator __first,
    _RandomAccessIterator __last, _Compare __comp)
    {
      _RandomAccessIterator __mid = __first + (__last - __first) / 2;
      std::__move_median_to_first(__first, __first + 1, __mid, __last - 1,
      __comp);
      return std::__unguarded_partition(__first + 1, __last, __first, __comp);
    }

  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    __partial_sort(_RandomAccessIterator __first,
     _RandomAccessIterator __middle,
     _RandomAccessIterator __last,
     _Compare __comp)
    {
      std::__heap_select(__first, __middle, __last, __comp);
      std::__sort_heap(__first, __middle, __comp);
    }


  template<typename _RandomAccessIterator, typename _Size, typename _Compare>
    void
    __introsort_loop(_RandomAccessIterator __first,
       _RandomAccessIterator __last,
       _Size __depth_limit, _Compare __comp)
    {
      while (__last - __first > int(_S_threshold))
 {
   if (__depth_limit == 0)
     {
       std::__partial_sort(__first, __last, __last, __comp);
       return;
     }
   --__depth_limit;
   _RandomAccessIterator __cut =
     std::__unguarded_partition_pivot(__first, __last, __comp);
   std::__introsort_loop(__cut, __last, __depth_limit, __comp);
   __last = __cut;
 }
    }



  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    __sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
    _Compare __comp)
    {
      if (__first != __last)
 {
   std::__introsort_loop(__first, __last,
    std::__lg(__last - __first) * 2,
    __comp);
   std::__final_insertion_sort(__first, __last, __comp);
 }
    }

  template<typename _RandomAccessIterator, typename _Size, typename _Compare>
    void
    __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
    _RandomAccessIterator __last, _Size __depth_limit,
    _Compare __comp)
    {
      while (__last - __first > 3)
 {
   if (__depth_limit == 0)
     {
       std::__heap_select(__first, __nth + 1, __last, __comp);

       std::iter_swap(__first, __nth);
       return;
     }
   --__depth_limit;
   _RandomAccessIterator __cut =
     std::__unguarded_partition_pivot(__first, __last, __comp);
   if (__cut <= __nth)
     __first = __cut;
   else
     __last = __cut;
 }
      std::__insertion_sort(__first, __last, __comp);
    }
# 2021 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    inline _ForwardIterator
    lower_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val, _Compare __comp)
    {

     
     

     
                    ;

      return std::__lower_bound(__first, __last, __val,
    __gnu_cxx::__ops::__iter_comp_val(__comp));
    }

  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    _ForwardIterator
    __upper_bound(_ForwardIterator __first, _ForwardIterator __last,
    const _Tp& __val, _Compare __comp)
    {
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;

      _DistanceType __len = std::distance(__first, __last);

      while (__len > 0)
 {
   _DistanceType __half = __len >> 1;
   _ForwardIterator __middle = __first;
   std::advance(__middle, __half);
   if (__comp(__val, __middle))
     __len = __half;
   else
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
 }
      return __first;
    }
# 2075 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    inline _ForwardIterator
    upper_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {

     
     

      ;

      return std::__upper_bound(__first, __last, __val,
    __gnu_cxx::__ops::__val_less_iter());
    }
# 2105 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    inline _ForwardIterator
    upper_bound(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val, _Compare __comp)
    {

     
     

     
                    ;

      return std::__upper_bound(__first, __last, __val,
    __gnu_cxx::__ops::__val_comp_iter(__comp));
    }

  template<typename _ForwardIterator, typename _Tp,
    typename _CompareItTp, typename _CompareTpIt>
    pair<_ForwardIterator, _ForwardIterator>
    __equal_range(_ForwardIterator __first, _ForwardIterator __last,
    const _Tp& __val,
    _CompareItTp __comp_it_val, _CompareTpIt __comp_val_it)
    {
      typedef typename iterator_traits<_ForwardIterator>::difference_type
 _DistanceType;

      _DistanceType __len = std::distance(__first, __last);

      while (__len > 0)
 {
   _DistanceType __half = __len >> 1;
   _ForwardIterator __middle = __first;
   std::advance(__middle, __half);
   if (__comp_it_val(__middle, __val))
     {
       __first = __middle;
       ++__first;
       __len = __len - __half - 1;
     }
   else if (__comp_val_it(__val, __middle))
     __len = __half;
   else
     {
       _ForwardIterator __left
  = std::__lower_bound(__first, __middle, __val, __comp_it_val);
       std::advance(__first, __len);
       _ForwardIterator __right
  = std::__upper_bound(++__middle, __first, __val, __comp_val_it);
       return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
     }
 }
      return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
    }
# 2176 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    inline pair<_ForwardIterator, _ForwardIterator>
    equal_range(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val)
    {

     
     

     

      ;
      ;

      return std::__equal_range(__first, __last, __val,
    __gnu_cxx::__ops::__iter_less_val(),
    __gnu_cxx::__ops::__val_less_iter());
    }
# 2212 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    inline pair<_ForwardIterator, _ForwardIterator>
    equal_range(_ForwardIterator __first, _ForwardIterator __last,
  const _Tp& __val, _Compare __comp)
    {

     
     

     

     
                    ;
     
                    ;

      return std::__equal_range(__first, __last, __val,
    __gnu_cxx::__ops::__iter_comp_val(__comp),
    __gnu_cxx::__ops::__val_comp_iter(__comp));
    }
# 2245 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    bool
    binary_search(_ForwardIterator __first, _ForwardIterator __last,
    const _Tp& __val)
    {

     
     

      ;
      ;

      _ForwardIterator __i
 = std::__lower_bound(__first, __last, __val,
        __gnu_cxx::__ops::__iter_less_val());
      return __i != __last && !(__val < *__i);
    }
# 2278 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp, typename _Compare>
    bool
    binary_search(_ForwardIterator __first, _ForwardIterator __last,
    const _Tp& __val, _Compare __comp)
    {

     
     

     
                    ;
     
                    ;

      _ForwardIterator __i
 = std::__lower_bound(__first, __last, __val,
        __gnu_cxx::__ops::__iter_comp_val(__comp));
      return __i != __last && !bool(__comp(__val, *__i));
    }




  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    void
    __move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result, _Compare __comp)
    {
      while (__first1 != __last1 && __first2 != __last2)
 {
   if (__comp(__first2, __first1))
     {
       *__result = (*__first2);
       ++__first2;
     }
   else
     {
       *__result = (*__first1);
       ++__first1;
     }
   ++__result;
 }
      if (__first1 != __last1)
 std::copy(__first1, __last1, __result);
    }


  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _BidirectionalIterator3, typename _Compare>
    void
    __move_merge_adaptive_backward(_BidirectionalIterator1 __first1,
       _BidirectionalIterator1 __last1,
       _BidirectionalIterator2 __first2,
       _BidirectionalIterator2 __last2,
       _BidirectionalIterator3 __result,
       _Compare __comp)
    {
      if (__first1 == __last1)
 {
   std::copy_backward(__first2, __last2, __result);
   return;
 }
      else if (__first2 == __last2)
 return;

      --__last1;
      --__last2;
      while (true)
 {
   if (__comp(__last2, __last1))
     {
       *--__result = (*__last1);
       if (__first1 == __last1)
  {
    std::copy_backward(__first2, ++__last2, __result);
    return;
  }
       --__last1;
     }
   else
     {
       *--__result = (*__last2);
       if (__first2 == __last2)
  return;
       --__last2;
     }
 }
    }


  template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
    typename _Distance>
    _BidirectionalIterator1
    __rotate_adaptive(_BidirectionalIterator1 __first,
        _BidirectionalIterator1 __middle,
        _BidirectionalIterator1 __last,
        _Distance __len1, _Distance __len2,
        _BidirectionalIterator2 __buffer,
        _Distance __buffer_size)
    {
      _BidirectionalIterator2 __buffer_end;
      if (__len1 > __len2 && __len2 <= __buffer_size)
 {
   if (__len2)
     {
       __buffer_end = std::copy(__middle, __last, __buffer);
       std::copy_backward(__first, __middle, __last);
       return std::copy(__buffer, __buffer_end, __first);
     }
   else
     return __first;
 }
      else if (__len1 <= __buffer_size)
 {
   if (__len1)
     {
       __buffer_end = std::copy(__first, __middle, __buffer);
       std::copy(__middle, __last, __first);
       return std::copy_backward(__buffer, __buffer_end, __last);
     }
   else
     return __last;
 }
      else
 {
   std::rotate(__first, __middle, __last);
   std::advance(__first, std::distance(__middle, __last));
   return __first;
 }
    }


  template<typename _BidirectionalIterator, typename _Distance,
    typename _Pointer, typename _Compare>
    void
    __merge_adaptive(_BidirectionalIterator __first,
       _BidirectionalIterator __middle,
       _BidirectionalIterator __last,
       _Distance __len1, _Distance __len2,
       _Pointer __buffer, _Distance __buffer_size,
       _Compare __comp)
    {
      if (__len1 <= __len2 && __len1 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__first, __middle, __buffer);
   std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last,
         __first, __comp);
 }
      else if (__len2 <= __buffer_size)
 {
   _Pointer __buffer_end = std::copy(__middle, __last, __buffer);
   std::__move_merge_adaptive_backward(__first, __middle, __buffer,
           __buffer_end, __last, __comp);
 }
      else
 {
   _BidirectionalIterator __first_cut = __first;
   _BidirectionalIterator __second_cut = __middle;
   _Distance __len11 = 0;
   _Distance __len22 = 0;
   if (__len1 > __len2)
     {
       __len11 = __len1 / 2;
       std::advance(__first_cut, __len11);
       __second_cut
  = std::__lower_bound(__middle, __last, *__first_cut,
         __gnu_cxx::__ops::__iter_comp_val(__comp));
       __len22 = std::distance(__middle, __second_cut);
     }
   else
     {
       __len22 = __len2 / 2;
       std::advance(__second_cut, __len22);
       __first_cut
  = std::__upper_bound(__first, __middle, *__second_cut,
         __gnu_cxx::__ops::__val_comp_iter(__comp));
       __len11 = std::distance(__first, __first_cut);
     }

   _BidirectionalIterator __new_middle
     = std::__rotate_adaptive(__first_cut, __middle, __second_cut,
         __len1 - __len11, __len22, __buffer,
         __buffer_size);
   std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
    __len22, __buffer, __buffer_size, __comp);
   std::__merge_adaptive(__new_middle, __second_cut, __last,
    __len1 - __len11,
    __len2 - __len22, __buffer,
    __buffer_size, __comp);
 }
    }


  template<typename _BidirectionalIterator, typename _Distance,
    typename _Compare>
    void
    __merge_without_buffer(_BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
      _Distance __len1, _Distance __len2,
      _Compare __comp)
    {
      if (__len1 == 0 || __len2 == 0)
 return;

      if (__len1 + __len2 == 2)
 {
   if (__comp(__middle, __first))
     std::iter_swap(__first, __middle);
   return;
 }

      _BidirectionalIterator __first_cut = __first;
      _BidirectionalIterator __second_cut = __middle;
      _Distance __len11 = 0;
      _Distance __len22 = 0;
      if (__len1 > __len2)
 {
   __len11 = __len1 / 2;
   std::advance(__first_cut, __len11);
   __second_cut
     = std::__lower_bound(__middle, __last, *__first_cut,
     __gnu_cxx::__ops::__iter_comp_val(__comp));
   __len22 = std::distance(__middle, __second_cut);
 }
      else
 {
   __len22 = __len2 / 2;
   std::advance(__second_cut, __len22);
   __first_cut
     = std::__upper_bound(__first, __middle, *__second_cut,
     __gnu_cxx::__ops::__val_comp_iter(__comp));
   __len11 = std::distance(__first, __first_cut);
 }

      std::rotate(__first_cut, __middle, __second_cut);
      _BidirectionalIterator __new_middle = __first_cut;
      std::advance(__new_middle, std::distance(__middle, __second_cut));
      std::__merge_without_buffer(__first, __first_cut, __new_middle,
      __len11, __len22, __comp);
      std::__merge_without_buffer(__new_middle, __second_cut, __last,
      __len1 - __len11, __len2 - __len22, __comp);
    }

  template<typename _BidirectionalIterator, typename _Compare>
    void
    __inplace_merge(_BidirectionalIterator __first,
      _BidirectionalIterator __middle,
      _BidirectionalIterator __last,
      _Compare __comp)
    {
      typedef typename iterator_traits<_BidirectionalIterator>::value_type
   _ValueType;
      typedef typename iterator_traits<_BidirectionalIterator>::difference_type
   _DistanceType;

      if (__first == __middle || __middle == __last)
 return;

      const _DistanceType __len1 = std::distance(__first, __middle);
      const _DistanceType __len2 = std::distance(__middle, __last);

      typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;
      _TmpBuf __buf(__first, __last);

      if (__buf.begin() == 0)
 std::__merge_without_buffer
   (__first, __middle, __last, __len1, __len2, __comp);
      else
 std::__merge_adaptive
   (__first, __middle, __last, __len1, __len2, __buf.begin(),
    _DistanceType(__buf.size()), __comp);
    }
# 2572 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    inline void
    inplace_merge(_BidirectionalIterator __first,
    _BidirectionalIterator __middle,
    _BidirectionalIterator __last)
    {

     

     

      ;
      ;
      ;

      std::__inplace_merge(__first, __middle, __last,
      __gnu_cxx::__ops::__iter_less_iter());
    }
# 2613 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    inline void
    inplace_merge(_BidirectionalIterator __first,
    _BidirectionalIterator __middle,
    _BidirectionalIterator __last,
    _Compare __comp)
    {

     

     


      ;
      ;
      ;

      std::__inplace_merge(__first, __middle, __last,
      __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }



  template<typename _InputIterator, typename _OutputIterator,
    typename _Compare>
    _OutputIterator
    __move_merge(_InputIterator __first1, _InputIterator __last1,
   _InputIterator __first2, _InputIterator __last2,
   _OutputIterator __result, _Compare __comp)
    {
      while (__first1 != __last1 && __first2 != __last2)
 {
   if (__comp(__first2, __first1))
     {
       *__result = (*__first2);
       ++__first2;
     }
   else
     {
       *__result = (*__first1);
       ++__first1;
     }
   ++__result;
 }
      return std::copy(__first2, __last2, std::copy(__first1, __last1, __result))

                  ;
    }

  template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
    typename _Distance, typename _Compare>
    void
    __merge_sort_loop(_RandomAccessIterator1 __first,
        _RandomAccessIterator1 __last,
        _RandomAccessIterator2 __result, _Distance __step_size,
        _Compare __comp)
    {
      const _Distance __two_step = 2 * __step_size;

      while (__last - __first >= __two_step)
 {
   __result = std::__move_merge(__first, __first + __step_size,
           __first + __step_size,
           __first + __two_step,
           __result, __comp);
   __first += __two_step;
 }
      __step_size = std::min(_Distance(__last - __first), __step_size);

      std::__move_merge(__first, __first + __step_size,
   __first + __step_size, __last, __result, __comp);
    }

  template<typename _RandomAccessIterator, typename _Distance,
    typename _Compare>
    void
    __chunk_insertion_sort(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
      _Distance __chunk_size, _Compare __comp)
    {
      while (__last - __first >= __chunk_size)
 {
   std::__insertion_sort(__first, __first + __chunk_size, __comp);
   __first += __chunk_size;
 }
      std::__insertion_sort(__first, __last, __comp);
    }

  enum { _S_chunk_size = 7 };

  template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
    void
    __merge_sort_with_buffer(_RandomAccessIterator __first,
        _RandomAccessIterator __last,
        _Pointer __buffer, _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _Distance;

      const _Distance __len = __last - __first;
      const _Pointer __buffer_last = __buffer + __len;

      _Distance __step_size = _S_chunk_size;
      std::__chunk_insertion_sort(__first, __last, __step_size, __comp);

      while (__step_size < __len)
 {
   std::__merge_sort_loop(__first, __last, __buffer,
     __step_size, __comp);
   __step_size *= 2;
   std::__merge_sort_loop(__buffer, __buffer_last, __first,
     __step_size, __comp);
   __step_size *= 2;
 }
    }

  template<typename _RandomAccessIterator, typename _Pointer,
    typename _Distance, typename _Compare>
    void
    __stable_sort_adaptive(_RandomAccessIterator __first,
      _RandomAccessIterator __last,
      _Pointer __buffer, _Distance __buffer_size,
      _Compare __comp)
    {
      const _Distance __len = (__last - __first + 1) / 2;
      const _RandomAccessIterator __middle = __first + __len;
      if (__len > __buffer_size)
 {
   std::__stable_sort_adaptive(__first, __middle, __buffer,
          __buffer_size, __comp);
   std::__stable_sort_adaptive(__middle, __last, __buffer,
          __buffer_size, __comp);
 }
      else
 {
   std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
   std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
 }
      std::__merge_adaptive(__first, __middle, __last,
       _Distance(__middle - __first),
       _Distance(__last - __middle),
       __buffer, __buffer_size,
       __comp);
    }


  template<typename _RandomAccessIterator, typename _Compare>
    void
    __inplace_stable_sort(_RandomAccessIterator __first,
     _RandomAccessIterator __last, _Compare __comp)
    {
      if (__last - __first < 15)
 {
   std::__insertion_sort(__first, __last, __comp);
   return;
 }
      _RandomAccessIterator __middle = __first + (__last - __first) / 2;
      std::__inplace_stable_sort(__first, __middle, __comp);
      std::__inplace_stable_sort(__middle, __last, __comp);
      std::__merge_without_buffer(__first, __middle, __last,
      __middle - __first,
      __last - __middle,
      __comp);
    }
# 2785 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _Compare>
    bool
    __includes(_InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _Compare __comp)
    {
      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(__first2, __first1))
   return false;
 else if (__comp(__first1, __first2))
   ++__first1;
 else
   {
     ++__first1;
     ++__first2;
   }

      return __first2 == __last2;
    }
# 2824 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2>
    inline bool
    includes(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _InputIterator2 __last2)
    {

     
     
     


     


      ;
      ;
      ;
      ;

      return std::__includes(__first1, __last1, __first2, __last2,
        __gnu_cxx::__ops::__iter_less_iter());
    }
# 2868 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _Compare>
    inline bool
    includes(_InputIterator1 __first1, _InputIterator1 __last1,
      _InputIterator2 __first2, _InputIterator2 __last2,
      _Compare __comp)
    {

     
     
     


     


      ;
      ;
      ;
      ;

      return std::__includes(__first1, __last1, __first2, __last2,
        __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }
# 2903 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    bool
    __next_permutation(_BidirectionalIterator __first,
         _BidirectionalIterator __last, _Compare __comp)
    {
      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (__comp(__i, __ii))
     {
       _BidirectionalIterator __j = __last;
       while (!__comp(__i, --__j))
  {}
       std::iter_swap(__i, __j);
       std::__reverse(__ii, __last,
        std::__iterator_category(__first));
       return true;
     }
   if (__i == __first)
     {
       std::__reverse(__first, __last,
        std::__iterator_category(__first));
       return false;
     }
 }
    }
# 2952 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    inline bool
    next_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last)
    {

     

     

      ;
      ;

      return std::__next_permutation
 (__first, __last, __gnu_cxx::__ops::__iter_less_iter());
    }
# 2984 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    inline bool
    next_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last, _Compare __comp)
    {

     

     


      ;
      ;

      return std::__next_permutation
 (__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _BidirectionalIterator, typename _Compare>
    bool
    __prev_permutation(_BidirectionalIterator __first,
         _BidirectionalIterator __last, _Compare __comp)
    {
      if (__first == __last)
 return false;
      _BidirectionalIterator __i = __first;
      ++__i;
      if (__i == __last)
 return false;
      __i = __last;
      --__i;

      for(;;)
 {
   _BidirectionalIterator __ii = __i;
   --__i;
   if (__comp(__ii, __i))
     {
       _BidirectionalIterator __j = __last;
       while (!__comp(--__j, __i))
  {}
       std::iter_swap(__i, __j);
       std::__reverse(__ii, __last,
        std::__iterator_category(__first));
       return true;
     }
   if (__i == __first)
     {
       std::__reverse(__first, __last,
        std::__iterator_category(__first));
       return false;
     }
 }
    }
# 3052 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator>
    inline bool
    prev_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last)
    {

     

     

      ;
      ;

      return std::__prev_permutation(__first, __last,
         __gnu_cxx::__ops::__iter_less_iter());
    }
# 3084 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _BidirectionalIterator, typename _Compare>
    inline bool
    prev_permutation(_BidirectionalIterator __first,
       _BidirectionalIterator __last, _Compare __comp)
    {

     

     


      ;
      ;

      return std::__prev_permutation(__first, __last,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }




  template<typename _InputIterator, typename _OutputIterator,
    typename _Predicate, typename _Tp>
    _OutputIterator
    __replace_copy_if(_InputIterator __first, _InputIterator __last,
        _OutputIterator __result,
        _Predicate __pred, const _Tp& __new_value)
    {
      for (; __first != __last; ++__first, (void)++__result)
 if (__pred(__first))
   *__result = __new_value;
 else
   *__result = *__first;
      return __result;
    }
# 3134 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator, typename _Tp>
    inline _OutputIterator
    replace_copy(_InputIterator __first, _InputIterator __last,
   _OutputIterator __result,
   const _Tp& __old_value, const _Tp& __new_value)
    {

     
     

     

      ;

      return std::__replace_copy_if(__first, __last, __result,
   __gnu_cxx::__ops::__iter_equals_val(__old_value),
           __new_value);
    }
# 3168 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _Predicate, typename _Tp>
    inline _OutputIterator
    replace_copy_if(_InputIterator __first, _InputIterator __last,
      _OutputIterator __result,
      _Predicate __pred, const _Tp& __new_value)
    {

     
     

     

      ;

      return std::__replace_copy_if(__first, __last, __result,
    __gnu_cxx::__ops::__pred_iter(__pred),
           __new_value);
    }

  template<typename _InputIterator, typename _Predicate>
    typename iterator_traits<_InputIterator>::difference_type
    __count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
    {
      typename iterator_traits<_InputIterator>::difference_type __n = 0;
      for (; __first != __last; ++__first)
 if (__pred(__first))
   ++__n;
      return __n;
    }
# 3860 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3



# 3876 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Function>
    _Function
    for_each(_InputIterator __first, _InputIterator __last, _Function __f)
    {

     
      ;
      for (; __first != __last; ++__first)
 __f(*__first);
      return __f;
    }
# 3897 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Tp>
    inline _InputIterator
    find(_InputIterator __first, _InputIterator __last,
  const _Tp& __val)
    {

     
     

      ;
      return std::__find_if(__first, __last,
       __gnu_cxx::__ops::__iter_equals_val(__val));
    }
# 3921 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Predicate>
    inline _InputIterator
    find_if(_InputIterator __first, _InputIterator __last,
     _Predicate __pred)
    {

     
     

      ;

      return std::__find_if(__first, __last,
       __gnu_cxx::__ops::__pred_iter(__pred));
    }
# 3952 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator>
    _InputIterator
    find_first_of(_InputIterator __first1, _InputIterator __last1,
    _ForwardIterator __first2, _ForwardIterator __last2)
    {

     
     
     


      ;
      ;

      for (; __first1 != __last1; ++__first1)
 for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
   if (*__first1 == *__iter)
     return __first1;
      return __last1;
    }
# 3992 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _ForwardIterator,
    typename _BinaryPredicate>
    _InputIterator
    find_first_of(_InputIterator __first1, _InputIterator __last1,
    _ForwardIterator __first2, _ForwardIterator __last2,
    _BinaryPredicate __comp)
    {

     
     
     


      ;
      ;

      for (; __first1 != __last1; ++__first1)
 for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
   if (__comp(*__first1, *__iter))
     return __first1;
      return __last1;
    }
# 4024 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
    inline _ForwardIterator
    adjacent_find(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;

      return std::__adjacent_find(__first, __last,
      __gnu_cxx::__ops::__iter_equal_to_iter());
    }
# 4049 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _BinaryPredicate>
    inline _ForwardIterator
    adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
    _BinaryPredicate __binary_pred)
    {

     
     


      ;

      return std::__adjacent_find(__first, __last,
   __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
    }
# 4074 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Tp>
    inline typename iterator_traits<_InputIterator>::difference_type
    count(_InputIterator __first, _InputIterator __last, const _Tp& __value)
    {

     
     

      ;

      return std::__count_if(__first, __last,
        __gnu_cxx::__ops::__iter_equals_val(__value));
    }
# 4097 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _Predicate>
    inline typename iterator_traits<_InputIterator>::difference_type
    count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
    {

     
     

      ;

      return std::__count_if(__first, __last,
        __gnu_cxx::__ops::__pred_iter(__pred));
    }
# 4137 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2>
    inline _ForwardIterator1
    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
    _ForwardIterator2 __first2, _ForwardIterator2 __last2)
    {

     
     
     


      ;
      ;

      return std::__search(__first1, __last1, __first2, __last2,
      __gnu_cxx::__ops::__iter_equal_to_iter());
    }
# 4176 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator1, typename _ForwardIterator2,
    typename _BinaryPredicate>
    inline _ForwardIterator1
    search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
    _ForwardIterator2 __first2, _ForwardIterator2 __last2,
    _BinaryPredicate __predicate)
    {

     
     
     


      ;
      ;

      return std::__search(__first1, __last1, __first2, __last2,
      __gnu_cxx::__ops::__iter_comp_iter(__predicate));
    }
# 4211 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Integer, typename _Tp>
    inline _ForwardIterator
    search_n(_ForwardIterator __first, _ForwardIterator __last,
      _Integer __count, const _Tp& __val)
    {

     
     

      ;

      return std::__search_n(__first, __last, __count,
        __gnu_cxx::__ops::__iter_equals_val(__val));
    }
# 4244 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Integer, typename _Tp,
    typename _BinaryPredicate>
    inline _ForwardIterator
    search_n(_ForwardIterator __first, _ForwardIterator __last,
      _Integer __count, const _Tp& __val,
      _BinaryPredicate __binary_pred)
    {

     
     

      ;

      return std::__search_n(__first, __last, __count,
  __gnu_cxx::__ops::__iter_comp_val(__binary_pred, __val));
    }
# 4292 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _UnaryOperation>
    _OutputIterator
    transform(_InputIterator __first, _InputIterator __last,
       _OutputIterator __result, _UnaryOperation __unary_op)
    {

     
     


      ;

      for (; __first != __last; ++__first, (void)++__result)
 *__result = __unary_op(*__first);
      return __result;
    }
# 4329 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _BinaryOperation>
    _OutputIterator
    transform(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _OutputIterator __result,
       _BinaryOperation __binary_op)
    {

     
     
     


      ;

      for (; __first1 != __last1; ++__first1, (void)++__first2, ++__result)
 *__result = __binary_op(*__first1, *__first2);
      return __result;
    }
# 4362 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Tp>
    void
    replace(_ForwardIterator __first, _ForwardIterator __last,
     const _Tp& __old_value, const _Tp& __new_value)
    {

     

     

     

      ;

      for (; __first != __last; ++__first)
 if (*__first == __old_value)
   *__first = __new_value;
    }
# 4394 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate, typename _Tp>
    void
    replace_if(_ForwardIterator __first, _ForwardIterator __last,
        _Predicate __pred, const _Tp& __new_value)
    {

     

     

     

      ;

      for (; __first != __last; ++__first)
 if (__pred(*__first))
   *__first = __new_value;
    }
# 4426 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Generator>
    void
    generate(_ForwardIterator __first, _ForwardIterator __last,
      _Generator __gen)
    {

     
     

      ;

      for (; __first != __last; ++__first)
 *__first = __gen();
    }
# 4457 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _OutputIterator, typename _Size, typename _Generator>
    _OutputIterator
    generate_n(_OutputIterator __first, _Size __n, _Generator __gen)
    {

     



      for (__decltype(__n + 0) __niter = __n;
    __niter > 0; --__niter, ++__first)
 *__first = __gen();
      return __first;
    }
# 4493 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator>
    inline _OutputIterator
    unique_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result)
    {

     
     

     

      ;

      if (__first == __last)
 return __result;
      return std::__unique_copy(__first, __last, __result,
    __gnu_cxx::__ops::__iter_equal_to_iter(),
    std::__iterator_category(__first),
    std::__iterator_category(__result));
    }
# 4533 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator, typename _OutputIterator,
    typename _BinaryPredicate>
    inline _OutputIterator
    unique_copy(_InputIterator __first, _InputIterator __last,
  _OutputIterator __result,
  _BinaryPredicate __binary_pred)
    {

     
     

      ;

      if (__first == __last)
 return __result;
      return std::__unique_copy(__first, __last, __result,
   __gnu_cxx::__ops::__iter_comp_iter(__binary_pred),
    std::__iterator_category(__first),
    std::__iterator_category(__result));
    }
# 4566 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

      ;

      if (__first != __last)
 for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
   {

     _RandomAccessIterator __j = __first
     + std::rand() % ((__i - __first) + 1);
     if (__i != __j)
       std::iter_swap(__i, __j);
   }
    }
# 4601 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _RandomNumberGenerator>
    void
    random_shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,



     _RandomNumberGenerator& __rand)

    {

     

      ;

      if (__first == __last)
 return;
      for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
 {
   _RandomAccessIterator __j = __first + __rand((__i - __first) + 1);
   if (__i != __j)
     std::iter_swap(__i, __j);
 }
    }
# 4641 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Predicate>
    inline _ForwardIterator
    partition(_ForwardIterator __first, _ForwardIterator __last,
       _Predicate __pred)
    {

     

     

      ;

      return std::__partition(__first, __last, __pred,
         std::__iterator_category(__first));
    }
# 4674 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    partial_sort(_RandomAccessIterator __first,
   _RandomAccessIterator __middle,
   _RandomAccessIterator __last)
    {

     

     

      ;
      ;
      ;

      std::__partial_sort(__first, __middle, __last,
     __gnu_cxx::__ops::__iter_less_iter());
    }
# 4712 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    partial_sort(_RandomAccessIterator __first,
   _RandomAccessIterator __middle,
   _RandomAccessIterator __last,
   _Compare __comp)
    {

     

     


      ;
      ;
      ;

      std::__partial_sort(__first, __middle, __last,
     __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }
# 4748 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,
  _RandomAccessIterator __last)
    {

     

     

      ;
      ;
      ;

      if (__first == __last || __nth == __last)
 return;

      std::__introselect(__first, __nth, __last,
    std::__lg(__last - __first) * 2,
    __gnu_cxx::__ops::__iter_less_iter());
    }
# 4787 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    nth_element(_RandomAccessIterator __first, _RandomAccessIterator __nth,
  _RandomAccessIterator __last, _Compare __comp)
    {

     

     


      ;
      ;
      ;

      if (__first == __last || __nth == __last)
 return;

      std::__introselect(__first, __nth, __last,
    std::__lg(__last - __first) * 2,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }
# 4824 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    sort(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

     

      ;
      ;

      std::__sort(__first, __last, __gnu_cxx::__ops::__iter_less_iter());
    }
# 4854 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare __comp)
    {

     

     


      ;
      ;

      std::__sort(__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    _OutputIterator
    __merge(_InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result, _Compare __comp)
    {
      while (__first1 != __last1 && __first2 != __last2)
 {
   if (__comp(__first2, __first1))
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
     }
   ++__result;
 }
      return std::copy(__first2, __last2,
         std::copy(__first1, __last1, __result));
    }
# 4915 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    inline _OutputIterator
    merge(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2, _InputIterator2 __last2,
   _OutputIterator __result)
    {

     
     
     

     

     


      ;
      ;
      ;
      ;

      return std::__merge(__first1, __last1,
         __first2, __last2, __result,
         __gnu_cxx::__ops::__iter_less_iter());
    }
# 4965 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    inline _OutputIterator
    merge(_InputIterator1 __first1, _InputIterator1 __last1,
   _InputIterator2 __first2, _InputIterator2 __last2,
   _OutputIterator __result, _Compare __comp)
    {

     
     
     

     

     


      ;
      ;
      ;
      ;

      return std::__merge(__first1, __last1,
    __first2, __last2, __result,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    __stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
    _Compare __comp)
    {
      typedef typename iterator_traits<_RandomAccessIterator>::value_type
 _ValueType;
      typedef typename iterator_traits<_RandomAccessIterator>::difference_type
 _DistanceType;

      typedef _Temporary_buffer<_RandomAccessIterator, _ValueType> _TmpBuf;
      _TmpBuf __buf(__first, __last);

      if (__buf.begin() == 0)
 std::__inplace_stable_sort(__first, __last, __comp);
      else
 std::__stable_sort_adaptive(__first, __last, __buf.begin(),
        _DistanceType(__buf.size()), __comp);
    }
# 5029 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator>
    inline void
    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last)
    {

     

     

      ;
      ;

      std::__stable_sort(__first, __last,
        __gnu_cxx::__ops::__iter_less_iter());
    }
# 5063 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _RandomAccessIterator, typename _Compare>
    inline void
    stable_sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
  _Compare __comp)
    {

     

     


      ;
      ;

      std::__stable_sort(__first, __last,
        __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator,
    typename _Compare>
    _OutputIterator
    __set_union(_InputIterator1 __first1, _InputIterator1 __last1,
  _InputIterator2 __first2, _InputIterator2 __last2,
  _OutputIterator __result, _Compare __comp)
    {
      while (__first1 != __last1 && __first2 != __last2)
 {
   if (__comp(__first1, __first2))
     {
       *__result = *__first1;
       ++__first1;
     }
   else if (__comp(__first2, __first1))
     {
       *__result = *__first2;
       ++__first2;
     }
   else
     {
       *__result = *__first1;
       ++__first1;
       ++__first2;
     }
   ++__result;
 }
      return std::copy(__first2, __last2,
         std::copy(__first1, __last1, __result));
    }
# 5131 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    inline _OutputIterator
    set_union(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result)
    {

     
     
     

     

     


     


      ;
      ;
      ;
      ;

      return std::__set_union(__first1, __last1,
    __first2, __last2, __result,
    __gnu_cxx::__ops::__iter_less_iter());
    }
# 5180 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    inline _OutputIterator
    set_union(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp)
    {

     
     
     

     

     


     


      ;
      ;
      ;
      ;

      return std::__set_union(__first1, __last1,
    __first2, __last2, __result,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator,
    typename _Compare>
    _OutputIterator
    __set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,
         _InputIterator2 __first2, _InputIterator2 __last2,
         _OutputIterator __result, _Compare __comp)
    {
      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(__first1, __first2))
   ++__first1;
 else if (__comp(__first2, __first1))
   ++__first2;
 else
   {
     *__result = *__first1;
     ++__first1;
     ++__first2;
     ++__result;
   }
      return __result;
    }
# 5250 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    inline _OutputIterator
    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result)
    {

     
     
     

     


     


      ;
      ;
      ;
      ;

      return std::__set_intersection(__first1, __last1,
         __first2, __last2, __result,
         __gnu_cxx::__ops::__iter_less_iter());
    }
# 5298 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    inline _OutputIterator
    set_intersection(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp)
    {

     
     
     

     


     


      ;
      ;
      ;
      ;

      return std::__set_intersection(__first1, __last1,
    __first2, __last2, __result,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator,
    typename _Compare>
    _OutputIterator
    __set_difference(_InputIterator1 __first1, _InputIterator1 __last1,
       _InputIterator2 __first2, _InputIterator2 __last2,
       _OutputIterator __result, _Compare __comp)
    {
      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(__first1, __first2))
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (__comp(__first2, __first1))
   ++__first2;
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first1, __last1, __result);
    }
# 5370 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    inline _OutputIterator
    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result)
    {

     
     
     

     


     


      ;
      ;
      ;
      ;

      return std::__set_difference(__first1, __last1,
       __first2, __last2, __result,
       __gnu_cxx::__ops::__iter_less_iter());
    }
# 5420 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    inline _OutputIterator
    set_difference(_InputIterator1 __first1, _InputIterator1 __last1,
     _InputIterator2 __first2, _InputIterator2 __last2,
     _OutputIterator __result, _Compare __comp)
    {

     
     
     

     


     


      ;
      ;
      ;
      ;

      return std::__set_difference(__first1, __last1,
       __first2, __last2, __result,
       __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator,
    typename _Compare>
    _OutputIterator
    __set_symmetric_difference(_InputIterator1 __first1,
          _InputIterator1 __last1,
          _InputIterator2 __first2,
          _InputIterator2 __last2,
          _OutputIterator __result,
          _Compare __comp)
    {
      while (__first1 != __last1 && __first2 != __last2)
 if (__comp(__first1, __first2))
   {
     *__result = *__first1;
     ++__first1;
     ++__result;
   }
 else if (__comp(__first2, __first1))
   {
     *__result = *__first2;
     ++__first2;
     ++__result;
   }
 else
   {
     ++__first1;
     ++__first2;
   }
      return std::copy(__first2, __last2,
         std::copy(__first1, __last1, __result));
    }
# 5498 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator>
    inline _OutputIterator
    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _OutputIterator __result)
    {

     
     
     

     

     


     


      ;
      ;
      ;
      ;

      return std::__set_symmetric_difference(__first1, __last1,
     __first2, __last2, __result,
     __gnu_cxx::__ops::__iter_less_iter());
    }
# 5548 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _InputIterator1, typename _InputIterator2,
    typename _OutputIterator, typename _Compare>
    inline _OutputIterator
    set_symmetric_difference(_InputIterator1 __first1, _InputIterator1 __last1,
        _InputIterator2 __first2, _InputIterator2 __last2,
        _OutputIterator __result,
        _Compare __comp)
    {

     
     
     

     

     


     


      ;
      ;
      ;
      ;

      return std::__set_symmetric_difference(__first1, __last1,
    __first2, __last2, __result,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _ForwardIterator, typename _Compare>
   
    _ForwardIterator
    __min_element(_ForwardIterator __first, _ForwardIterator __last,
    _Compare __comp)
    {
      if (__first == __last)
 return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (__comp(__first, __result))
   __result = __first;
      return __result;
    }
# 5601 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
   
    _ForwardIterator
    inline min_element(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;
      ;

      return std::__min_element(__first, __last,
    __gnu_cxx::__ops::__iter_less_iter());
    }
# 5626 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Compare>
   
    inline _ForwardIterator
    min_element(_ForwardIterator __first, _ForwardIterator __last,
  _Compare __comp)
    {

     
     


      ;
      ;

      return std::__min_element(__first, __last,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }

  template<typename _ForwardIterator, typename _Compare>
   
    _ForwardIterator
    __max_element(_ForwardIterator __first, _ForwardIterator __last,
    _Compare __comp)
    {
      if (__first == __last) return __first;
      _ForwardIterator __result = __first;
      while (++__first != __last)
 if (__comp(__result, __first))
   __result = __first;
      return __result;
    }
# 5665 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator>
   
    inline _ForwardIterator
    max_element(_ForwardIterator __first, _ForwardIterator __last)
    {

     
     

      ;
      ;

      return std::__max_element(__first, __last,
    __gnu_cxx::__ops::__iter_less_iter());
    }
# 5690 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3
  template<typename _ForwardIterator, typename _Compare>
   
    inline _ForwardIterator
    max_element(_ForwardIterator __first, _ForwardIterator __last,
  _Compare __comp)
    {

     
     


      ;
      ;

      return std::__max_element(__first, __last,
    __gnu_cxx::__ops::__iter_comp_iter(__comp));
    }
# 5833 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/bits/stl_algo.h" 3

}
# 63 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/algorithm" 2 3
# 29 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/climits" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/climits" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/climits" 3


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include-fixed/limits.h" 1 3 4
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include-fixed/limits.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include-fixed/syslimits.h" 1 3 4






# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include-fixed/limits.h" 1 3 4
# 194 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include-fixed/limits.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/limits.h" 1 3 4
# 26 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/limits.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/libc-header-start.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/limits.h" 2 3 4
# 183 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/limits.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/posix1_lim.h" 1 3 4
# 160 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/posix1_lim.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/local_lim.h" 1 3 4
# 38 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/local_lim.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/linux/limits.h" 1 3 4
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/local_lim.h" 2 3 4
# 161 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/posix1_lim.h" 2 3 4
# 184 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/limits.h" 2 3 4



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/posix2_lim.h" 1 3 4
# 188 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/limits.h" 2 3 4



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/xopen_lim.h" 1 3 4
# 64 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/xopen_lim.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/uio_lim.h" 1 3 4
# 65 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/xopen_lim.h" 2 3 4
# 192 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/limits.h" 2 3 4
# 195 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include-fixed/limits.h" 2 3 4
# 8 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include-fixed/syslimits.h" 2 3 4
# 35 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include-fixed/limits.h" 2 3 4
# 43 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/climits" 2 3
# 30 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cmath" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cmath" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cmath" 3





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/libc-header-start.h" 1 3 4
# 28 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4

extern "C" {





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-vector.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-vector.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/libm-simd-decl-stubs.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-vector.h" 2 3 4
# 36 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/floatn.h" 1 3 4
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/huge_val.h" 1 3 4
# 43 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4






# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/huge_valf.h" 1 3 4
# 50 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/huge_vall.h" 1 3 4
# 51 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/inf.h" 1 3 4
# 54 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/nan.h" 1 3 4
# 57 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 72 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/flt-eval-method.h" 1 3 4
# 73 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 83 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
typedef float float_t;
typedef double double_t;
# 124 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/fp-logb.h" 1 3 4
# 125 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 167 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/fp-fast.h" 1 3 4
# 168 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4



enum
  {
    FP_INT_UPWARD =

      0,
    FP_INT_DOWNWARD =

      1,
    FP_INT_TOWARDZERO =

      2,
    FP_INT_TONEARESTFROMZERO =

      3,
    FP_INT_TONEAREST =

      4,
  };
# 223 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls-helper-functions.h" 1 3 4
# 21 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassify (double __value) throw ()
     __attribute__ ((__const__));


extern int __signbit (double __value) throw ()
     __attribute__ ((__const__));



extern int __isinf (double __value) throw () __attribute__ ((__const__));


extern int __finite (double __value) throw () __attribute__ ((__const__));


extern int __isnan (double __value) throw () __attribute__ ((__const__));


extern int __iseqsig (double __x, double __y) throw ();


extern int __issignaling (double __value) throw ()
     __attribute__ ((__const__));
# 224 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 1 3 4
# 53 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern double acos (double __x) throw (); extern double __acos (double __x) throw ();

extern double asin (double __x) throw (); extern double __asin (double __x) throw ();

extern double atan (double __x) throw (); extern double __atan (double __x) throw ();

extern double atan2 (double __y, double __x) throw (); extern double __atan2 (double __y, double __x) throw ();


 extern double cos (double __x) throw (); extern double __cos (double __x) throw ();

 extern double sin (double __x) throw (); extern double __sin (double __x) throw ();

extern double tan (double __x) throw (); extern double __tan (double __x) throw ();




extern double cosh (double __x) throw (); extern double __cosh (double __x) throw ();

extern double sinh (double __x) throw (); extern double __sinh (double __x) throw ();

extern double tanh (double __x) throw (); extern double __tanh (double __x) throw ();



 extern void sincos (double __x, double *__sinx, double *__cosx) throw (); extern void __sincos (double __x, double *__sinx, double *__cosx) throw ()
                                                        ;




extern double acosh (double __x) throw (); extern double __acosh (double __x) throw ();

extern double asinh (double __x) throw (); extern double __asinh (double __x) throw ();

extern double atanh (double __x) throw (); extern double __atanh (double __x) throw ();





 extern double exp (double __x) throw (); extern double __exp (double __x) throw ();


extern double frexp (double __x, int *__exponent) throw (); extern double __frexp (double __x, int *__exponent) throw ();


extern double ldexp (double __x, int __exponent) throw (); extern double __ldexp (double __x, int __exponent) throw ();


 extern double log (double __x) throw (); extern double __log (double __x) throw ();


extern double log10 (double __x) throw (); extern double __log10 (double __x) throw ();


extern double modf (double __x, double *__iptr) throw (); extern double __modf (double __x, double *__iptr) throw () __attribute__ ((__nonnull__ (2)));



extern double exp10 (double __x) throw (); extern double __exp10 (double __x) throw ();




extern double pow10 (double __x) throw (); extern double __pow10 (double __x) throw ();





extern double expm1 (double __x) throw (); extern double __expm1 (double __x) throw ();


extern double log1p (double __x) throw (); extern double __log1p (double __x) throw ();


extern double logb (double __x) throw (); extern double __logb (double __x) throw ();




extern double exp2 (double __x) throw (); extern double __exp2 (double __x) throw ();


extern double log2 (double __x) throw (); extern double __log2 (double __x) throw ();






 extern double pow (double __x, double __y) throw (); extern double __pow (double __x, double __y) throw ();


extern double sqrt (double __x) throw (); extern double __sqrt (double __x) throw ();



extern double hypot (double __x, double __y) throw (); extern double __hypot (double __x, double __y) throw ();




extern double cbrt (double __x) throw (); extern double __cbrt (double __x) throw ();






extern double ceil (double __x) throw () __attribute__ ((__const__)); extern double __ceil (double __x) throw () __attribute__ ((__const__));


extern double fabs (double __x) throw () __attribute__ ((__const__)); extern double __fabs (double __x) throw () __attribute__ ((__const__));


extern double floor (double __x) throw () __attribute__ ((__const__)); extern double __floor (double __x) throw () __attribute__ ((__const__));


extern double fmod (double __x, double __y) throw (); extern double __fmod (double __x, double __y) throw ();
# 183 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern int isinf (double __value) throw () __attribute__ ((__const__));




extern int finite (double __value) throw () __attribute__ ((__const__));


extern double drem (double __x, double __y) throw (); extern double __drem (double __x, double __y) throw ();



extern double significand (double __x) throw (); extern double __significand (double __x) throw ();






extern double copysign (double __x, double __y) throw () __attribute__ ((__const__)); extern double __copysign (double __x, double __y) throw () __attribute__ ((__const__));




extern double nan (const char *__tagb) throw () __attribute__ ((__const__)); extern double __nan (const char *__tagb) throw () __attribute__ ((__const__));
# 217 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern int isnan (double __value) throw () __attribute__ ((__const__));





extern double j0 (double) throw (); extern double __j0 (double) throw ();
extern double j1 (double) throw (); extern double __j1 (double) throw ();
extern double jn (int, double) throw (); extern double __jn (int, double) throw ();
extern double y0 (double) throw (); extern double __y0 (double) throw ();
extern double y1 (double) throw (); extern double __y1 (double) throw ();
extern double yn (int, double) throw (); extern double __yn (int, double) throw ();





extern double erf (double) throw (); extern double __erf (double) throw ();
extern double erfc (double) throw (); extern double __erfc (double) throw ();
extern double lgamma (double) throw (); extern double __lgamma (double) throw ();




extern double tgamma (double) throw (); extern double __tgamma (double) throw ();





extern double gamma (double) throw (); extern double __gamma (double) throw ();







extern double lgamma_r (double, int *__signgamp) throw (); extern double __lgamma_r (double, int *__signgamp) throw ();






extern double rint (double __x) throw (); extern double __rint (double __x) throw ();


extern double nextafter (double __x, double __y) throw () __attribute__ ((__const__)); extern double __nextafter (double __x, double __y) throw () __attribute__ ((__const__));

extern double nexttoward (double __x, long double __y) throw () __attribute__ ((__const__)); extern double __nexttoward (double __x, long double __y) throw () __attribute__ ((__const__));




extern double nextdown (double __x) throw (); extern double __nextdown (double __x) throw ();

extern double nextup (double __x) throw (); extern double __nextup (double __x) throw ();



extern double remainder (double __x, double __y) throw (); extern double __remainder (double __x, double __y) throw ();



extern double scalbn (double __x, int __n) throw (); extern double __scalbn (double __x, int __n) throw ();



extern int ilogb (double __x) throw (); extern int __ilogb (double __x) throw ();




extern long int llogb (double __x) throw (); extern long int __llogb (double __x) throw ();




extern double scalbln (double __x, long int __n) throw (); extern double __scalbln (double __x, long int __n) throw ();



extern double nearbyint (double __x) throw (); extern double __nearbyint (double __x) throw ();



extern double round (double __x) throw () __attribute__ ((__const__)); extern double __round (double __x) throw () __attribute__ ((__const__));



extern double trunc (double __x) throw () __attribute__ ((__const__)); extern double __trunc (double __x) throw () __attribute__ ((__const__));




extern double remquo (double __x, double __y, int *__quo) throw (); extern double __remquo (double __x, double __y, int *__quo) throw ();






extern long int lrint (double __x) throw (); extern long int __lrint (double __x) throw ();
__extension__
extern long long int llrint (double __x) throw (); extern long long int __llrint (double __x) throw ();



extern long int lround (double __x) throw (); extern long int __lround (double __x) throw ();
__extension__
extern long long int llround (double __x) throw (); extern long long int __llround (double __x) throw ();



extern double fdim (double __x, double __y) throw (); extern double __fdim (double __x, double __y) throw ();


extern double fmax (double __x, double __y) throw () __attribute__ ((__const__)); extern double __fmax (double __x, double __y) throw () __attribute__ ((__const__));


extern double fmin (double __x, double __y) throw () __attribute__ ((__const__)); extern double __fmin (double __x, double __y) throw () __attribute__ ((__const__));


extern double fma (double __x, double __y, double __z) throw (); extern double __fma (double __x, double __y, double __z) throw ();




extern double roundeven (double __x) throw () __attribute__ ((__const__)); extern double __roundeven (double __x) throw () __attribute__ ((__const__));



extern __intmax_t fromfp (double __x, int __round, unsigned int __width) throw (); extern __intmax_t __fromfp (double __x, int __round, unsigned int __width) throw ()
                            ;



extern __uintmax_t ufromfp (double __x, int __round, unsigned int __width) throw (); extern __uintmax_t __ufromfp (double __x, int __round, unsigned int __width) throw ()
                              ;




extern __intmax_t fromfpx (double __x, int __round, unsigned int __width) throw (); extern __intmax_t __fromfpx (double __x, int __round, unsigned int __width) throw ()
                             ;




extern __uintmax_t ufromfpx (double __x, int __round, unsigned int __width) throw (); extern __uintmax_t __ufromfpx (double __x, int __round, unsigned int __width) throw ()
                               ;


extern double fmaxmag (double __x, double __y) throw () __attribute__ ((__const__)); extern double __fmaxmag (double __x, double __y) throw () __attribute__ ((__const__));


extern double fminmag (double __x, double __y) throw () __attribute__ ((__const__)); extern double __fminmag (double __x, double __y) throw () __attribute__ ((__const__));


extern int totalorder (double __x, double __y) throw ()
     __attribute__ ((__const__));


extern int totalordermag (double __x, double __y) throw ()
     __attribute__ ((__const__));


extern int canonicalize (double *__cx, const double *__x) throw ();


extern double getpayload (const double *__x) throw (); extern double __getpayload (const double *__x) throw ();


extern int setpayload (double *__x, double __payload) throw ();


extern int setpayloadsig (double *__x, double __payload) throw ();







extern double scalb (double __x, double __n) throw (); extern double __scalb (double __x, double __n) throw ();
# 225 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 243 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls-helper-functions.h" 1 3 4
# 21 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassifyf (float __value) throw ()
     __attribute__ ((__const__));


extern int __signbitf (float __value) throw ()
     __attribute__ ((__const__));



extern int __isinff (float __value) throw () __attribute__ ((__const__));


extern int __finitef (float __value) throw () __attribute__ ((__const__));


extern int __isnanf (float __value) throw () __attribute__ ((__const__));


extern int __iseqsigf (float __x, float __y) throw ();


extern int __issignalingf (float __value) throw ()
     __attribute__ ((__const__));
# 244 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 1 3 4
# 53 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern float acosf (float __x) throw (); extern float __acosf (float __x) throw ();

extern float asinf (float __x) throw (); extern float __asinf (float __x) throw ();

extern float atanf (float __x) throw (); extern float __atanf (float __x) throw ();

extern float atan2f (float __y, float __x) throw (); extern float __atan2f (float __y, float __x) throw ();


 extern float cosf (float __x) throw (); extern float __cosf (float __x) throw ();

 extern float sinf (float __x) throw (); extern float __sinf (float __x) throw ();

extern float tanf (float __x) throw (); extern float __tanf (float __x) throw ();




extern float coshf (float __x) throw (); extern float __coshf (float __x) throw ();

extern float sinhf (float __x) throw (); extern float __sinhf (float __x) throw ();

extern float tanhf (float __x) throw (); extern float __tanhf (float __x) throw ();



 extern void sincosf (float __x, float *__sinx, float *__cosx) throw (); extern void __sincosf (float __x, float *__sinx, float *__cosx) throw ()
                                                        ;




extern float acoshf (float __x) throw (); extern float __acoshf (float __x) throw ();

extern float asinhf (float __x) throw (); extern float __asinhf (float __x) throw ();

extern float atanhf (float __x) throw (); extern float __atanhf (float __x) throw ();





 extern float expf (float __x) throw (); extern float __expf (float __x) throw ();


extern float frexpf (float __x, int *__exponent) throw (); extern float __frexpf (float __x, int *__exponent) throw ();


extern float ldexpf (float __x, int __exponent) throw (); extern float __ldexpf (float __x, int __exponent) throw ();


 extern float logf (float __x) throw (); extern float __logf (float __x) throw ();


extern float log10f (float __x) throw (); extern float __log10f (float __x) throw ();


extern float modff (float __x, float *__iptr) throw (); extern float __modff (float __x, float *__iptr) throw () __attribute__ ((__nonnull__ (2)));



extern float exp10f (float __x) throw (); extern float __exp10f (float __x) throw ();




extern float pow10f (float __x) throw (); extern float __pow10f (float __x) throw ();





extern float expm1f (float __x) throw (); extern float __expm1f (float __x) throw ();


extern float log1pf (float __x) throw (); extern float __log1pf (float __x) throw ();


extern float logbf (float __x) throw (); extern float __logbf (float __x) throw ();




extern float exp2f (float __x) throw (); extern float __exp2f (float __x) throw ();


extern float log2f (float __x) throw (); extern float __log2f (float __x) throw ();






 extern float powf (float __x, float __y) throw (); extern float __powf (float __x, float __y) throw ();


extern float sqrtf (float __x) throw (); extern float __sqrtf (float __x) throw ();



extern float hypotf (float __x, float __y) throw (); extern float __hypotf (float __x, float __y) throw ();




extern float cbrtf (float __x) throw (); extern float __cbrtf (float __x) throw ();






extern float ceilf (float __x) throw () __attribute__ ((__const__)); extern float __ceilf (float __x) throw () __attribute__ ((__const__));


extern float fabsf (float __x) throw () __attribute__ ((__const__)); extern float __fabsf (float __x) throw () __attribute__ ((__const__));


extern float floorf (float __x) throw () __attribute__ ((__const__)); extern float __floorf (float __x) throw () __attribute__ ((__const__));


extern float fmodf (float __x, float __y) throw (); extern float __fmodf (float __x, float __y) throw ();
# 183 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern int isinff (float __value) throw () __attribute__ ((__const__));




extern int finitef (float __value) throw () __attribute__ ((__const__));


extern float dremf (float __x, float __y) throw (); extern float __dremf (float __x, float __y) throw ();



extern float significandf (float __x) throw (); extern float __significandf (float __x) throw ();






extern float copysignf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __copysignf (float __x, float __y) throw () __attribute__ ((__const__));




extern float nanf (const char *__tagb) throw () __attribute__ ((__const__)); extern float __nanf (const char *__tagb) throw () __attribute__ ((__const__));
# 217 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern int isnanf (float __value) throw () __attribute__ ((__const__));





extern float j0f (float) throw (); extern float __j0f (float) throw ();
extern float j1f (float) throw (); extern float __j1f (float) throw ();
extern float jnf (int, float) throw (); extern float __jnf (int, float) throw ();
extern float y0f (float) throw (); extern float __y0f (float) throw ();
extern float y1f (float) throw (); extern float __y1f (float) throw ();
extern float ynf (int, float) throw (); extern float __ynf (int, float) throw ();





extern float erff (float) throw (); extern float __erff (float) throw ();
extern float erfcf (float) throw (); extern float __erfcf (float) throw ();
extern float lgammaf (float) throw (); extern float __lgammaf (float) throw ();




extern float tgammaf (float) throw (); extern float __tgammaf (float) throw ();





extern float gammaf (float) throw (); extern float __gammaf (float) throw ();







extern float lgammaf_r (float, int *__signgamp) throw (); extern float __lgammaf_r (float, int *__signgamp) throw ();






extern float rintf (float __x) throw (); extern float __rintf (float __x) throw ();


extern float nextafterf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __nextafterf (float __x, float __y) throw () __attribute__ ((__const__));

extern float nexttowardf (float __x, long double __y) throw () __attribute__ ((__const__)); extern float __nexttowardf (float __x, long double __y) throw () __attribute__ ((__const__));




extern float nextdownf (float __x) throw (); extern float __nextdownf (float __x) throw ();

extern float nextupf (float __x) throw (); extern float __nextupf (float __x) throw ();



extern float remainderf (float __x, float __y) throw (); extern float __remainderf (float __x, float __y) throw ();



extern float scalbnf (float __x, int __n) throw (); extern float __scalbnf (float __x, int __n) throw ();



extern int ilogbf (float __x) throw (); extern int __ilogbf (float __x) throw ();




extern long int llogbf (float __x) throw (); extern long int __llogbf (float __x) throw ();




extern float scalblnf (float __x, long int __n) throw (); extern float __scalblnf (float __x, long int __n) throw ();



extern float nearbyintf (float __x) throw (); extern float __nearbyintf (float __x) throw ();



extern float roundf (float __x) throw () __attribute__ ((__const__)); extern float __roundf (float __x) throw () __attribute__ ((__const__));



extern float truncf (float __x) throw () __attribute__ ((__const__)); extern float __truncf (float __x) throw () __attribute__ ((__const__));




extern float remquof (float __x, float __y, int *__quo) throw (); extern float __remquof (float __x, float __y, int *__quo) throw ();






extern long int lrintf (float __x) throw (); extern long int __lrintf (float __x) throw ();
__extension__
extern long long int llrintf (float __x) throw (); extern long long int __llrintf (float __x) throw ();



extern long int lroundf (float __x) throw (); extern long int __lroundf (float __x) throw ();
__extension__
extern long long int llroundf (float __x) throw (); extern long long int __llroundf (float __x) throw ();



extern float fdimf (float __x, float __y) throw (); extern float __fdimf (float __x, float __y) throw ();


extern float fmaxf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __fmaxf (float __x, float __y) throw () __attribute__ ((__const__));


extern float fminf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __fminf (float __x, float __y) throw () __attribute__ ((__const__));


extern float fmaf (float __x, float __y, float __z) throw (); extern float __fmaf (float __x, float __y, float __z) throw ();




extern float roundevenf (float __x) throw () __attribute__ ((__const__)); extern float __roundevenf (float __x) throw () __attribute__ ((__const__));



extern __intmax_t fromfpf (float __x, int __round, unsigned int __width) throw (); extern __intmax_t __fromfpf (float __x, int __round, unsigned int __width) throw ()
                            ;



extern __uintmax_t ufromfpf (float __x, int __round, unsigned int __width) throw (); extern __uintmax_t __ufromfpf (float __x, int __round, unsigned int __width) throw ()
                              ;




extern __intmax_t fromfpxf (float __x, int __round, unsigned int __width) throw (); extern __intmax_t __fromfpxf (float __x, int __round, unsigned int __width) throw ()
                             ;




extern __uintmax_t ufromfpxf (float __x, int __round, unsigned int __width) throw (); extern __uintmax_t __ufromfpxf (float __x, int __round, unsigned int __width) throw ()
                               ;


extern float fmaxmagf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __fmaxmagf (float __x, float __y) throw () __attribute__ ((__const__));


extern float fminmagf (float __x, float __y) throw () __attribute__ ((__const__)); extern float __fminmagf (float __x, float __y) throw () __attribute__ ((__const__));


extern int totalorderf (float __x, float __y) throw ()
     __attribute__ ((__const__));


extern int totalordermagf (float __x, float __y) throw ()
     __attribute__ ((__const__));


extern int canonicalizef (float *__cx, const float *__x) throw ();


extern float getpayloadf (const float *__x) throw (); extern float __getpayloadf (const float *__x) throw ();


extern int setpayloadf (float *__x, float __payload) throw ();


extern int setpayloadsigf (float *__x, float __payload) throw ();







extern float scalbf (float __x, float __n) throw (); extern float __scalbf (float __x, float __n) throw ();
# 245 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 289 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls-helper-functions.h" 1 3 4
# 21 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls-helper-functions.h" 3 4
extern int __fpclassifyl (long double __value) throw ()
     __attribute__ ((__const__));


extern int __signbitl (long double __value) throw ()
     __attribute__ ((__const__));



extern int __isinfl (long double __value) throw () __attribute__ ((__const__));


extern int __finitel (long double __value) throw () __attribute__ ((__const__));


extern int __isnanl (long double __value) throw () __attribute__ ((__const__));


extern int __iseqsigl (long double __x, long double __y) throw ();


extern int __issignalingl (long double __value) throw ()
     __attribute__ ((__const__));
# 290 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 1 3 4
# 53 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern long double acosl (long double __x) throw (); extern long double __acosl (long double __x) throw ();

extern long double asinl (long double __x) throw (); extern long double __asinl (long double __x) throw ();

extern long double atanl (long double __x) throw (); extern long double __atanl (long double __x) throw ();

extern long double atan2l (long double __y, long double __x) throw (); extern long double __atan2l (long double __y, long double __x) throw ();


 extern long double cosl (long double __x) throw (); extern long double __cosl (long double __x) throw ();

 extern long double sinl (long double __x) throw (); extern long double __sinl (long double __x) throw ();

extern long double tanl (long double __x) throw (); extern long double __tanl (long double __x) throw ();




extern long double coshl (long double __x) throw (); extern long double __coshl (long double __x) throw ();

extern long double sinhl (long double __x) throw (); extern long double __sinhl (long double __x) throw ();

extern long double tanhl (long double __x) throw (); extern long double __tanhl (long double __x) throw ();



 extern void sincosl (long double __x, long double *__sinx, long double *__cosx) throw (); extern void __sincosl (long double __x, long double *__sinx, long double *__cosx) throw ()
                                                        ;




extern long double acoshl (long double __x) throw (); extern long double __acoshl (long double __x) throw ();

extern long double asinhl (long double __x) throw (); extern long double __asinhl (long double __x) throw ();

extern long double atanhl (long double __x) throw (); extern long double __atanhl (long double __x) throw ();





 extern long double expl (long double __x) throw (); extern long double __expl (long double __x) throw ();


extern long double frexpl (long double __x, int *__exponent) throw (); extern long double __frexpl (long double __x, int *__exponent) throw ();


extern long double ldexpl (long double __x, int __exponent) throw (); extern long double __ldexpl (long double __x, int __exponent) throw ();


 extern long double logl (long double __x) throw (); extern long double __logl (long double __x) throw ();


extern long double log10l (long double __x) throw (); extern long double __log10l (long double __x) throw ();


extern long double modfl (long double __x, long double *__iptr) throw (); extern long double __modfl (long double __x, long double *__iptr) throw () __attribute__ ((__nonnull__ (2)));



extern long double exp10l (long double __x) throw (); extern long double __exp10l (long double __x) throw ();




extern long double pow10l (long double __x) throw (); extern long double __pow10l (long double __x) throw ();





extern long double expm1l (long double __x) throw (); extern long double __expm1l (long double __x) throw ();


extern long double log1pl (long double __x) throw (); extern long double __log1pl (long double __x) throw ();


extern long double logbl (long double __x) throw (); extern long double __logbl (long double __x) throw ();




extern long double exp2l (long double __x) throw (); extern long double __exp2l (long double __x) throw ();


extern long double log2l (long double __x) throw (); extern long double __log2l (long double __x) throw ();






 extern long double powl (long double __x, long double __y) throw (); extern long double __powl (long double __x, long double __y) throw ();


extern long double sqrtl (long double __x) throw (); extern long double __sqrtl (long double __x) throw ();



extern long double hypotl (long double __x, long double __y) throw (); extern long double __hypotl (long double __x, long double __y) throw ();




extern long double cbrtl (long double __x) throw (); extern long double __cbrtl (long double __x) throw ();






extern long double ceill (long double __x) throw () __attribute__ ((__const__)); extern long double __ceill (long double __x) throw () __attribute__ ((__const__));


extern long double fabsl (long double __x) throw () __attribute__ ((__const__)); extern long double __fabsl (long double __x) throw () __attribute__ ((__const__));


extern long double floorl (long double __x) throw () __attribute__ ((__const__)); extern long double __floorl (long double __x) throw () __attribute__ ((__const__));


extern long double fmodl (long double __x, long double __y) throw (); extern long double __fmodl (long double __x, long double __y) throw ();
# 183 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern int isinfl (long double __value) throw () __attribute__ ((__const__));




extern int finitel (long double __value) throw () __attribute__ ((__const__));


extern long double dreml (long double __x, long double __y) throw (); extern long double __dreml (long double __x, long double __y) throw ();



extern long double significandl (long double __x) throw (); extern long double __significandl (long double __x) throw ();






extern long double copysignl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __copysignl (long double __x, long double __y) throw () __attribute__ ((__const__));




extern long double nanl (const char *__tagb) throw () __attribute__ ((__const__)); extern long double __nanl (const char *__tagb) throw () __attribute__ ((__const__));
# 217 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathcalls.h" 3 4
extern int isnanl (long double __value) throw () __attribute__ ((__const__));





extern long double j0l (long double) throw (); extern long double __j0l (long double) throw ();
extern long double j1l (long double) throw (); extern long double __j1l (long double) throw ();
extern long double jnl (int, long double) throw (); extern long double __jnl (int, long double) throw ();
extern long double y0l (long double) throw (); extern long double __y0l (long double) throw ();
extern long double y1l (long double) throw (); extern long double __y1l (long double) throw ();
extern long double ynl (int, long double) throw (); extern long double __ynl (int, long double) throw ();





extern long double erfl (long double) throw (); extern long double __erfl (long double) throw ();
extern long double erfcl (long double) throw (); extern long double __erfcl (long double) throw ();
extern long double lgammal (long double) throw (); extern long double __lgammal (long double) throw ();




extern long double tgammal (long double) throw (); extern long double __tgammal (long double) throw ();





extern long double gammal (long double) throw (); extern long double __gammal (long double) throw ();







extern long double lgammal_r (long double, int *__signgamp) throw (); extern long double __lgammal_r (long double, int *__signgamp) throw ();






extern long double rintl (long double __x) throw (); extern long double __rintl (long double __x) throw ();


extern long double nextafterl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __nextafterl (long double __x, long double __y) throw () __attribute__ ((__const__));

extern long double nexttowardl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __nexttowardl (long double __x, long double __y) throw () __attribute__ ((__const__));




extern long double nextdownl (long double __x) throw (); extern long double __nextdownl (long double __x) throw ();

extern long double nextupl (long double __x) throw (); extern long double __nextupl (long double __x) throw ();



extern long double remainderl (long double __x, long double __y) throw (); extern long double __remainderl (long double __x, long double __y) throw ();



extern long double scalbnl (long double __x, int __n) throw (); extern long double __scalbnl (long double __x, int __n) throw ();



extern int ilogbl (long double __x) throw (); extern int __ilogbl (long double __x) throw ();




extern long int llogbl (long double __x) throw (); extern long int __llogbl (long double __x) throw ();




extern long double scalblnl (long double __x, long int __n) throw (); extern long double __scalblnl (long double __x, long int __n) throw ();



extern long double nearbyintl (long double __x) throw (); extern long double __nearbyintl (long double __x) throw ();



extern long double roundl (long double __x) throw () __attribute__ ((__const__)); extern long double __roundl (long double __x) throw () __attribute__ ((__const__));



extern long double truncl (long double __x) throw () __attribute__ ((__const__)); extern long double __truncl (long double __x) throw () __attribute__ ((__const__));




extern long double remquol (long double __x, long double __y, int *__quo) throw (); extern long double __remquol (long double __x, long double __y, int *__quo) throw ();






extern long int lrintl (long double __x) throw (); extern long int __lrintl (long double __x) throw ();
__extension__
extern long long int llrintl (long double __x) throw (); extern long long int __llrintl (long double __x) throw ();



extern long int lroundl (long double __x) throw (); extern long int __lroundl (long double __x) throw ();
__extension__
extern long long int llroundl (long double __x) throw (); extern long long int __llroundl (long double __x) throw ();



extern long double fdiml (long double __x, long double __y) throw (); extern long double __fdiml (long double __x, long double __y) throw ();


extern long double fmaxl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __fmaxl (long double __x, long double __y) throw () __attribute__ ((__const__));


extern long double fminl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __fminl (long double __x, long double __y) throw () __attribute__ ((__const__));


extern long double fmal (long double __x, long double __y, long double __z) throw (); extern long double __fmal (long double __x, long double __y, long double __z) throw ();




extern long double roundevenl (long double __x) throw () __attribute__ ((__const__)); extern long double __roundevenl (long double __x) throw () __attribute__ ((__const__));



extern __intmax_t fromfpl (long double __x, int __round, unsigned int __width) throw (); extern __intmax_t __fromfpl (long double __x, int __round, unsigned int __width) throw ()
                            ;



extern __uintmax_t ufromfpl (long double __x, int __round, unsigned int __width) throw (); extern __uintmax_t __ufromfpl (long double __x, int __round, unsigned int __width) throw ()
                              ;




extern __intmax_t fromfpxl (long double __x, int __round, unsigned int __width) throw (); extern __intmax_t __fromfpxl (long double __x, int __round, unsigned int __width) throw ()
                             ;




extern __uintmax_t ufromfpxl (long double __x, int __round, unsigned int __width) throw (); extern __uintmax_t __ufromfpxl (long double __x, int __round, unsigned int __width) throw ()
                               ;


extern long double fmaxmagl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __fmaxmagl (long double __x, long double __y) throw () __attribute__ ((__const__));


extern long double fminmagl (long double __x, long double __y) throw () __attribute__ ((__const__)); extern long double __fminmagl (long double __x, long double __y) throw () __attribute__ ((__const__));


extern int totalorderl (long double __x, long double __y) throw ()
     __attribute__ ((__const__));


extern int totalordermagl (long double __x, long double __y) throw ()
     __attribute__ ((__const__));


extern int canonicalizel (long double *__cx, const long double *__x) throw ();


extern long double getpayloadl (const long double *__x) throw (); extern long double __getpayloadl (const long double *__x) throw ();


extern int setpayloadl (long double *__x, long double __payload) throw ();


extern int setpayloadsigl (long double *__x, long double __payload) throw ();







extern long double scalbl (long double __x, long double __n) throw (); extern long double __scalbl (long double __x, long double __n) throw ();
# 291 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 330 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
extern int signgam;
# 380 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
enum
  {
    FP_NAN =

      0,
    FP_INFINITE =

      1,
    FP_ZERO =

      2,
    FP_SUBNORMAL =

      3,
    FP_NORMAL =

      4
  };
# 470 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/iscanonical.h" 1 3 4
# 471 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 486 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
extern "C++" {
template <class __T> inline bool
iszero (__T __val)
{



  return __val == 0;

}
}





typedef enum
{
  _IEEE_ = -1,
  _SVID_,
  _XOPEN_,
  _POSIX_,
  _ISOC_
} _LIB_VERSION_TYPE;




extern _LIB_VERSION_TYPE _LIB_VERSION;
# 525 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
struct __exception



  {
    int type;
    char *name;
    double arg1;
    double arg2;
    double retval;
  };


extern int matherr (struct __exception *__exc) throw ();
# 642 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/mathinline.h" 1 3 4
# 643 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 655 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 1 3 4
# 57 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 3 4
extern double acos (double) throw () __asm__ ("" "__acos_finite");



extern double acosh (double) throw () __asm__ ("" "__acosh_finite");



extern double asin (double) throw () __asm__ ("" "__asin_finite");


extern double atan2 (double, double) throw () __asm__ ("" "__atan2_finite");



extern double atanh (double) throw () __asm__ ("" "__atanh_finite");



extern double cosh (double) throw () __asm__ ("" "__cosh_finite");


extern double exp (double) throw () __asm__ ("" "__exp_finite");



extern double exp10 (double) throw () __asm__ ("" "__exp10_finite");



extern double pow10 (double) throw () __asm__ ("" "__exp10_finite");





extern double exp2 (double) throw () __asm__ ("" "__exp2_finite");



extern double fmod (double, double) throw () __asm__ ("" "__fmod_finite");



extern double hypot (double, double) throw () __asm__ ("" "__hypot_finite");





extern double j0 (double) throw () __asm__ ("" "__j0_finite");


extern double y0 (double) throw () __asm__ ("" "__y0_finite");


extern double j1 (double) throw () __asm__ ("" "__j1_finite");


extern double y1 (double) throw () __asm__ ("" "__y1_finite");


extern double jn (int, double) throw () __asm__ ("" "__jn_finite");


extern double yn (int, double) throw () __asm__ ("" "__yn_finite");




extern double lgamma_r (double, int *) throw () __asm__ ("" "__lgamma_r_finite");





extern double __lgamma_r_finite (double, int *) throw () __asm__ ("" "__lgamma_r_finite");




extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) double
__attribute__ ((__leaf__)) lgamma (double __d) throw ()
{

  return __lgamma_r_finite (__d, &signgam);




}





extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) double
__attribute__ ((__leaf__)) gamma (double __d) throw ()
{
  return __lgamma_r_finite (__d, &signgam);
}



extern double log (double) throw () __asm__ ("" "__log_finite");


extern double log10 (double) throw () __asm__ ("" "__log10_finite");



extern double log2 (double) throw () __asm__ ("" "__log2_finite");



extern double pow (double, double) throw () __asm__ ("" "__pow_finite");



extern double remainder (double, double) throw () __asm__ ("" "__remainder_finite");
# 185 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 3 4
extern double scalb (double, double) throw () __asm__ ("" "__scalb_finite");



extern double sinh (double) throw () __asm__ ("" "__sinh_finite");


extern double sqrt (double) throw () __asm__ ("" "__sqrt_finite");



extern double
__gamma_r_finite (double, int *);

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) double
__attribute__ ((__leaf__)) tgamma (double __d) throw ()
{
  int __local_signgam = 0;
  double __res = __gamma_r_finite (__d, &__local_signgam);
  return __local_signgam < 0 ? -__res : __res;
}
# 656 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 672 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 1 3 4
# 57 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 3 4
extern float acosf (float) throw () __asm__ ("" "__acosf_finite");



extern float acoshf (float) throw () __asm__ ("" "__acoshf_finite");



extern float asinf (float) throw () __asm__ ("" "__asinf_finite");


extern float atan2f (float, float) throw () __asm__ ("" "__atan2f_finite");



extern float atanhf (float) throw () __asm__ ("" "__atanhf_finite");



extern float coshf (float) throw () __asm__ ("" "__coshf_finite");


extern float expf (float) throw () __asm__ ("" "__expf_finite");



extern float exp10f (float) throw () __asm__ ("" "__exp10f_finite");



extern float pow10f (float) throw () __asm__ ("" "__exp10f_finite");





extern float exp2f (float) throw () __asm__ ("" "__exp2f_finite");



extern float fmodf (float, float) throw () __asm__ ("" "__fmodf_finite");



extern float hypotf (float, float) throw () __asm__ ("" "__hypotf_finite");





extern float j0f (float) throw () __asm__ ("" "__j0f_finite");


extern float y0f (float) throw () __asm__ ("" "__y0f_finite");


extern float j1f (float) throw () __asm__ ("" "__j1f_finite");


extern float y1f (float) throw () __asm__ ("" "__y1f_finite");


extern float jnf (int, float) throw () __asm__ ("" "__jnf_finite");


extern float ynf (int, float) throw () __asm__ ("" "__ynf_finite");




extern float lgammaf_r (float, int *) throw () __asm__ ("" "__lgammaf_r_finite");





extern float __lgammaf_r_finite (float, int *) throw () __asm__ ("" "__lgammaf_r_finite");




extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) float
__attribute__ ((__leaf__)) lgammaf (float __d) throw ()
{

  return __lgammaf_r_finite (__d, &signgam);




}





extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) float
__attribute__ ((__leaf__)) gammaf (float __d) throw ()
{
  return __lgammaf_r_finite (__d, &signgam);
}



extern float logf (float) throw () __asm__ ("" "__logf_finite");


extern float log10f (float) throw () __asm__ ("" "__log10f_finite");



extern float log2f (float) throw () __asm__ ("" "__log2f_finite");



extern float powf (float, float) throw () __asm__ ("" "__powf_finite");



extern float remainderf (float, float) throw () __asm__ ("" "__remainderf_finite");
# 189 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 3 4
extern float sinhf (float) throw () __asm__ ("" "__sinhf_finite");


extern float sqrtf (float) throw () __asm__ ("" "__sqrtf_finite");



extern float
__gammaf_r_finite (float, int *);

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) float
__attribute__ ((__leaf__)) tgammaf (float __d) throw ()
{
  int __local_signgam = 0;
  float __res = __gammaf_r_finite (__d, &__local_signgam);
  return __local_signgam < 0 ? -__res : __res;
}
# 673 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 686 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 1 3 4
# 57 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 3 4
extern long double acosl (long double) throw () __asm__ ("" "__acosl_finite");



extern long double acoshl (long double) throw () __asm__ ("" "__acoshl_finite");



extern long double asinl (long double) throw () __asm__ ("" "__asinl_finite");


extern long double atan2l (long double, long double) throw () __asm__ ("" "__atan2l_finite");



extern long double atanhl (long double) throw () __asm__ ("" "__atanhl_finite");



extern long double coshl (long double) throw () __asm__ ("" "__coshl_finite");


extern long double expl (long double) throw () __asm__ ("" "__expl_finite");



extern long double exp10l (long double) throw () __asm__ ("" "__exp10l_finite");



extern long double pow10l (long double) throw () __asm__ ("" "__exp10l_finite");





extern long double exp2l (long double) throw () __asm__ ("" "__exp2l_finite");



extern long double fmodl (long double, long double) throw () __asm__ ("" "__fmodl_finite");



extern long double hypotl (long double, long double) throw () __asm__ ("" "__hypotl_finite");





extern long double j0l (long double) throw () __asm__ ("" "__j0l_finite");


extern long double y0l (long double) throw () __asm__ ("" "__y0l_finite");


extern long double j1l (long double) throw () __asm__ ("" "__j1l_finite");


extern long double y1l (long double) throw () __asm__ ("" "__y1l_finite");


extern long double jnl (int, long double) throw () __asm__ ("" "__jnl_finite");


extern long double ynl (int, long double) throw () __asm__ ("" "__ynl_finite");




extern long double lgammal_r (long double, int *) throw () __asm__ ("" "__lgammal_r_finite");





extern long double __lgammal_r_finite (long double, int *) throw () __asm__ ("" "__lgammal_r_finite");




extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) long double
__attribute__ ((__leaf__)) lgammal (long double __d) throw ()
{

  return __lgammal_r_finite (__d, &signgam);




}





extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) long double
__attribute__ ((__leaf__)) gammal (long double __d) throw ()
{
  return __lgammal_r_finite (__d, &signgam);
}



extern long double logl (long double) throw () __asm__ ("" "__logl_finite");


extern long double log10l (long double) throw () __asm__ ("" "__log10l_finite");



extern long double log2l (long double) throw () __asm__ ("" "__log2l_finite");



extern long double powl (long double, long double) throw () __asm__ ("" "__powl_finite");



extern long double remainderl (long double, long double) throw () __asm__ ("" "__remainderl_finite");
# 189 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/math-finite.h" 3 4
extern long double sinhl (long double) throw () __asm__ ("" "__sinhl_finite");


extern long double sqrtl (long double) throw () __asm__ ("" "__sqrtl_finite");



extern long double
__gammal_r_finite (long double, int *);

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) long double
__attribute__ ((__leaf__)) tgammal (long double __d) throw ()
{
  int __local_signgam = 0;
  long double __res = __gammal_r_finite (__d, &__local_signgam);
  return __local_signgam < 0 ? -__res : __res;
}
# 687 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 2 3 4
# 783 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/math.h" 3 4
}
# 46 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cmath" 2 3
# 77 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cmath" 3
extern "C++"
{
namespace std __attribute__ ((__visibility__ ("default")))
{


  using ::acos;


  inline float
  acos(float __x)
  { return __builtin_acosf(__x); }

  inline long double
  acos(long double __x)
  { return __builtin_acosl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    acos(_Tp __x)
    { return __builtin_acos(__x); }

  using ::asin;


  inline float
  asin(float __x)
  { return __builtin_asinf(__x); }

  inline long double
  asin(long double __x)
  { return __builtin_asinl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    asin(_Tp __x)
    { return __builtin_asin(__x); }

  using ::atan;


  inline float
  atan(float __x)
  { return __builtin_atanf(__x); }

  inline long double
  atan(long double __x)
  { return __builtin_atanl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    atan(_Tp __x)
    { return __builtin_atan(__x); }

  using ::atan2;


  inline float
  atan2(float __y, float __x)
  { return __builtin_atan2f(__y, __x); }

  inline long double
  atan2(long double __y, long double __x)
  { return __builtin_atan2l(__y, __x); }


  template<typename _Tp, typename _Up>
    inline
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    atan2(_Tp __y, _Up __x)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return atan2(__type(__y), __type(__x));
    }

  using ::ceil;


  inline float
  ceil(float __x)
  { return __builtin_ceilf(__x); }

  inline long double
  ceil(long double __x)
  { return __builtin_ceill(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    ceil(_Tp __x)
    { return __builtin_ceil(__x); }

  using ::cos;


  inline float
  cos(float __x)
  { return __builtin_cosf(__x); }

  inline long double
  cos(long double __x)
  { return __builtin_cosl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    cos(_Tp __x)
    { return __builtin_cos(__x); }

  using ::cosh;


  inline float
  cosh(float __x)
  { return __builtin_coshf(__x); }

  inline long double
  cosh(long double __x)
  { return __builtin_coshl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    cosh(_Tp __x)
    { return __builtin_cosh(__x); }

  using ::exp;


  inline float
  exp(float __x)
  { return __builtin_expf(__x); }

  inline long double
  exp(long double __x)
  { return __builtin_expl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    exp(_Tp __x)
    { return __builtin_exp(__x); }

  using ::fabs;


  inline float
  fabs(float __x)
  { return __builtin_fabsf(__x); }

  inline long double
  fabs(long double __x)
  { return __builtin_fabsl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    fabs(_Tp __x)
    { return __builtin_fabs(__x); }

  using ::floor;


  inline float
  floor(float __x)
  { return __builtin_floorf(__x); }

  inline long double
  floor(long double __x)
  { return __builtin_floorl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    floor(_Tp __x)
    { return __builtin_floor(__x); }

  using ::fmod;


  inline float
  fmod(float __x, float __y)
  { return __builtin_fmodf(__x, __y); }

  inline long double
  fmod(long double __x, long double __y)
  { return __builtin_fmodl(__x, __y); }


  template<typename _Tp, typename _Up>
    inline
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    fmod(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return fmod(__type(__x), __type(__y));
    }

  using ::frexp;


  inline float
  frexp(float __x, int* __exp)
  { return __builtin_frexpf(__x, __exp); }

  inline long double
  frexp(long double __x, int* __exp)
  { return __builtin_frexpl(__x, __exp); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    frexp(_Tp __x, int* __exp)
    { return __builtin_frexp(__x, __exp); }

  using ::ldexp;


  inline float
  ldexp(float __x, int __exp)
  { return __builtin_ldexpf(__x, __exp); }

  inline long double
  ldexp(long double __x, int __exp)
  { return __builtin_ldexpl(__x, __exp); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    ldexp(_Tp __x, int __exp)
    { return __builtin_ldexp(__x, __exp); }

  using ::log;


  inline float
  log(float __x)
  { return __builtin_logf(__x); }

  inline long double
  log(long double __x)
  { return __builtin_logl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    log(_Tp __x)
    { return __builtin_log(__x); }

  using ::log10;


  inline float
  log10(float __x)
  { return __builtin_log10f(__x); }

  inline long double
  log10(long double __x)
  { return __builtin_log10l(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    log10(_Tp __x)
    { return __builtin_log10(__x); }

  using ::modf;


  inline float
  modf(float __x, float* __iptr)
  { return __builtin_modff(__x, __iptr); }

  inline long double
  modf(long double __x, long double* __iptr)
  { return __builtin_modfl(__x, __iptr); }


  using ::pow;


  inline float
  pow(float __x, float __y)
  { return __builtin_powf(__x, __y); }

  inline long double
  pow(long double __x, long double __y)
  { return __builtin_powl(__x, __y); }




  inline double
  pow(double __x, int __i)
  { return __builtin_powi(__x, __i); }

  inline float
  pow(float __x, int __n)
  { return __builtin_powif(__x, __n); }

  inline long double
  pow(long double __x, int __n)
  { return __builtin_powil(__x, __n); }



  template<typename _Tp, typename _Up>
    inline
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
    }

  using ::sin;


  inline float
  sin(float __x)
  { return __builtin_sinf(__x); }

  inline long double
  sin(long double __x)
  { return __builtin_sinl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sin(_Tp __x)
    { return __builtin_sin(__x); }

  using ::sinh;


  inline float
  sinh(float __x)
  { return __builtin_sinhf(__x); }

  inline long double
  sinh(long double __x)
  { return __builtin_sinhl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sinh(_Tp __x)
    { return __builtin_sinh(__x); }

  using ::sqrt;


  inline float
  sqrt(float __x)
  { return __builtin_sqrtf(__x); }

  inline long double
  sqrt(long double __x)
  { return __builtin_sqrtl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sqrt(_Tp __x)
    { return __builtin_sqrt(__x); }

  using ::tan;


  inline float
  tan(float __x)
  { return __builtin_tanf(__x); }

  inline long double
  tan(long double __x)
  { return __builtin_tanl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    tan(_Tp __x)
    { return __builtin_tan(__x); }

  using ::tanh;


  inline float
  tanh(float __x)
  { return __builtin_tanhf(__x); }

  inline long double
  tanh(long double __x)
  { return __builtin_tanhl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    tanh(_Tp __x)
    { return __builtin_tanh(__x); }


}
# 536 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cmath" 3
namespace std __attribute__ ((__visibility__ ("default")))
{

# 846 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cmath" 3
  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    fpclassify(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_fpclassify(0, 1, 4,
      3, 2, __type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isfinite(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isfinite(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isinf(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isinf(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isnan(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isnan(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isnormal(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isnormal(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    signbit(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_signbit(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isgreater(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isgreater(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isgreaterequal(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isgreaterequal(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isless(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isless(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    islessequal(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_islessequal(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    islessgreater(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_islessgreater(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isunordered(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isunordered(__type(__f1), __type(__f2));
    }




}
# 1917 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cmath" 3
}
# 31 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdarg" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdarg" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdarg" 3



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stdarg.h" 1 3 4
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 99 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 44 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdarg" 2 3
# 53 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdarg" 3
namespace std
{
  using ::va_list;
}
# 32 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstddef" 1 3
# 42 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstddef" 3
       
# 43 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstddef" 3







# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 149 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 3 4
typedef long int ptrdiff_t;
# 51 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstddef" 2 3
# 33 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdio" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdio" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdio" 3


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/libc-header-start.h" 1 3 4
# 28 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 2 3 4

extern "C" {



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 2 3 4


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/__FILE.h" 1 3 4



struct _IO_FILE;
typedef struct _IO_FILE __FILE;
# 37 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/FILE.h" 1 3 4



struct _IO_FILE;


typedef struct _IO_FILE FILE;
# 38 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 2 3 4



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 1 3 4
# 31 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/_G_config.h" 1 3 4
# 15 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/_G_config.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 16 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/_G_config.h" 2 3 4

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/__mbstate_t.h" 1 3 4
# 13 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/__mbstate_t.h" 3 4
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 18 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/_G_config.h" 2 3 4




typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 32 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 2 3 4
# 145 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;




typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 173 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 241 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 289 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
  __off64_t _offset;







  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;

  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};





struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 333 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);




extern "C" {


extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 429 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) throw ();
extern int _IO_ferror (_IO_FILE *__fp) throw ();

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) throw ();
extern void _IO_funlockfile (_IO_FILE *) throw ();
extern int _IO_ftrylockfile (_IO_FILE *) throw ();
# 458 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) throw ();
# 520 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/libio.h" 3 4
}
# 42 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 2 3 4
# 78 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
typedef _G_fpos_t fpos_t;




typedef _G_fpos64_t fpos64_t;
# 131 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdio_lim.h" 1 3 4
# 132 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;






extern int remove (const char *__filename) throw ();

extern int rename (const char *__old, const char *__new) throw ();



extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) throw ();







extern FILE *tmpfile (void) ;
# 169 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern FILE *tmpfile64 (void) ;



extern char *tmpnam (char *__s) throw () ;




extern char *tmpnam_r (char *__s) throw () ;
# 190 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     throw () __attribute__ ((__malloc__)) ;







extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);
# 213 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 223 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fcloseall (void);
# 232 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 256 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern FILE *fopen64 (const char *__restrict __filename,
        const char *__restrict __modes) ;
extern FILE *freopen64 (const char *__restrict __filename,
   const char *__restrict __modes,
   FILE *__restrict __stream) ;




extern FILE *fdopen (int __fd, const char *__modes) throw () ;





extern FILE *fopencookie (void *__restrict __magic_cookie,
     const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) throw () ;




extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  throw () ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) throw () ;





extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) throw ();



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) throw ();




extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) throw ();


extern void setlinebuf (FILE *__stream) throw ();







extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) throw ();





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) throw ();



extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 3, 0)));





extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
        __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
         const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
       const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;




extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));







extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) throw ();
# 420 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__scanf__, 2, 0)));
# 477 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);
# 495 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 506 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 517 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);
# 537 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);







extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 577 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));
# 587 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 603 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;







extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 662 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fputs_unlocked (const char *__restrict __s,
      FILE *__restrict __stream);
# 673 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);







extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);
# 707 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 731 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 750 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);



extern void clearerr (FILE *__stream) throw ();

extern int feof (FILE *__stream) throw () ;

extern int ferror (FILE *__stream) throw () ;



extern void clearerr_unlocked (FILE *__stream) throw ();
extern int feof_unlocked (FILE *__stream) throw () ;
extern int ferror_unlocked (FILE *__stream) throw () ;







extern void perror (const char *__s);





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/sys_errlist.h" 1 3 4
# 26 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];
# 782 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) throw () ;




extern int fileno_unlocked (FILE *__stream) throw () ;
# 800 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) throw ();





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       const char *__restrict __format,
       __gnuc_va_list __args)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) throw ();



extern int ftrylockfile (FILE *__stream) throw () ;


extern void funlockfile (FILE *__stream) throw ();
# 859 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdio.h" 1 3 4
# 35 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdio.h" 3 4
extern __inline __attribute__ ((__gnu_inline__)) int
vprintf (const char *__restrict __fmt, __gnuc_va_list __arg)
{
  return vfprintf (stdout, __fmt, __arg);
}



extern __inline __attribute__ ((__gnu_inline__)) int
getchar (void)
{
  return _IO_getc (stdin);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fgetc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}





extern __inline __attribute__ ((__gnu_inline__)) int
getc_unlocked (FILE *__fp)
{
  return (__builtin_expect (((__fp)->_IO_read_ptr >= (__fp)->_IO_read_end), 0) ? __uflow (__fp) : *(unsigned char *) (__fp)->_IO_read_ptr++);
}


extern __inline __attribute__ ((__gnu_inline__)) int
getchar_unlocked (void)
{
  return (__builtin_expect (((stdin)->_IO_read_ptr >= (stdin)->_IO_read_end), 0) ? __uflow (stdin) : *(unsigned char *) (stdin)->_IO_read_ptr++);
}




extern __inline __attribute__ ((__gnu_inline__)) int
putchar (int __c)
{
  return _IO_putc (__c, stdout);
}




extern __inline __attribute__ ((__gnu_inline__)) int
fputc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) int
putc_unlocked (int __c, FILE *__stream)
{
  return (__builtin_expect (((__stream)->_IO_write_ptr >= (__stream)->_IO_write_end), 0) ? __overflow (__stream, (unsigned char) (__c)) : (unsigned char) (*(__stream)->_IO_write_ptr++ = (__c)));
}


extern __inline __attribute__ ((__gnu_inline__)) int
putchar_unlocked (int __c)
{
  return (__builtin_expect (((stdout)->_IO_write_ptr >= (stdout)->_IO_write_end), 0) ? __overflow (stdout, (unsigned char) (__c)) : (unsigned char) (*(stdout)->_IO_write_ptr++ = (__c)));
}





extern __inline __attribute__ ((__gnu_inline__)) __ssize_t
getline (char **__lineptr, size_t *__n, FILE *__stream)
{
  return __getdelim (__lineptr, __n, '\n', __stream);
}





extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__leaf__)) feof_unlocked (FILE *__stream) throw ()
{
  return (((__stream)->_flags & 0x10) != 0);
}


extern __inline __attribute__ ((__gnu_inline__)) int
__attribute__ ((__leaf__)) ferror_unlocked (FILE *__stream) throw ()
{
  return (((__stream)->_flags & 0x20) != 0);
}
# 860 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 2 3 4
# 868 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdio.h" 3 4
}
# 43 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdio" 2 3
# 96 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdio" 3
namespace std
{
  using ::FILE;
  using ::fpos_t;

  using ::clearerr;
  using ::fclose;
  using ::feof;
  using ::ferror;
  using ::fflush;
  using ::fgetc;
  using ::fgetpos;
  using ::fgets;
  using ::fopen;
  using ::fprintf;
  using ::fputc;
  using ::fputs;
  using ::fread;
  using ::freopen;
  using ::fscanf;
  using ::fseek;
  using ::fsetpos;
  using ::ftell;
  using ::fwrite;
  using ::getc;
  using ::getchar;


  using ::gets;

  using ::perror;
  using ::printf;
  using ::putc;
  using ::putchar;
  using ::puts;
  using ::remove;
  using ::rename;
  using ::rewind;
  using ::scanf;
  using ::setbuf;
  using ::setvbuf;
  using ::sprintf;
  using ::sscanf;
  using ::tmpfile;

  using ::tmpnam;

  using ::ungetc;
  using ::vfprintf;
  using ::vprintf;
  using ::vsprintf;
}
# 157 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdio" 3
namespace __gnu_cxx
{
# 175 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdio" 3
  using ::snprintf;
  using ::vfscanf;
  using ::vscanf;
  using ::vsnprintf;
  using ::vsscanf;

}

namespace std
{
  using ::__gnu_cxx::snprintf;
  using ::__gnu_cxx::vfscanf;
  using ::__gnu_cxx::vscanf;
  using ::__gnu_cxx::vsnprintf;
  using ::__gnu_cxx::vsscanf;
}
# 34 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstdlib" 3
# 35 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstring" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstring" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstring" 3


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 1 3 4
# 26 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/libc-header-start.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 2 3 4

extern "C" {




# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 2 3 4
# 42 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern void *memset (void *__s, int __c, size_t __n) throw () __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



extern "C++"
{
extern void *memchr (void *__s, int __c, size_t __n)
      throw () __asm ("memchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const void *memchr (const void *__s, int __c, size_t __n)
      throw () __asm ("memchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) void *
memchr (void *__s, int __c, size_t __n) throw ()
{
  return __builtin_memchr (__s, __c, __n);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) const void *
memchr (const void *__s, int __c, size_t __n) throw ()
{
  return __builtin_memchr (__s, __c, __n);
}

}
# 98 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
extern "C++" void *rawmemchr (void *__s, int __c)
     throw () __asm ("rawmemchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const void *rawmemchr (const void *__s, int __c)
     throw () __asm ("rawmemchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));







extern "C++" void *memrchr (void *__s, int __c, size_t __n)
      throw () __asm ("memrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const void *memrchr (const void *__s, int __c, size_t __n)
      throw () __asm ("memrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 121 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (2)));






extern int strcoll_l (const char *__s1, const char *__s2, locale_t __l)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));


extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    locale_t __l) throw () __attribute__ ((__nonnull__ (2, 4)));





extern char *strdup (const char *__s)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 203 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
extern "C++"
{
extern char *strchr (char *__s, int __c)
     throw () __asm ("strchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *strchr (const char *__s, int __c)
     throw () __asm ("strchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) char *
strchr (char *__s, int __c) throw ()
{
  return __builtin_strchr (__s, __c);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) const char *
strchr (const char *__s, int __c) throw ()
{
  return __builtin_strchr (__s, __c);
}

}






extern "C++"
{
extern char *strrchr (char *__s, int __c)
     throw () __asm ("strrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *strrchr (const char *__s, int __c)
     throw () __asm ("strrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) char *
strrchr (char *__s, int __c) throw ()
{
  return __builtin_strrchr (__s, __c);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) const char *
strrchr (const char *__s, int __c) throw ()
{
  return __builtin_strrchr (__s, __c);
}

}
# 260 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
extern "C++" char *strchrnul (char *__s, int __c)
     throw () __asm ("strchrnul") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const char *strchrnul (const char *__s, int __c)
     throw () __asm ("strchrnul") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 272 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
extern size_t strcspn (const char *__s, const char *__reject)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern "C++"
{
extern char *strpbrk (char *__s, const char *__accept)
     throw () __asm ("strpbrk") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern const char *strpbrk (const char *__s, const char *__accept)
     throw () __asm ("strpbrk") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) char *
strpbrk (char *__s, const char *__accept) throw ()
{
  return __builtin_strpbrk (__s, __accept);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) const char *
strpbrk (const char *__s, const char *__accept) throw ()
{
  return __builtin_strpbrk (__s, __accept);
}

}






extern "C++"
{
extern char *strstr (char *__haystack, const char *__needle)
     throw () __asm ("strstr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern const char *strstr (const char *__haystack, const char *__needle)
     throw () __asm ("strstr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) char *
strstr (char *__haystack, const char *__needle) throw ()
{
  return __builtin_strstr (__haystack, __needle);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) const char *
strstr (const char *__haystack, const char *__needle) throw ()
{
  return __builtin_strstr (__haystack, __needle);
}

}







extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (2)));



extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));





extern "C++" char *strcasestr (char *__haystack, const char *__needle)
     throw () __asm ("strcasestr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern "C++" const char *strcasestr (const char *__haystack,
         const char *__needle)
     throw () __asm ("strcasestr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 368 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
extern void *memmem (const void *__haystack, size_t __haystacklen,
       const void *__needle, size_t __needlelen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern size_t strlen (const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern size_t strnlen (const char *__string, size_t __maxlen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));




extern char *strerror (int __errnum) throw ();
# 420 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2))) ;





extern char *strerror_l (int __errnum, locale_t __l) throw ();



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/strings.h" 1 3 4
# 23 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/strings.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 24 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/strings.h" 2 3 4






extern "C" {



extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern void bcopy (const void *__src, void *__dest, size_t __n)
  throw () __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));



extern "C++"
{
extern char *index (char *__s, int __c)
     throw () __asm ("index") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *index (const char *__s, int __c)
     throw () __asm ("index") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) char *
index (char *__s, int __c) throw ()
{
  return __builtin_index (__s, __c);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) const char *
index (const char *__s, int __c) throw ()
{
  return __builtin_index (__s, __c);
}

}







extern "C++"
{
extern char *rindex (char *__s, int __c)
     throw () __asm ("rindex") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *rindex (const char *__s, int __c)
     throw () __asm ("rindex") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));


extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) char *
rindex (char *__s, int __c) throw ()
{
  return __builtin_rindex (__s, __c);
}

extern __inline __attribute__ ((__always_inline__)) __attribute__ ((__gnu_inline__)) const char *
rindex (const char *__s, int __c) throw ()
{
  return __builtin_rindex (__s, __c);
}

}
# 104 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/strings.h" 3 4
extern int ffs (int __i) throw () __attribute__ ((__const__));





extern int ffsl (long int __l) throw () __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     throw () __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));






extern int strcasecmp_l (const char *__s1, const char *__s2, locale_t __loc)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));



extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, locale_t __loc)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));


}
# 432 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 2 3 4



extern void explicit_bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));



extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) throw ();


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) throw () __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));







extern "C++" char *basename (char *__filename)
     throw () __asm ("basename") __attribute__ ((__nonnull__ (1)));
extern "C++" const char *basename (const char *__filename)
     throw () __asm ("basename") __attribute__ ((__nonnull__ (1)));
# 498 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/string.h" 3 4
}
# 43 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstring" 2 3
# 71 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstring" 3
namespace std __attribute__ ((__visibility__ ("default")))
{


  using ::memchr;
  using ::memcmp;
  using ::memcpy;
  using ::memmove;
  using ::memset;
  using ::strcat;
  using ::strcmp;
  using ::strcoll;
  using ::strcpy;
  using ::strcspn;
  using ::strerror;
  using ::strlen;
  using ::strncat;
  using ::strncmp;
  using ::strncpy;
  using ::strspn;
  using ::strtok;
  using ::strxfrm;
  using ::strchr;
  using ::strpbrk;
  using ::strrchr;
  using ::strstr;
# 120 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cstring" 3

}
# 36 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cctype" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cctype" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cctype" 3


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/ctype.h" 1 3 4
# 28 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/ctype.h" 3 4
extern "C" {
# 46 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/ctype.h" 3 4
enum
{
  _ISupper = ((0) < 8 ? ((1 << (0)) << 8) : ((1 << (0)) >> 8)),
  _ISlower = ((1) < 8 ? ((1 << (1)) << 8) : ((1 << (1)) >> 8)),
  _ISalpha = ((2) < 8 ? ((1 << (2)) << 8) : ((1 << (2)) >> 8)),
  _ISdigit = ((3) < 8 ? ((1 << (3)) << 8) : ((1 << (3)) >> 8)),
  _ISxdigit = ((4) < 8 ? ((1 << (4)) << 8) : ((1 << (4)) >> 8)),
  _ISspace = ((5) < 8 ? ((1 << (5)) << 8) : ((1 << (5)) >> 8)),
  _ISprint = ((6) < 8 ? ((1 << (6)) << 8) : ((1 << (6)) >> 8)),
  _ISgraph = ((7) < 8 ? ((1 << (7)) << 8) : ((1 << (7)) >> 8)),
  _ISblank = ((8) < 8 ? ((1 << (8)) << 8) : ((1 << (8)) >> 8)),
  _IScntrl = ((9) < 8 ? ((1 << (9)) << 8) : ((1 << (9)) >> 8)),
  _ISpunct = ((10) < 8 ? ((1 << (10)) << 8) : ((1 << (10)) >> 8)),
  _ISalnum = ((11) < 8 ? ((1 << (11)) << 8) : ((1 << (11)) >> 8))
};
# 79 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/ctype.h" 3 4
extern const unsigned short int **__ctype_b_loc (void)
     throw () __attribute__ ((__const__));
extern const __int32_t **__ctype_tolower_loc (void)
     throw () __attribute__ ((__const__));
extern const __int32_t **__ctype_toupper_loc (void)
     throw () __attribute__ ((__const__));
# 108 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/ctype.h" 3 4
extern int isalnum (int) throw ();
extern int isalpha (int) throw ();
extern int iscntrl (int) throw ();
extern int isdigit (int) throw ();
extern int islower (int) throw ();
extern int isgraph (int) throw ();
extern int isprint (int) throw ();
extern int ispunct (int) throw ();
extern int isspace (int) throw ();
extern int isupper (int) throw ();
extern int isxdigit (int) throw ();



extern int tolower (int __c) throw ();


extern int toupper (int __c) throw ();




extern int isblank (int) throw ();




extern int isctype (int __c, int __mask) throw ();






extern int isascii (int __c) throw ();



extern int toascii (int __c) throw ();



extern int _toupper (int) throw ();
extern int _tolower (int) throw ();
# 251 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/ctype.h" 3 4
extern int isalnum_l (int, locale_t) throw ();
extern int isalpha_l (int, locale_t) throw ();
extern int iscntrl_l (int, locale_t) throw ();
extern int isdigit_l (int, locale_t) throw ();
extern int islower_l (int, locale_t) throw ();
extern int isgraph_l (int, locale_t) throw ();
extern int isprint_l (int, locale_t) throw ();
extern int ispunct_l (int, locale_t) throw ();
extern int isspace_l (int, locale_t) throw ();
extern int isupper_l (int, locale_t) throw ();
extern int isxdigit_l (int, locale_t) throw ();

extern int isblank_l (int, locale_t) throw ();



extern int __tolower_l (int __c, locale_t __l) throw ();
extern int tolower_l (int __c, locale_t __l) throw ();


extern int __toupper_l (int __c, locale_t __l) throw ();
extern int toupper_l (int __c, locale_t __l) throw ();
# 327 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/ctype.h" 3 4
}
# 43 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cctype" 2 3
# 62 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/cctype" 3
namespace std
{
  using ::isalnum;
  using ::isalpha;
  using ::iscntrl;
  using ::isdigit;
  using ::isgraph;
  using ::islower;
  using ::isprint;
  using ::ispunct;
  using ::isspace;
  using ::isupper;
  using ::isxdigit;
  using ::tolower;
  using ::toupper;
}
# 37 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ctime" 1 3
# 39 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ctime" 3
       
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ctime" 3


# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 1 3 4
# 29 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stddef.h" 1 3 4
# 30 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 2 3 4



# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/time.h" 1 3 4
# 73 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/time.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/timex.h" 1 3 4
# 26 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/timex.h" 3 4
struct timex
{
  unsigned int modes;
  __syscall_slong_t offset;
  __syscall_slong_t freq;
  __syscall_slong_t maxerror;
  __syscall_slong_t esterror;
  int status;
  __syscall_slong_t constant;
  __syscall_slong_t precision;
  __syscall_slong_t tolerance;
  struct timeval time;
  __syscall_slong_t tick;
  __syscall_slong_t ppsfreq;
  __syscall_slong_t jitter;
  int shift;
  __syscall_slong_t stabil;
  __syscall_slong_t jitcnt;
  __syscall_slong_t calcnt;
  __syscall_slong_t errcnt;
  __syscall_slong_t stbcnt;

  int tai;


  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32; int :32;
  int :32; int :32; int :32;
};
# 74 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/time.h" 2 3 4

extern "C" {


extern int clock_adjtime (__clockid_t __clock_id, struct timex *__utx) throw ();

}
# 34 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 2 3 4





# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/struct_tm.h" 1 3 4






struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;


  long int tm_gmtoff;
  const char *tm_zone;




};
# 40 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 2 3 4
# 48 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/types/struct_itimerspec.h" 1 3 4







struct itimerspec
  {
    struct timespec it_interval;
    struct timespec it_value;
  };
# 49 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 2 3 4
struct sigevent;
# 68 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 3 4
extern "C" {



extern clock_t clock (void) throw ();


extern time_t time (time_t *__timer) throw ();


extern double difftime (time_t __time1, time_t __time0)
     throw () __attribute__ ((__const__));


extern time_t mktime (struct tm *__tp) throw ();





extern size_t strftime (char *__restrict __s, size_t __maxsize,
   const char *__restrict __format,
   const struct tm *__restrict __tp) throw ();




extern char *strptime (const char *__restrict __s,
         const char *__restrict __fmt, struct tm *__tp)
     throw ();






extern size_t strftime_l (char *__restrict __s, size_t __maxsize,
     const char *__restrict __format,
     const struct tm *__restrict __tp,
     locale_t __loc) throw ();



extern char *strptime_l (const char *__restrict __s,
    const char *__restrict __fmt, struct tm *__tp,
    locale_t __loc) throw ();





extern struct tm *gmtime (const time_t *__timer) throw ();



extern struct tm *localtime (const time_t *__timer) throw ();




extern struct tm *gmtime_r (const time_t *__restrict __timer,
       struct tm *__restrict __tp) throw ();



extern struct tm *localtime_r (const time_t *__restrict __timer,
          struct tm *__restrict __tp) throw ();




extern char *asctime (const struct tm *__tp) throw ();


extern char *ctime (const time_t *__timer) throw ();






extern char *asctime_r (const struct tm *__restrict __tp,
   char *__restrict __buf) throw ();


extern char *ctime_r (const time_t *__restrict __timer,
        char *__restrict __buf) throw ();




extern char *__tzname[2];
extern int __daylight;
extern long int __timezone;




extern char *tzname[2];



extern void tzset (void) throw ();



extern int daylight;
extern long int timezone;





extern int stime (const time_t *__when) throw ();
# 196 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 3 4
extern time_t timegm (struct tm *__tp) throw ();


extern time_t timelocal (struct tm *__tp) throw ();


extern int dysize (int __year) throw () __attribute__ ((__const__));
# 211 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 3 4
extern int nanosleep (const struct timespec *__requested_time,
        struct timespec *__remaining);



extern int clock_getres (clockid_t __clock_id, struct timespec *__res) throw ();


extern int clock_gettime (clockid_t __clock_id, struct timespec *__tp) throw ();


extern int clock_settime (clockid_t __clock_id, const struct timespec *__tp)
     throw ();






extern int clock_nanosleep (clockid_t __clock_id, int __flags,
       const struct timespec *__req,
       struct timespec *__rem);


extern int clock_getcpuclockid (pid_t __pid, clockid_t *__clock_id) throw ();




extern int timer_create (clockid_t __clock_id,
    struct sigevent *__restrict __evp,
    timer_t *__restrict __timerid) throw ();


extern int timer_delete (timer_t __timerid) throw ();


extern int timer_settime (timer_t __timerid, int __flags,
     const struct itimerspec *__restrict __value,
     struct itimerspec *__restrict __ovalue) throw ();


extern int timer_gettime (timer_t __timerid, struct itimerspec *__value)
     throw ();


extern int timer_getoverrun (timer_t __timerid) throw ();





extern int timespec_get (struct timespec *__ts, int __base)
     throw () __attribute__ ((__nonnull__ (1)));
# 280 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 3 4
extern int getdate_err;
# 289 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 3 4
extern struct tm *getdate (const char *__string);
# 303 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/time.h" 3 4
extern int getdate_r (const char *__restrict __string,
        struct tm *__restrict __resbufp);


}
# 43 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ctime" 2 3
# 58 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/include/c++/7.3.0/ctime" 3
namespace std
{
  using ::clock_t;
  using ::time_t;
  using ::tm;

  using ::clock;
  using ::difftime;
  using ::mktime;
  using ::time;
  using ::asctime;
  using ::ctime;
  using ::gmtime;
  using ::localtime;
  using ::strftime;
}
# 38 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stdint.h" 1 3 4
# 9 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stdint.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 1 3 4
# 26 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/libc-header-start.h" 1 3 4
# 27 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 2 3 4

# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/wchar.h" 1 3 4
# 29 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 2 3 4
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/wordsize.h" 1 3 4
# 30 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 2 3 4







# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdint-uintn.h" 1 3 4
# 24 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/bits/stdint-uintn.h" 3 4
typedef __uint8_t uint8_t;
typedef __uint16_t uint16_t;
typedef __uint32_t uint32_t;
typedef __uint64_t uint64_t;
# 38 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 2 3 4





typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;

typedef long int int_least64_t;






typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;

typedef unsigned long int uint_least64_t;
# 68 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 3 4
typedef signed char int_fast8_t;

typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
# 81 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 3 4
typedef unsigned char uint_fast8_t;

typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
# 97 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 3 4
typedef long int intptr_t;


typedef unsigned long int uintptr_t;
# 111 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/stdint.h" 3 4
typedef __intmax_t intmax_t;
typedef __uintmax_t uintmax_t;
# 10 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/lib/gcc/mips64el-loongson-linux/7.3.0/include/stdint.h" 2 3 4
# 40 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/memory.h" 1 3 4
# 41 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/assert.h" 1 3 4
# 64 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/assert.h" 3 4
extern "C" {


extern void __assert_fail (const char *__assertion, const char *__file,
      unsigned int __line, const char *__function)
     throw () __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, const char *__file,
      unsigned int __line, const char *__function)
     throw () __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     throw () __attribute__ ((__noreturn__));


}
# 42 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2

# 1 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h" 1
# 29 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
# 1 "/home/loongson/chenzeshuai/x265_v2.6/build/linux/x265_config.h" 1
# 30 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h" 2


# 31 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
extern "C" {




typedef struct x265_encoder x265_encoder;



typedef struct x265_picyuv x265_picyuv;
# 53 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
typedef enum
{
    NAL_UNIT_CODED_SLICE_TRAIL_N = 0,
    NAL_UNIT_CODED_SLICE_TRAIL_R,
    NAL_UNIT_CODED_SLICE_TSA_N,
    NAL_UNIT_CODED_SLICE_TLA_R,
    NAL_UNIT_CODED_SLICE_STSA_N,
    NAL_UNIT_CODED_SLICE_STSA_R,
    NAL_UNIT_CODED_SLICE_RADL_N,
    NAL_UNIT_CODED_SLICE_RADL_R,
    NAL_UNIT_CODED_SLICE_RASL_N,
    NAL_UNIT_CODED_SLICE_RASL_R,
    NAL_UNIT_CODED_SLICE_BLA_W_LP = 16,
    NAL_UNIT_CODED_SLICE_BLA_W_RADL,
    NAL_UNIT_CODED_SLICE_BLA_N_LP,
    NAL_UNIT_CODED_SLICE_IDR_W_RADL,
    NAL_UNIT_CODED_SLICE_IDR_N_LP,
    NAL_UNIT_CODED_SLICE_CRA,
    NAL_UNIT_VPS = 32,
    NAL_UNIT_SPS,
    NAL_UNIT_PPS,
    NAL_UNIT_ACCESS_UNIT_DELIMITER,
    NAL_UNIT_EOS,
    NAL_UNIT_EOB,
    NAL_UNIT_FILLER_DATA,
    NAL_UNIT_PREFIX_SEI,
    NAL_UNIT_SUFFIX_SEI,
    NAL_UNIT_INVALID = 64,
} NalUnitType;






typedef struct x265_nal
{
    uint32_t type;
    uint32_t sizeBytes;
    uint8_t* payload;
} x265_nal;



typedef struct x265_lookahead_data
{
    int64_t plannedSatd[250 + 1];
    uint32_t *vbvCost;
    uint32_t *intraVbvCost;
    uint32_t *satdForVbv;
    uint32_t *intraSatdForVbv;
    int keyframe;
    int lastMiniGopBFrame;
    int plannedType[250 + 1];
    int64_t dts;
} x265_lookahead_data;


typedef struct x265_analysis_data
{
    int64_t satdCost;
    uint32_t frameRecordSize;
    uint32_t poc;
    uint32_t sliceType;
    uint32_t numCUsInFrame;
    uint32_t numPartitions;
    uint32_t depthBytes;
    int bScenecut;
    void* wt;
    void* interData;
    void* intraData;
    uint32_t numCuInHeight;
    x265_lookahead_data lookahead;
    uint8_t* modeFlag[2];
} x265_analysis_data;


typedef struct x265_cu_stats
{
    double percentSkipCu[4];
    double percentMergeCu[4];
    double percentIntraDistribution[4][3];
    double percentInterDistribution[4][3];
    double percentIntraNxN;


} x265_cu_stats;



typedef struct x265_pu_stats
{
    double percentSkipPu[4];
    double percentIntraPu[4];
    double percentAmpPu[4];
    double percentInterPu[4][3];
    double percentMergePu[4][3];
    double percentNxN;


} x265_pu_stats;


typedef struct x265_analysis_2Pass
{
    uint32_t poc;
    uint32_t frameRecordSize;
    void* analysisFramedata;
}x265_analysis_2Pass;


typedef struct x265_frame_stats
{
    double qp;
    double rateFactor;
    double psnrY;
    double psnrU;
    double psnrV;
    double psnr;
    double ssim;
    double decideWaitTime;
    double row0WaitTime;
    double wallTime;
    double refWaitWallTime;
    double totalCTUTime;
    double stallTime;
    double avgWPP;
    double avgLumaDistortion;
    double avgChromaDistortion;
    double avgPsyEnergy;
    double avgResEnergy;
    double avgLumaLevel;
    double bufferFill;
    uint64_t bits;
    int encoderOrder;
    int poc;
    int countRowBlocks;
    int list0POC[16];
    int list1POC[16];
    uint16_t maxLumaLevel;
    uint16_t minLumaLevel;

    uint16_t maxChromaULevel;
    uint16_t minChromaULevel;
    double avgChromaULevel;


    uint16_t maxChromaVLevel;
    uint16_t minChromaVLevel;
    double avgChromaVLevel;

    char sliceType;
    int bScenecut;
    double ipCostRatio;
    int frameLatency;
    x265_cu_stats cuStats;
    x265_pu_stats puStats;
    double totalFrameTime;
} x265_frame_stats;

typedef struct x265_ctu_info_t
{
    int32_t ctuAddress;
    int32_t ctuPartitions[64];
    void* ctuInfo;
} x265_ctu_info_t;

typedef enum
{
    NO_CTU_INFO = 0,
    HAS_CTU_INFO = 1,
    CTU_INFO_CHANGE = 2,
}CTUInfo;

typedef enum
{
    NO_INFO = 0,
    AVC_INFO = 1,
}MVRefineType;
# 240 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
typedef enum
{
    BUFFERING_PERIOD = 0,
    PICTURE_TIMING = 1,
    PAN_SCAN_RECT = 2,
    FILLER_PAYLOAD = 3,
    USER_DATA_REGISTERED_ITU_T_T35 = 4,
    USER_DATA_UNREGISTERED = 5,
    RECOVERY_POINT = 6,
    SCENE_INFO = 9,
    FULL_FRAME_SNAPSHOT = 15,
    PROGRESSIVE_REFINEMENT_SEGMENT_START = 16,
    PROGRESSIVE_REFINEMENT_SEGMENT_END = 17,
    FILM_GRAIN_CHARACTERISTICS = 19,
    POST_FILTER_HINT = 22,
    TONE_MAPPING_INFO = 23,
    FRAME_PACKING = 45,
    DISPLAY_ORIENTATION = 47,
    SOP_DESCRIPTION = 128,
    ACTIVE_PARAMETER_SETS = 129,
    DECODING_UNIT_INFO = 130,
    TEMPORAL_LEVEL0_INDEX = 131,
    DECODED_PICTURE_HASH = 132,
    SCALABLE_NESTING = 133,
    REGION_REFRESH_INFO = 134,
    MASTERING_DISPLAY_INFO = 137,
    CONTENT_LIGHT_LEVEL_INFO = 144,
} SEIPayloadType;

typedef struct x265_sei_payload
{
    int payloadSize;
    SEIPayloadType payloadType;
    uint8_t* payload;
} x265_sei_payload;

typedef struct x265_sei
{
    int numPayloads;
    x265_sei_payload *payloads;
} x265_sei;



typedef struct x265_picture
{

    int64_t pts;



    int64_t dts;




    void* userData;



    void* planes[3];


    int stride[3];
# 312 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int bitDepth;



    int sliceType;


    int poc;




    int colorSpace;



    int forceqp;
# 341 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    x265_analysis_data analysisData;






    float *quantOffsets;


    x265_frame_stats frameData;


    x265_sei userSEI;




    void* rcData;

    uint64_t framesize;

    int height;

    x265_analysis_2Pass analysis2Pass;
} x265_picture;

typedef enum
{
    X265_DIA_SEARCH,
    X265_HEX_SEARCH,
    X265_UMH_SEARCH,
    X265_STAR_SEARCH,
    X265_SEA,
    X265_FULL_SEARCH
} X265_ME_METHODS;
# 492 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
typedef struct x265_cli_csp
{
    int planes;
    int width[3];
    int height[3];
} x265_cli_csp;

static const x265_cli_csp x265_cli_csps[] =
{
    { 1, { 0, 0, 0 }, { 0, 0, 0 } },
    { 3, { 0, 1, 1 }, { 0, 1, 1 } },
    { 3, { 0, 1, 1 }, { 0, 0, 0 } },
    { 3, { 0, 0, 0 }, { 0, 0, 0 } },
    { 2, { 0, 0 }, { 0, 1 } },
    { 2, { 0, 0 }, { 0, 0 } },
};


typedef enum
{
    X265_RC_ABR,
    X265_RC_CQP,
    X265_RC_CRF
} X265_RC_METHODS;


typedef struct x265_sliceType_stats
{
    double avgQp;
    double bitrate;
    double psnrY;
    double psnrU;
    double psnrV;
    double ssim;
    uint32_t numPics;
} x265_sliceType_stats;


typedef struct x265_stats
{
    double globalPsnrY;
    double globalPsnrU;
    double globalPsnrV;
    double globalPsnr;
    double globalSsim;
    double elapsedEncodeTime;
    double elapsedVideoTime;
    double bitrate;
    uint64_t accBits;
    uint32_t encodedPictureCount;
    uint32_t totalWPFrames;
    x265_sliceType_stats statsI;
    x265_sliceType_stats statsP;
    x265_sliceType_stats statsB;
    uint16_t maxCLL;
    uint16_t maxFALL;
} x265_stats;


static const char * const x265_motion_est_names[] = { "dia", "hex", "umh", "star", "sea", "full", 0 };
static const char * const x265_source_csp_names[] = { "i400", "i420", "i422", "i444", "nv12", "nv16", 0 };
static const char * const x265_video_format_names[] = { "component", "pal", "ntsc", "secam", "mac", "unknown", 0 };
static const char * const x265_fullrange_names[] = { "limited", "full", 0 };
static const char * const x265_colorprim_names[] = { "reserved", "bt709", "unknown", "reserved", "bt470m", "bt470bg", "smpte170m", "smpte240m", "film", "bt2020", "smpte428", "smpte431", "smpte432", 0 };
static const char * const x265_transfer_names[] = { "reserved", "bt709", "unknown", "reserved", "bt470m", "bt470bg", "smpte170m", "smpte240m", "linear", "log100",
                                                    "log316", "iec61966-2-4", "bt1361e", "iec61966-2-1", "bt2020-10", "bt2020-12",
                                                    "smpte2084", "smpte428", "arib-std-b67", 0 };
static const char * const x265_colmatrix_names[] = { "gbr", "bt709", "unknown", "", "fcc", "bt470bg", "smpte170m", "smpte240m",
                                                     "ycgco", "bt2020nc", "bt2020c", "smpte2085", "chroma-derived-nc", "chroma-derived-c", "ictcp", 0 };
static const char * const x265_sar_names[] = { "unknown", "1:1", "12:11", "10:11", "16:11", "40:33", "24:11", "20:11",
                                               "32:11", "80:33", "18:11", "15:11", "64:33", "160:99", "4:3", "3:2", "2:1", 0 };
static const char * const x265_interlace_names[] = { "prog", "tff", "bff", 0 };
static const char * const x265_analysis_names[] = { "off", "save", "load", 0 };



typedef struct x265_zone
{
    int startFrame, endFrame;
    int bForceQp;
    int qp;
    float bitrateFactor;
} x265_zone;







typedef struct x265_param
{




    int cpuid;
# 607 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int frameNumThreads;
# 648 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    const char* numaPools;




    int bEnableWavefront;







    int bDistributeModeAnalysis;





    int bDistributeMotionEstimation;




    int bLogCuStats;


    int bEnablePsnr;


    int bEnableSsim;



    int logLevel;



    int csvLogLevel;





    const char* csvfn;






    int internalBitDepth;



    int internalCsp;


    uint32_t fpsNum;
    uint32_t fpsDenom;




    int sourceWidth;




    int sourceHeight;





    int interlaceMode;





    int totalFrames;
# 743 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int levelIdc;



    int bHighTier;




    int uhdBluray;






    int maxNumReferences;



    int bAllowNonConformance;





    int bRepeatHeaders;




    int bAnnexB;



    int bEnableAccessUnitDelimiters;



    int bEmitHRDSEI;





    int bEmitInfoSEI;






    int decodedPictureHashSEI;






    int bEnableTemporalSubLayers;
# 811 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int bOpenGOP;


    int keyframeMin;




    int keyframeMax;
# 830 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int bframes;





    int bFrameAdaptive;






    int bBPyramid;





    int bFrameBias;







    int lookaheadDepth;
# 867 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int lookaheadSlices;



    int scenecutThreshold;




    int bIntraRefresh;
# 887 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    uint32_t maxCUSize;




    uint32_t minCUSize;




    int bEnableRectInter;






    int bEnableAMP;






    uint32_t maxTUSize;





    uint32_t tuQTMaxInterDepth;





    uint32_t tuQTMaxIntraDepth;



    uint32_t limitTU;
# 936 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int rdoqLevel;





    int bEnableSignHiding;





    int bEnableTransformSkip;



    int noiseReductionIntra;



    int noiseReductionInter;
# 968 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    const char *scalingLists;







    int bEnableConstrainedIntra;




    int bEnableStrongIntraSmoothing;
# 990 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    uint32_t maxNumMergeCand;
# 999 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    uint32_t limitReferences;


    uint32_t limitModes;
# 1011 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int searchMethod;



    int subpelRefine;
# 1025 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
    int searchRange;


    int bEnableTemporalMvp;







    int bEnableWeightedPred;


    int bEnableWeightedBiPred;

    int bSourceReferenceEstimation;





    int bEnableLoopFilter;



    int deblockingFilterTCOffset;



    int deblockingFilterBetaOffset;






    int bEnableSAO;







    int bSaoNonDeblocked;







    int rdLevel;



    int bEnableEarlySkip;



    int bEnableRecursionSkip;


    int bEnableFastIntra;




    int bEnableTSkipFast;





    int bCULossless;





    int bIntraInBFrames;






    int rdPenalty;





    double psyRd;




    double psyRdoq;





    int bEnableRdRefine;





    int analysisReuseMode;


    const char* analysisReuseFileName;






    int bLossless;




    int cbQpOffset;




    int crQpOffset;

    struct
    {


        int rateControlMode;




        int qp;



        int bitrate;




        double qCompress;



        double ipFactor;
        double pbFactor;



        double rfConstant;


        int qpStep;





        int aqMode;



        double aqStrength;



        int vbvMaxBitrate;


        int vbvBufferSize;




        double vbvBufferInit;




        int cuTree;


        double rfConstantMax;


        double rfConstantMin;



        int bStatWrite;


        int bStatRead;



        const char* statFileName;


        double qblur;


        double complexityBlur;


        int bEnableSlowFirstPass;


        int zoneCount;
        x265_zone* zones;







        const char* lambdaFileName;



        int bStrictCbr;





        uint32_t qgSize;


        int bEnableGrain;


        int qpMax;


        int qpMin;


        int bEnableConstVbv;
    } rc;


    struct
    {



        int aspectRatioIdc;




        int sarWidth;




        int sarHeight;




        int bEnableOverscanInfoPresentFlag;





        int bEnableOverscanAppropriateFlag;





        int bEnableVideoSignalTypePresentFlag;



        int videoFormat;




        int bEnableVideoFullRangeFlag;




        int bEnableColorDescriptionPresentFlag;



        int colorPrimaries;



        int transferCharacteristics;



        int matrixCoeffs;



        int bEnableChromaLocInfoPresentFlag;



        int chromaSampleLocTypeTopField;



        int chromaSampleLocTypeBottomField;




        int bEnableDefaultDisplayWindowFlag;



        int defDispWinLeftOffset;



        int defDispWinRightOffset;



        int defDispWinTopOffset;



        int defDispWinBottomOffset;
    } vui;







    const char* masteringDisplayColorVolume;





    uint16_t maxCLL;





    uint16_t maxFALL;




    uint16_t minLuma;




    uint16_t maxLuma;


    int log2MaxPocLsb;


    int bEmitVUITimingInfo;


    int bEmitVUIHRDInfo;


    unsigned int maxSlices;


    int bOptQpPPS;


    int bOptRefListLengthPPS;


    int bMultiPassOptRPS;


    double scenecutBias;





    int lookaheadThreads;

    int bOptCUDeltaQP;

    int analysisMultiPassRefine;

    int analysisMultiPassDistortion;

    int bAQMotion;



    int bSsimRd;


    double dynamicRd;




    int bEmitHDRSEI;



    int bHDROpt;




    int analysisReuseLevel;




    int bLimitSAO;


    const char* toneMapFile;



    int bDhdr10opt;


    int bCTUInfo;


    int bUseRcStats;


    int scaleFactor;


    int intraRefine;


    int interRefine;


    int mvRefine;


    uint32_t maxLog2CUSize;


    uint32_t maxCUDepth;


    uint32_t unitSizeDepth;


    uint32_t num4x4Partitions;


    int bUseAnalysisFile;


    FILE* csvfpt;


    int forceFlush;


    int bEnableSplitRdSkip;


    int bDisableLookahead;



    int bLowPassDct;





    double vbvBufferEnd;



    double vbvEndFrameAdjust;


    int bMVType;


    int bCopyPicToFrame;
} x265_param;






x265_param *x265_param_alloc(void);




void x265_param_free(x265_param *);



void x265_param_default(x265_param *param);
# 1564 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
int x265_param_parse(x265_param *p, const char *name, const char *value);

static const char * const x265_profile_names[] = {

    "main", "main10", "mainstillpicture", "msp",


    "main-intra", "main10-intra",
    "main444-8", "main444-intra", "main444-stillpicture",

    "main422-10", "main422-10-intra",
    "main444-10", "main444-10-intra",

    "main12", "main12-intra",
    "main422-12", "main422-12-intra",
    "main444-12", "main444-12-intra",

    "main444-16-intra", "main444-16-stillpicture",
    0
};
# 1592 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
int x265_param_apply_profile(x265_param *, const char *profile);







static const char * const x265_preset_names[] = { "ultrafast", "superfast", "veryfast", "faster", "fast", "medium", "slow", "slower", "veryslow", "placebo", 0 };
# 1612 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
static const char * const x265_tune_names[] = { "psnr", "ssim", "grain", "zerolatency", "fastdecode", 0 };


int x265_param_default_preset(x265_param *, const char *preset, const char *tune);






x265_picture *x265_picture_alloc(void);




void x265_picture_free(x265_picture *);





void x265_picture_init(x265_param *param, x265_picture *pic);






 extern const int x265_max_bit_depth;



 extern const char *x265_version_str;



 extern const char *x265_build_info_str;
# 1659 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
x265_encoder* x265_encoder_open_146(x265_param *);







void x265_encoder_parameters(x265_encoder *, x265_param *);






int x265_encoder_headers(x265_encoder *, x265_nal **pp_nal, uint32_t *pi_nal);
# 1684 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
int x265_encoder_encode(x265_encoder *encoder, x265_nal **pp_nal, uint32_t *pi_nal, x265_picture *pic_in, x265_picture *pic_out);
# 1699 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
int x265_encoder_reconfig(x265_encoder *, x265_param *);



void x265_encoder_get_stats(x265_encoder *encoder, x265_stats *, uint32_t statsSizeBytes);




void x265_encoder_log(x265_encoder *encoder, int argc, char **argv);



void x265_encoder_close(x265_encoder *);
# 1728 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
int x265_encoder_intra_refresh(x265_encoder *);






int x265_encoder_ctu_info(x265_encoder *, int poc, x265_ctu_info_t** ctu);





int x265_get_slicetype_poc_and_scenecut(x265_encoder *encoder, int *slicetype, int *poc, int* sceneCut);




int x265_get_ref_frame_list(x265_encoder *encoder, x265_picyuv**, x265_picyuv**, int, int);




int x265_set_analysis_data(x265_encoder *encoder, x265_analysis_data *analysis_data, int poc, uint32_t cuBytes);



void x265_cleanup(void);






FILE* x265_csvlog_open(const x265_param *);



void x265_csvlog_frame(const x265_param *, const x265_picture *);




void x265_csvlog_encode(x265_encoder *encoder, const x265_stats *, int argc, char** argv);



void x265_dither_image(x265_picture *, int picWidth, int picHeight, int16_t *errorBuf, int bitDepth);
# 1785 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
typedef struct x265_api
{
    int api_major_version;
    int api_build_number;
    int sizeof_param;
    int sizeof_picture;
    int sizeof_analysis_data;
    int sizeof_zone;
    int sizeof_stats;

    int bit_depth;
    const char* version_str;
    const char* build_info_str;


    x265_param* (*param_alloc)(void);
    void (*param_free)(x265_param*);
    void (*param_default)(x265_param*);
    int (*param_parse)(x265_param*, const char*, const char*);
    int (*param_apply_profile)(x265_param*, const char*);
    int (*param_default_preset)(x265_param*, const char*, const char *);
    x265_picture* (*picture_alloc)(void);
    void (*picture_free)(x265_picture*);
    void (*picture_init)(x265_param*, x265_picture*);
    x265_encoder* (*encoder_open)(x265_param*);
    void (*encoder_parameters)(x265_encoder*, x265_param*);
    int (*encoder_reconfig)(x265_encoder*, x265_param*);
    int (*encoder_headers)(x265_encoder*, x265_nal**, uint32_t*);
    int (*encoder_encode)(x265_encoder*, x265_nal**, uint32_t*, x265_picture*, x265_picture*);
    void (*encoder_get_stats)(x265_encoder*, x265_stats*, uint32_t);
    void (*encoder_log)(x265_encoder*, int, char**);
    void (*encoder_close)(x265_encoder*);
    void (*cleanup)(void);

    int sizeof_frame_stats;
    int (*encoder_intra_refresh)(x265_encoder*);
    int (*encoder_ctu_info)(x265_encoder*, int, x265_ctu_info_t**);
    int (*get_slicetype_poc_and_scenecut)(x265_encoder*, int*, int*, int*);
    int (*get_ref_frame_list)(x265_encoder*, x265_picyuv**, x265_picyuv**, int, int);
    FILE* (*csvlog_open)(const x265_param*);
    void (*csvlog_frame)(const x265_param*, const x265_picture*);
    void (*csvlog_encode)(x265_encoder*, const x265_stats*, int, char**);
    void (*dither_image)(x265_picture*, int, int, int16_t*, int);
    int (*set_analysis_data)(x265_encoder *encoder, x265_analysis_data *analysis_data, int poc, uint32_t cuBytes);

} x265_api;
# 1851 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
const x265_api* x265_api_get_146(int bitDepth);
# 1874 "/home/loongson/chenzeshuai/x265_v2.6/source/./x265.h"
const x265_api* x265_api_query(int bitDepth, int apiVersion, int* err);







static const char * const x265_api_query_errnames[] = {
    "api queried from libx265",
    "libx265 version is not compatible with this application",
    "unable to bind a libx265 with requested bit depth",
    "unable to bind x265_api_query from libx265",
    "libx265 has an invalid bitdepth"
};


}
# 44 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 95 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h"
# 1 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/inttypes.h" 1 3 4
# 266 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/inttypes.h" 3 4

# 266 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/inttypes.h" 3 4
extern "C" {




typedef struct
  {
    long int quot;
    long int rem;
  } imaxdiv_t;
# 290 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/inttypes.h" 3 4
extern intmax_t imaxabs (intmax_t __n) throw () __attribute__ ((__const__));


extern imaxdiv_t imaxdiv (intmax_t __numer, intmax_t __denom)
      throw () __attribute__ ((__const__));


extern intmax_t strtoimax (const char *__restrict __nptr,
      char **__restrict __endptr, int __base) throw ();


extern uintmax_t strtoumax (const char *__restrict __nptr,
       char ** __restrict __endptr, int __base) throw ();


extern intmax_t wcstoimax (const wchar_t *__restrict __nptr,
      wchar_t **__restrict __endptr, int __base)
     throw ();


extern uintmax_t wcstoumax (const wchar_t *__restrict __nptr,
       wchar_t ** __restrict __endptr, int __base)
     throw ();





extern long int __strtol_internal (const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, int __group)
  throw () __attribute__ ((__nonnull__ (1))) ;

extern __inline __attribute__ ((__gnu_inline__)) intmax_t
__attribute__ ((__leaf__)) strtoimax (const char *__restrict nptr, char **__restrict endptr, int base) throw ()

{
  return __strtol_internal (nptr, endptr, base, 0);
}

extern unsigned long int __strtoul_internal (const char *__restrict __nptr,
          char ** __restrict __endptr,
          int __base, int __group)
  throw () __attribute__ ((__nonnull__ (1))) ;

extern __inline __attribute__ ((__gnu_inline__)) uintmax_t
__attribute__ ((__leaf__)) strtoumax (const char *__restrict nptr, char **__restrict endptr, int base) throw ()

{
  return __strtoul_internal (nptr, endptr, base, 0);
}

extern long int __wcstol_internal (const wchar_t * __restrict __nptr,
       wchar_t **__restrict __endptr,
       int __base, int __group)
  throw () __attribute__ ((__nonnull__ (1))) ;

extern __inline __attribute__ ((__gnu_inline__)) intmax_t
__attribute__ ((__leaf__)) wcstoimax (const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base) throw ()

{
  return __wcstol_internal (nptr, endptr, base, 0);
}

extern unsigned long int __wcstoul_internal (const wchar_t *
          __restrict __nptr,
          wchar_t **
          __restrict __endptr,
          int __base, int __group)
  throw () __attribute__ ((__nonnull__ (1))) ;

extern __inline __attribute__ ((__gnu_inline__)) uintmax_t
__attribute__ ((__leaf__)) wcstoumax (const wchar_t *__restrict nptr, wchar_t **__restrict endptr, int base) throw ()

{
  return __wcstoul_internal (nptr, endptr, base, 0);
}
# 432 "/opt/gcc-7.3.0-loongson-asx-rc3.1/usr/mips64el-loongson-linux/sysroot/usr/include/inttypes.h" 3 4
}
# 96 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 133 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h"

# 133 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h"
typedef uint8_t pixel;
typedef uint16_t sum_t;
typedef uint32_t sum2_t;
typedef uint32_t pixel4;
typedef int32_t ssum2_t;



typedef uint32_t sse_t;
# 163 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h"
template<typename T>
inline T x265_min(T a, T b) { return a < b ? a : b; }

template<typename T>
inline T x265_max(T a, T b) { return a > b ? a : b; }

template<typename T>
inline T x265_clip3(T minVal, T maxVal, T a) { return x265_min(x265_max(minVal, a), maxVal); }

template<typename T>
inline pixel x265_clip(T x) { return (pixel)x265_min<T>(T((1 << 8) - 1), x265_max<T>(T(0), x)); }

typedef int16_t coeff_t;
# 335 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h"
namespace x265 {

enum { SAO_NUM_OFFSET = 4 };

enum SaoMergeMode
{
    SAO_MERGE_NONE,
    SAO_MERGE_LEFT,
    SAO_MERGE_UP
};

struct SaoCtuParam
{
    SaoMergeMode mergeMode;
    int typeIdx;
    uint32_t bandPos;
    int offset[SAO_NUM_OFFSET];

    void reset()
    {
        mergeMode = SAO_MERGE_NONE;
        typeIdx = -1;
        bandPos = 0;
        offset[0] = 0;
        offset[1] = 0;
        offset[2] = 0;
        offset[3] = 0;
    }
};

struct SAOParam
{
    SaoCtuParam* ctuParam[3];
    bool bSaoFlag[2];
    int numCuInWidth;

    SAOParam()
    {
        for (int i = 0; i < 3; i++)
            ctuParam[i] = 
# 374 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 3 4
                         __null
# 374 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h"
                             ;
    }

    ~SAOParam()
    {
        delete[] ctuParam[0];
        delete[] ctuParam[1];
        delete[] ctuParam[2];
    }
};
enum TextType
{
    TEXT_LUMA = 0,
    TEXT_CHROMA_U = 1,
    TEXT_CHROMA_V = 2,
    MAX_NUM_COMPONENT = 3
};


enum ScanType
{
    SCAN_DIAG = 0,
    SCAN_HOR = 1,
    SCAN_VER = 2,
    NUM_SCAN_TYPE = 3
};

enum SignificanceMapContextType
{
    CONTEXT_TYPE_4x4 = 0,
    CONTEXT_TYPE_8x8 = 1,
    CONTEXT_TYPE_NxN = 2,
    CONTEXT_NUMBER_OF_TYPES = 3
};


void extendPicBorder(pixel* recon, intptr_t stride, int width, int height, int marginX, int marginY);


int64_t x265_mdate(void);


void general_log(const x265_param* param, const char* caller, int level, const char* fmt, ...);
# 428 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h"
int x265_exp2fix8(double x);

double x265_ssim2dB(double ssim);
double x265_qScale2qp(double qScale);
double x265_qp2qScale(double qp);
uint32_t x265_picturePlaneSize(int csp, int width, int height, int plane);

void* x265_malloc(size_t size);
void x265_free(void *ptr);
char* x265_slurp_file(const char *filename);


void x265_setup_primitives(x265_param* param);
void x265_report_simd(x265_param* param);
}

# 1 "/home/loongson/chenzeshuai/x265_v2.6/source/common/constants.h" 1
# 28 "/home/loongson/chenzeshuai/x265_v2.6/source/common/constants.h"
# 1 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 1
# 29 "/home/loongson/chenzeshuai/x265_v2.6/source/common/constants.h" 2

namespace x265 {


extern double x265_lambda_tab[69 + 1];
extern double x265_lambda2_tab[69 + 1];
extern const uint16_t x265_chroma_lambda2_offset_tab[36 + 1];

enum { ChromaQPMappingTableSize = 70 };
enum { AngleMapping422TableSize = 36 };

extern const uint8_t g_chromaScale[ChromaQPMappingTableSize];
extern const uint8_t g_chroma422IntraAngleMappingTable[AngleMapping422TableSize];


extern const uint32_t g_zscanToRaster[((1 << (6 - 2)) * (1 << (6 - 2)))];
extern const uint32_t g_rasterToZscan[((1 << (6 - 2)) * (1 << (6 - 2)))];


extern const uint8_t g_zscanToPelX[((1 << (6 - 2)) * (1 << (6 - 2)))];
extern const uint8_t g_zscanToPelY[((1 << (6 - 2)) * (1 << (6 - 2)))];
extern const uint8_t g_log2Size[(1 << 6) + 1];


extern uint32_t g_maxLog2CUSize;
extern uint32_t g_maxCUSize;
extern uint32_t g_maxCUDepth;
extern uint32_t g_unitSizeDepth;
extern uint32_t g_maxSlices;

extern const int16_t g_t4[4][4];
extern const int16_t g_t8[8][8];
extern const int16_t g_t16[16][16];
extern const int16_t g_t32[32][32];
# 73 "/home/loongson/chenzeshuai/x265_v2.6/source/common/constants.h"
extern const int16_t g_lumaFilter[4][8];
extern const int16_t g_chromaFilter[8][4];





extern const uint16_t* const g_scanOrder[NUM_SCAN_TYPE][4];
extern const uint16_t* const g_scanOrderCG[NUM_SCAN_TYPE][4];
extern const uint16_t g_scan8x8diag[8 * 8];
extern const uint16_t g_scan4x4[NUM_SCAN_TYPE + 1][4 * 4] __attribute__((aligned(16)));
extern const uint8_t g_lastCoeffTable[32];
extern const uint8_t g_goRiceRange[5];


extern const uint8_t g_lpsTable[64][4];
extern const uint8_t x265_exp2_lut[64];


extern const uint8_t g_intraFilterFlags[35];

extern const uint32_t g_depthScanIdx[8][8];

extern const double g_YUVtoRGB_BT2020[3][3];




extern const double g_ST2084_PQTable[940 - 64 + 1];

}
# 445 "/home/loongson/chenzeshuai/x265_v2.6/source/common/common.h" 2
# 25 "/home/loongson/chenzeshuai/x265_v2.6/source/common/intrapred.cpp" 2
# 1 "/home/loongson/chenzeshuai/x265_v2.6/source/common/primitives.h" 1
# 34 "/home/loongson/chenzeshuai/x265_v2.6/source/common/primitives.h"
# 1 "/home/loongson/chenzeshuai/x265_v2.6/source/common/cpu.h" 1
# 36 "/home/loongson/chenzeshuai/x265_v2.6/source/common/cpu.h"
extern "C" void x265_cpu_emms(void);
extern "C" void x265_safe_intel_cpu_indicator_init(void);
# 52 "/home/loongson/chenzeshuai/x265_v2.6/source/common/cpu.h"
namespace x265 {
uint32_t cpu_detect(void);

struct cpu_name_t
{
    char name[16];
    uint32_t flags;
};

extern const cpu_name_t cpu_names[];
}
# 35 "/home/loongson/chenzeshuai/x265_v2.6/source/common/primitives.h" 2

namespace x265 {


enum LumaPU
{

    LUMA_4x4, LUMA_8x8, LUMA_16x16, LUMA_32x32, LUMA_64x64,

    LUMA_8x4, LUMA_4x8,
    LUMA_16x8, LUMA_8x16,
    LUMA_32x16, LUMA_16x32,
    LUMA_64x32, LUMA_32x64,

    LUMA_16x12, LUMA_12x16, LUMA_16x4, LUMA_4x16,
    LUMA_32x24, LUMA_24x32, LUMA_32x8, LUMA_8x32,
    LUMA_64x48, LUMA_48x64, LUMA_64x16, LUMA_16x64,
    NUM_PU_SIZES
};

enum LumaCU
{
    BLOCK_4x4,
    BLOCK_8x8,
    BLOCK_16x16,
    BLOCK_32x32,
    BLOCK_64x64,
    NUM_CU_SIZES
};

enum { NUM_TR_SIZE = 4 };





enum ChromaPU420
{
    CHROMA_420_2x2, CHROMA_420_4x4, CHROMA_420_8x8, CHROMA_420_16x16, CHROMA_420_32x32,
    CHROMA_420_4x2, CHROMA_420_2x4,
    CHROMA_420_8x4, CHROMA_420_4x8,
    CHROMA_420_16x8, CHROMA_420_8x16,
    CHROMA_420_32x16, CHROMA_420_16x32,
    CHROMA_420_8x6, CHROMA_420_6x8, CHROMA_420_8x2, CHROMA_420_2x8,
    CHROMA_420_16x12, CHROMA_420_12x16, CHROMA_420_16x4, CHROMA_420_4x16,
    CHROMA_420_32x24, CHROMA_420_24x32, CHROMA_420_32x8, CHROMA_420_8x32,
};

enum ChromaCU420
{
    BLOCK_420_2x2,
    BLOCK_420_4x4,
    BLOCK_420_8x8,
    BLOCK_420_16x16,
    BLOCK_420_32x32
};

enum ChromaPU422
{
    CHROMA_422_2x4, CHROMA_422_4x8, CHROMA_422_8x16, CHROMA_422_16x32, CHROMA_422_32x64,
    CHROMA_422_4x4, CHROMA_422_2x8,
    CHROMA_422_8x8, CHROMA_422_4x16,
    CHROMA_422_16x16, CHROMA_422_8x32,
    CHROMA_422_32x32, CHROMA_422_16x64,
    CHROMA_422_8x12, CHROMA_422_6x16, CHROMA_422_8x4, CHROMA_422_2x16,
    CHROMA_422_16x24, CHROMA_422_12x32, CHROMA_422_16x8, CHROMA_422_4x32,
    CHROMA_422_32x48, CHROMA_422_24x64, CHROMA_422_32x16, CHROMA_422_8x64,
};

enum ChromaCU422
{
    BLOCK_422_2x4,
    BLOCK_422_4x8,
    BLOCK_422_8x16,
    BLOCK_422_16x32,
    BLOCK_422_32x64
};

enum IntegralSize
{
    INTEGRAL_4,
    INTEGRAL_8,
    INTEGRAL_12,
    INTEGRAL_16,
    INTEGRAL_24,
    INTEGRAL_32,
    NUM_INTEGRAL_SIZE
};

typedef int (*pixelcmp_t)(const pixel* fenc, intptr_t fencstride, const pixel* fref, intptr_t frefstride);
typedef int (*pixelcmp_ss_t)(const int16_t* fenc, intptr_t fencstride, const int16_t* fref, intptr_t frefstride);
typedef sse_t (*pixel_sse_t)(const pixel* fenc, intptr_t fencstride, const pixel* fref, intptr_t frefstride);
typedef sse_t (*pixel_sse_ss_t)(const int16_t* fenc, intptr_t fencstride, const int16_t* fref, intptr_t frefstride);
typedef sse_t (*pixel_ssd_s_t)(const int16_t* fenc, intptr_t fencstride);
typedef int(*pixelcmp_ads_t)(int encDC[], uint32_t *sums, int delta, uint16_t *costMvX, int16_t *mvs, int width, int thresh);
typedef void (*pixelcmp_x4_t)(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
typedef void (*pixelcmp_x3_t)(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
typedef void (*blockfill_s_t)(int16_t* dst, intptr_t dstride, int16_t val);

typedef void (*intra_pred_t)(pixel* dst, intptr_t dstStride, const pixel *srcPix, int dirMode, int bFilter);
typedef void (*intra_allangs_t)(pixel *dst, pixel *refPix, pixel *filtPix, int bLuma);
typedef void (*intra_filter_t)(const pixel* references, pixel* filtered);

typedef void (*cpy2Dto1D_shl_t)(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);
typedef void (*cpy2Dto1D_shr_t)(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);
typedef void (*cpy1Dto2D_shl_t)(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift);
typedef void (*cpy1Dto2D_shr_t)(int16_t* dst, const int16_t* src, intptr_t dstStride, int shift);
typedef uint32_t (*copy_cnt_t)(int16_t* coeff, const int16_t* residual, intptr_t resiStride);

typedef void (*dct_t)(const int16_t* src, int16_t* dst, intptr_t srcStride);
typedef void (*idct_t)(const int16_t* src, int16_t* dst, intptr_t dstStride);
typedef void (*denoiseDct_t)(int16_t* dctCoef, uint32_t* resSum, const uint16_t* offset, int numCoeff);

typedef void (*calcresidual_t)(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);
typedef void (*transpose_t)(pixel* dst, const pixel* src, intptr_t stride);
typedef uint32_t (*quant_t)(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff);
typedef uint32_t (*nquant_t)(const int16_t* coef, const int32_t* quantCoeff, int16_t* qCoef, int qBits, int add, int numCoeff);
typedef void (*dequant_scaling_t)(const int16_t* src, const int32_t* dequantCoef, int16_t* dst, int num, int mcqp_miper, int shift);
typedef void (*dequant_normal_t)(const int16_t* quantCoef, int16_t* coef, int num, int scale, int shift);
typedef int(*count_nonzero_t)(const int16_t* quantCoeff);
typedef void (*weightp_pp_t)(const pixel* src, pixel* dst, intptr_t stride, int width, int height, int w0, int round, int shift, int offset);
typedef void (*weightp_sp_t)(const int16_t* src, pixel* dst, intptr_t srcStride, intptr_t dstStride, int width, int height, int w0, int round, int shift, int offset);
typedef void (*scale1D_t)(pixel* dst, const pixel* src);
typedef void (*scale2D_t)(pixel* dst, const pixel* src, intptr_t stride);
typedef void (*downscale_t)(const pixel* src0, pixel* dstf, pixel* dsth, pixel* dstv, pixel* dstc,
                            intptr_t src_stride, intptr_t dst_stride, int width, int height);
typedef void (*extendCURowBorder_t)(pixel* txt, intptr_t stride, int width, int height, int marginX);
typedef void (*ssim_4x4x2_core_t)(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4]);
typedef float (*ssim_end4_t)(int sum0[5][4], int sum1[5][4], int width);
typedef uint64_t (*var_t)(const pixel* pix, intptr_t stride);
typedef void (*plane_copy_deinterleave_t)(pixel* dstu, intptr_t dstuStride, pixel* dstv, intptr_t dstvStride, const pixel* src, intptr_t srcStride, int w, int h);

typedef void (*filter_pp_t) (const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
typedef void (*filter_hps_t) (const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
typedef void (*filter_ps_t) (const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
typedef void (*filter_sp_t) (const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
typedef void (*filter_ss_t) (const int16_t* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
typedef void (*filter_hv_pp_t) (const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int idxX, int idxY);
typedef void (*filter_p2s_t)(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);

typedef void (*copy_pp_t)(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
typedef void (*copy_sp_t)(pixel* dst, intptr_t dstStride, const int16_t* src, intptr_t srcStride);
typedef void (*copy_ps_t)(int16_t* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
typedef void (*copy_ss_t)(int16_t* dst, intptr_t dstStride, const int16_t* src, intptr_t srcStride);

typedef void (*pixel_sub_ps_t)(int16_t* dst, intptr_t dstride, const pixel* src0, const pixel* src1, intptr_t sstride0, intptr_t sstride1);
typedef void (*pixel_add_ps_t)(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
typedef void (*pixelavg_pp_t)(pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int weight);
typedef void (*addAvg_t)(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);

typedef void (*saoCuOrgE0_t)(pixel* rec, int8_t* offsetEo, int width, int8_t* signLeft, intptr_t stride);
typedef void (*saoCuOrgE1_t)(pixel* rec, int8_t* upBuff1, int8_t* offsetEo, intptr_t stride, int width);
typedef void (*saoCuOrgE2_t)(pixel* rec, int8_t* pBufft, int8_t* pBuff1, int8_t* offsetEo, int lcuWidth, intptr_t stride);
typedef void (*saoCuOrgE3_t)(pixel* rec, int8_t* upBuff1, int8_t* m_offsetEo, intptr_t stride, int startX, int endX);
typedef void (*saoCuOrgB0_t)(pixel* rec, const int8_t* offsetBo, int ctuWidth, int ctuHeight, intptr_t stride);

typedef void (*saoCuStatsBO_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count);
typedef void (*saoCuStatsE0_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int endX, int endY, int32_t *stats, int32_t *count);
typedef void (*saoCuStatsE1_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count);
typedef void (*saoCuStatsE2_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int8_t *upBuff, int endX, int endY, int32_t *stats, int32_t *count);
typedef void (*saoCuStatsE3_t)(const int16_t *diff, const pixel *rec, intptr_t stride, int8_t *upBuff1, int endX, int endY, int32_t *stats, int32_t *count);

typedef void (*sign_t)(int8_t *dst, const pixel *src1, const pixel *src2, const int endX);
typedef void (*planecopy_cp_t) (const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift);
typedef void (*planecopy_sp_t) (const uint16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift, uint16_t mask);
typedef pixel (*planeClipAndMax_t)(pixel *src, intptr_t stride, int width, int height, uint64_t *outsum, const pixel minPix, const pixel maxPix);

typedef void (*cutree_propagate_cost) (int* dst, const uint16_t* propagateIn, const int32_t* intraCosts, const uint16_t* interCosts, const int32_t* invQscales, const double* fpsFactor, int len);

typedef void (*cutree_fix8_unpack)(double *dst, uint16_t *src, int count);
typedef void (*cutree_fix8_pack)(uint16_t *dst, double *src, int count);

typedef int (*scanPosLast_t)(const uint16_t *scan, const coeff_t *coeff, uint16_t *coeffSign, uint16_t *coeffFlag, uint8_t *coeffNum, int numSig, const uint16_t* scanCG4x4, const int trSize);
typedef uint32_t (*findPosFirstLast_t)(const int16_t *dstCoeff, const intptr_t trSize, const uint16_t scanTbl[16]);

typedef uint32_t (*costCoeffNxN_t)(const uint16_t *scan, const coeff_t *coeff, intptr_t trSize, uint16_t *absCoeff, const uint8_t *tabSigCtx, uint32_t scanFlagMask, uint8_t *baseCtx, int offset, int scanPosSigOff, int subPosBase);
typedef uint32_t (*costCoeffRemain_t)(uint16_t *absCoeff, int numNonZero, int idx);
typedef uint32_t (*costC1C2Flag_t)(uint16_t *absCoeff, intptr_t numC1Flag, uint8_t *baseCtxMod, intptr_t ctxOffset);

typedef void (*pelFilterLumaStrong_t)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tcP, int32_t tcQ);
typedef void (*pelFilterChroma_t)(pixel* src, intptr_t srcStep, intptr_t offset, int32_t tc, int32_t maskP, int32_t maskQ);

typedef void (*integralv_t)(uint32_t *sum, intptr_t stride);
typedef void (*integralh_t)(uint32_t *sum, pixel *pix, intptr_t stride);



struct EncoderPrimitives
{






    struct PU
    {
        pixelcmp_t sad;
        pixelcmp_x3_t sad_x3;
        pixelcmp_x4_t sad_x4;
        pixelcmp_ads_t ads;
        pixelcmp_t satd;

        filter_pp_t luma_hpp;
        filter_hps_t luma_hps;
        filter_pp_t luma_vpp;
        filter_ps_t luma_vps;
        filter_sp_t luma_vsp;
        filter_ss_t luma_vss;
        filter_hv_pp_t luma_hvpp;

        pixelavg_pp_t pixelavg_pp;
        addAvg_t addAvg;

        copy_pp_t copy_pp;
        filter_p2s_t convert_p2s;
    }
    pu[NUM_PU_SIZES];







    struct CU
    {
        dct_t dct;
        idct_t idct;

        dct_t standard_dct;
        dct_t lowpass_dct;

        calcresidual_t calcresidual;
        pixel_sub_ps_t sub_ps;
        pixel_add_ps_t add_ps;
        blockfill_s_t blockfill_s;
        copy_cnt_t copy_cnt;
        count_nonzero_t count_nonzero;
        cpy2Dto1D_shl_t cpy2Dto1D_shl;
        cpy2Dto1D_shr_t cpy2Dto1D_shr;
        cpy1Dto2D_shl_t cpy1Dto2D_shl;
        cpy1Dto2D_shr_t cpy1Dto2D_shr;

        copy_sp_t copy_sp;
        copy_ps_t copy_ps;
        copy_ss_t copy_ss;
        copy_pp_t copy_pp;

        var_t var;

        pixel_sse_t sse_pp;
        pixel_sse_ss_t sse_ss;
        pixelcmp_t psy_cost_pp;
        pixel_ssd_s_t ssd_s;
        pixelcmp_t sa8d;

        transpose_t transpose;
        intra_allangs_t intra_pred_allangs;
        intra_filter_t intra_filter;
        intra_pred_t intra_pred[35];
    }
    cu[NUM_CU_SIZES];




    dct_t dst4x4;
    idct_t idst4x4;

    quant_t quant;
    nquant_t nquant;
    dequant_scaling_t dequant_scaling;
    dequant_normal_t dequant_normal;
    denoiseDct_t denoiseDct;
    scale1D_t scale1D_128to64;
    scale2D_t scale2D_64to32;

    ssim_4x4x2_core_t ssim_4x4x2_core;
    ssim_end4_t ssim_end_4;

    sign_t sign;
    saoCuOrgE0_t saoCuOrgE0;



    saoCuOrgE1_t saoCuOrgE1, saoCuOrgE1_2Rows;


    saoCuOrgE2_t saoCuOrgE2[2];




    saoCuOrgE3_t saoCuOrgE3[2];
    saoCuOrgB0_t saoCuOrgB0;

    saoCuStatsBO_t saoCuStatsBO;
    saoCuStatsE0_t saoCuStatsE0;
    saoCuStatsE1_t saoCuStatsE1;
    saoCuStatsE2_t saoCuStatsE2;
    saoCuStatsE3_t saoCuStatsE3;

    downscale_t frameInitLowres;
    cutree_propagate_cost propagateCost;
    cutree_fix8_unpack fix8Unpack;
    cutree_fix8_pack fix8Pack;

    extendCURowBorder_t extendRowBorder;
    planecopy_cp_t planecopy_cp;
    planecopy_sp_t planecopy_sp;
    planecopy_sp_t planecopy_sp_shl;
    planeClipAndMax_t planeClipAndMax;

    weightp_sp_t weight_sp;
    weightp_pp_t weight_pp;


    scanPosLast_t scanPosLast;
    findPosFirstLast_t findPosFirstLast;

    costCoeffNxN_t costCoeffNxN;
    costCoeffRemain_t costCoeffRemain;
    costC1C2Flag_t costC1C2Flag;

    pelFilterLumaStrong_t pelFilterLumaStrong[2];
    pelFilterChroma_t pelFilterChroma[2];

    integralv_t integral_initv[NUM_INTEGRAL_SIZE];
    integralh_t integral_inith[NUM_INTEGRAL_SIZE];
# 375 "/home/loongson/chenzeshuai/x265_v2.6/source/common/primitives.h"
    struct Chroma
    {

        struct PUChroma
        {
            pixelcmp_t satd;
            filter_pp_t filter_vpp;
            filter_ps_t filter_vps;
            filter_sp_t filter_vsp;
            filter_ss_t filter_vss;
            filter_pp_t filter_hpp;
            filter_hps_t filter_hps;
            addAvg_t addAvg;
            copy_pp_t copy_pp;
            filter_p2s_t p2s;

        }
        pu[NUM_PU_SIZES];


        struct CUChroma
        {
            pixelcmp_t sa8d;
            pixel_sse_t sse_pp;
            pixel_sub_ps_t sub_ps;
            pixel_add_ps_t add_ps;

            copy_ps_t copy_ps;
            copy_sp_t copy_sp;
            copy_ss_t copy_ss;
            copy_pp_t copy_pp;
        }
        cu[NUM_CU_SIZES];

    }
    chroma[4];
};


extern EncoderPrimitives primitives;


inline int partitionFromSizes(int width, int height)
{
    ;
    extern const uint8_t lumaPartitionMapTable[];
    int w = (width >> 2) - 1;
    int h = (height >> 2) - 1;
    int part = (int)lumaPartitionMapTable[(w << 4) + h];
    ;
    return part;
}


inline void sizesFromPartition(int part, int *width, int *height)
{
    ;
    extern const uint8_t lumaPartitionMapTable[];
    int index = 0;
    for (int i = 0; i < 256;i++)
        if (part == lumaPartitionMapTable[i])
        {
            index = i;
            break;
        }
    *width = 4 * ((index >> 4) + 1);
    *height = 4 * ((index % 16) + 1);
}

inline int partitionFromLog2Size(int log2Size)
{
    ;
    return log2Size - 2;
}

void setupCPrimitives(EncoderPrimitives &p);
void setupInstrinsicPrimitives(EncoderPrimitives &p, int cpuMask);
void setupAssemblyPrimitives(EncoderPrimitives &p, int cpuMask);
void setupAliasPrimitives(EncoderPrimitives &p);






}
# 26 "/home/loongson/chenzeshuai/x265_v2.6/source/common/intrapred.cpp" 2

using namespace x265;

namespace {

template<int tuSize>
void intraFilter(const pixel* samples, pixel* filtered)
{
    const int tuSize2 = tuSize << 1;

    pixel topLeft = samples[0], topLast = samples[tuSize2], leftLast = samples[tuSize2 + tuSize2];


    for (int i = 1; i < tuSize2; i++)
        filtered[i] = ((samples[i] << 1) + samples[i - 1] + samples[i + 1] + 2) >> 2;
    filtered[tuSize2] = topLast;


    filtered[0] = ((topLeft << 1) + samples[1] + samples[tuSize2 + 1] + 2) >> 2;


    filtered[tuSize2 + 1] = ((samples[tuSize2 + 1] << 1) + topLeft + samples[tuSize2 + 2] + 2) >> 2;
    for (int i = tuSize2 + 2; i < tuSize2 + tuSize2; i++)
        filtered[i] = ((samples[i] << 1) + samples[i - 1] + samples[i + 1] + 2) >> 2;
    filtered[tuSize2 + tuSize2] = leftLast;
}

static void dcPredFilter(const pixel* above, const pixel* left, pixel* dst, intptr_t dststride, int size)
{

    dst[0] = (pixel)((above[0] + left[0] + 2 * dst[0] + 2) >> 2);

    for (int x = 1; x < size; x++)
        dst[x] = (pixel)((above[x] + 3 * dst[x] + 2) >> 2);

    dst += dststride;
    for (int y = 1; y < size; y++)
    {
        *dst = (pixel)((left[y] + 3 * *dst + 2) >> 2);
        dst += dststride;
    }
}

template<int width>
void intra_pred_dc_c(pixel* dst, intptr_t dstStride, const pixel* srcPix, int , int bFilter)
{
    int k, l;

    int dcVal = width;
    for (int i = 0; i < width; i++)
        dcVal += srcPix[1 + i] + srcPix[2 * width + 1 + i];

    dcVal = dcVal / (width + width);
    for (k = 0; k < width; k++)
        for (l = 0; l < width; l++)
            dst[k * dstStride + l] = (pixel)dcVal;

    if (bFilter)
        dcPredFilter(srcPix + 1, srcPix + (2 * width + 1), dst, dstStride, width);
}

template<int log2Size>
void planar_pred_c(pixel* dst, intptr_t dstStride, const pixel* srcPix, int , int )
{
    const int blkSize = 1 << log2Size;

    const pixel* above = srcPix + 1;
    const pixel* left = srcPix + (2 * blkSize + 1);

    pixel topRight = above[blkSize];
    pixel bottomLeft = left[blkSize];
    for (int y = 0; y < blkSize; y++)
        for (int x = 0; x < blkSize; x++)
            dst[y * dstStride + x] = (pixel) (((blkSize - 1 - x) * left[y] + (blkSize - 1 -y) * above[x] + (x + 1) * topRight + (y + 1) * bottomLeft + blkSize) >> (log2Size + 1));
}

template<int width>
void intra_pred_ang_c(pixel* dst, intptr_t dstStride, const pixel *srcPix0, int dirMode, int bFilter)
{
    int width2 = width << 1;

    int horMode = dirMode < 18;
    pixel neighbourBuf[129];
    const pixel *srcPix = srcPix0;

    if (horMode)
    {
        neighbourBuf[0] = srcPix[0];
        for (int i = 0; i < width << 1; i++)
        {
            neighbourBuf[1 + i] = srcPix[width2 + 1 + i];
            neighbourBuf[width2 + 1 + i] = srcPix[1 + i];
        }
        srcPix = neighbourBuf;
    }


    const int8_t angleTable[17] = { -32, -26, -21, -17, -13, -9, -5, -2, 0, 2, 5, 9, 13, 17, 21, 26, 32 };
    const int16_t invAngleTable[8] = { 4096, 1638, 910, 630, 482, 390, 315, 256 };


    int angleOffset = horMode ? 10 - dirMode : dirMode - 26;
    int angle = angleTable[8 + angleOffset];


    if (!angle)
    {
        for (int y = 0; y < width; y++)
            for (int x = 0; x < width; x++)
                dst[y * dstStride + x] = srcPix[1 + x];

        if (bFilter)
        {
            int topLeft = srcPix[0], top = srcPix[1];
            for (int y = 0; y < width; y++)
                dst[y * dstStride] = x265_clip((int16_t)(top + ((srcPix[width2 + 1 + y] - topLeft) >> 1)));
        }
    }
    else
    {

        pixel refBuf[64];
        const pixel *ref;


        if (angle < 0)
        {

            int nbProjected = -((width * angle) >> 5) - 1;
            pixel *ref_pix = refBuf + nbProjected + 1;


            int invAngle = invAngleTable[- angleOffset - 1];
            int invAngleSum = 128;
            for (int i = 0; i < nbProjected; i++)
            {
                invAngleSum += invAngle;
                ref_pix[- 2 - i] = srcPix[width2 + (invAngleSum >> 8)];
            }


            for (int i = 0; i < width + 1; i++)
                ref_pix[-1 + i] = srcPix[i];
            ref = ref_pix;
        }
        else
            ref = srcPix + 1;


        int angleSum = 0;
        for (int y = 0; y < width; y++)
        {
            angleSum += angle;
            int offset = angleSum >> 5;
            int fraction = angleSum & 31;

            if (fraction)
                for (int x = 0; x < width; x++)
                    dst[y * dstStride + x] = (pixel)(((32 - fraction) * ref[offset + x] + fraction * ref[offset + x + 1] + 16) >> 5);
            else
                for (int x = 0; x < width; x++)
                    dst[y * dstStride + x] = ref[offset + x];
        }
    }


    if (horMode)
    {
        for (int y = 0; y < width - 1; y++)
        {
            for (int x = y + 1; x < width; x++)
            {
                pixel tmp = dst[y * dstStride + x];
                dst[y * dstStride + x] = dst[x * dstStride + y];
                dst[x * dstStride + y] = tmp;
            }
        }
    }
}

template<int log2Size>
void all_angs_pred_c(pixel *dest, pixel *refPix, pixel *filtPix, int bLuma)
{
    const int size = 1 << log2Size;
    for (int mode = 2; mode <= 34; mode++)
    {
        pixel *srcPix = (g_intraFilterFlags[mode] & size ? filtPix : refPix);
        pixel *out = dest + ((mode - 2) << (log2Size * 2));

        intra_pred_ang_c<size>(out, size, srcPix, mode, bLuma);


        bool modeHor = (mode < 18);


        if (modeHor)
        {
            for (int k = 0; k < size - 1; k++)
            {
                for (int l = k + 1; l < size; l++)
                {
                    pixel tmp = out[k * size + l];
                    out[k * size + l] = out[l * size + k];
                    out[l * size + k] = tmp;
                }
            }
        }
    }
}
}

namespace x265 {


void setupIntraPrimitives_c(EncoderPrimitives& p)
{
    p.cu[BLOCK_4x4].intra_filter = intraFilter<4>;
    p.cu[BLOCK_8x8].intra_filter = intraFilter<8>;
    p.cu[BLOCK_16x16].intra_filter = intraFilter<16>;
    p.cu[BLOCK_32x32].intra_filter = intraFilter<32>;

    p.cu[BLOCK_4x4].intra_pred[0] = planar_pred_c<2>;
    p.cu[BLOCK_8x8].intra_pred[0] = planar_pred_c<3>;
    p.cu[BLOCK_16x16].intra_pred[0] = planar_pred_c<4>;
    p.cu[BLOCK_32x32].intra_pred[0] = planar_pred_c<5>;

    p.cu[BLOCK_4x4].intra_pred[1] = intra_pred_dc_c<4>;
    p.cu[BLOCK_8x8].intra_pred[1] = intra_pred_dc_c<8>;
    p.cu[BLOCK_16x16].intra_pred[1] = intra_pred_dc_c<16>;
    p.cu[BLOCK_32x32].intra_pred[1] = intra_pred_dc_c<32>;

    for (int i = 2; i < 35; i++)
    {
        p.cu[BLOCK_4x4].intra_pred[i] = intra_pred_ang_c<4>;
        p.cu[BLOCK_8x8].intra_pred[i] = intra_pred_ang_c<8>;
        p.cu[BLOCK_16x16].intra_pred[i] = intra_pred_ang_c<16>;
        p.cu[BLOCK_32x32].intra_pred[i] = intra_pred_ang_c<32>;
    }

    p.cu[BLOCK_4x4].intra_pred_allangs = all_angs_pred_c<2>;
    p.cu[BLOCK_8x8].intra_pred_allangs = all_angs_pred_c<3>;
    p.cu[BLOCK_16x16].intra_pred_allangs = all_angs_pred_c<4>;
    p.cu[BLOCK_32x32].intra_pred_allangs = all_angs_pred_c<5>;
}
}
